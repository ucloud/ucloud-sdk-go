//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UMem ResizeUMemcacheGroup

package umem

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// ResizeUMemcacheGroupRequest is request schema for ResizeUMemcacheGroup action
type ResizeUMemcacheGroupRequest struct {
	request.CommonBase

	// 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// 组ID
	GroupId *string `required:"true"`

	// 内存大小, 单位:GB 目前仅支持1/2/4/8/16五种规格(暂时只支持扩容)
	Size *int `required:"true"`

	//
	ChargeType *string `required:"false"`

	// 空间类型:single(无热备),double(热备)(默认: double)
	Type *string `required:"false"`

	// 代金券ID
	CouponId *int `required:"false"`
}

// ResizeUMemcacheGroupResponse is response schema for ResizeUMemcacheGroup action
type ResizeUMemcacheGroupResponse struct {
	response.CommonBase
}

// NewResizeUMemcacheGroupRequest will create request of ResizeUMemcacheGroup action.
func (c *UMemClient) NewResizeUMemcacheGroupRequest() *ResizeUMemcacheGroupRequest {
	req := &ResizeUMemcacheGroupRequest{}

	// setup request with client config
	c.client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// ResizeUMemcacheGroup - 调整内存空间容量
func (c *UMemClient) ResizeUMemcacheGroup(req *ResizeUMemcacheGroupRequest) (*ResizeUMemcacheGroupResponse, error) {
	var err error
	var res ResizeUMemcacheGroupResponse

	err = c.client.InvokeAction("ResizeUMemcacheGroup", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
