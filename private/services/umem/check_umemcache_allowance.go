//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UMem CheckUMemcacheAllowance

package umem

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// CheckUMemcacheAllowanceRequest is request schema for CheckUMemcacheAllowance action
type CheckUMemcacheAllowanceRequest struct {
	request.CommonBase

	// 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// 创建实例的容量大小, 单位:GB 目前仅支持1/2/4/8/16五种规格
	Size *int `required:"true"`

	// 创建实例的数量，[1-10]
	Count *int `required:"true"`
}

// CheckUMemcacheAllowanceResponse is response schema for CheckUMemcacheAllowance action
type CheckUMemcacheAllowanceResponse struct {
	response.CommonBase

	// 可创建的数量
	Count int
}

// NewCheckUMemcacheAllowanceRequest will create request of CheckUMemcacheAllowance action.
func (c *UMemClient) NewCheckUMemcacheAllowanceRequest() *CheckUMemcacheAllowanceRequest {
	req := &CheckUMemcacheAllowanceRequest{}

	// setup request with client config
	c.client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// CheckUMemcacheAllowance - 检查UMemcache剩余资源
func (c *UMemClient) CheckUMemcacheAllowance(req *CheckUMemcacheAllowanceRequest) (*CheckUMemcacheAllowanceResponse, error) {
	var err error
	var res CheckUMemcacheAllowanceResponse

	err = c.client.InvokeAction("CheckUMemcacheAllowance", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
