//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UMem CheckUMemSpaceAllowance

package umem

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// CheckUMemSpaceAllowanceRequest is request schema for CheckUMemSpaceAllowance action
type CheckUMemSpaceAllowanceRequest struct {
	request.CommonBase

	// 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// 创建实例的容量大小；分布式memcache最低8G， 分布式redis最低16G，两者最高都是1000G
	Size *int `required:"true"`

	// 创建实例的数量，[1-10]
	Count *int `required:"true"`

	// redis memcache
	Protocol *string `required:"false"`
}

// CheckUMemSpaceAllowanceResponse is response schema for CheckUMemSpaceAllowance action
type CheckUMemSpaceAllowanceResponse struct {
	response.CommonBase

	// 可创建的数量
	Count int
}

// NewCheckUMemSpaceAllowanceRequest will create request of CheckUMemSpaceAllowance action.
func (c *UMemClient) NewCheckUMemSpaceAllowanceRequest() *CheckUMemSpaceAllowanceRequest {
	req := &CheckUMemSpaceAllowanceRequest{}

	// setup request with client config
	c.client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// CheckUMemSpaceAllowance - 检查分布式UMem剩余资源，包括分布式redis，分布式memcache
func (c *UMemClient) CheckUMemSpaceAllowance(req *CheckUMemSpaceAllowanceRequest) (*CheckUMemSpaceAllowanceResponse, error) {
	var err error
	var res CheckUMemSpaceAllowanceResponse

	err = c.client.InvokeAction("CheckUMemSpaceAllowance", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
