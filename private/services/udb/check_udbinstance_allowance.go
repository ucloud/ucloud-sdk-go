//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UDB CheckUDBInstanceAllowance

package udb

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// CheckUDBInstanceAllowanceRequest is request schema for CheckUDBInstanceAllowance action
type CheckUDBInstanceAllowanceRequest struct {
	request.CommonBase

	// 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// DB种类，分为SQL和NOSQL,取值分别为sql、nosql、postgresql
	ClassType *string `required:"true"`

	// 申请资源的内存限制
	MemoryLimit *int `required:"true"`

	// 申请资源的磁盘空间
	DiskSpace *int `required:"true"`

	// 是否使用SSD资源，true代表使用，false代表不使用
	UseSSD *bool `required:"true"`

	// 资源申请个数,默认为一个
	Count *int `required:"true"`

	// UDB实例的部署模式：可选值为：Normal: 普通单点实例，HA: 高可用部署实例
	InstanceMode *string `required:"true"`

	// SSD类型，可选值为"SATA"、"PCI-E"，如果UseSSD为true ，则需要指定SSD类型
	SSDType *string `required:"false"`

	// 如果是从库创建核查，需要指定SrcId
	SrcId *string `required:"false"`

	// 跨可用区备库所在可用区, 参见 [可用区列表](../summary/regionlist.html)
	BackupZone *string `required:"false"`

	// 专区ID
	UDBCId *string `required:"false"`

	// 专区里面DB升降级需要原来DB的信息
	DBId *string `required:"false"`
}

// CheckUDBInstanceAllowanceResponse is response schema for CheckUDBInstanceAllowance action
type CheckUDBInstanceAllowanceResponse struct {
	response.CommonBase

	// 资源核查部分成功情况下，成功个数
	Count int
}

// NewCheckUDBInstanceAllowanceRequest will create request of CheckUDBInstanceAllowance action.
func (c *UDBClient) NewCheckUDBInstanceAllowanceRequest() *CheckUDBInstanceAllowanceRequest {
	req := &CheckUDBInstanceAllowanceRequest{}

	// setup request with client config
	c.client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// CheckUDBInstanceAllowance - 核查UDB资源余量
func (c *UDBClient) CheckUDBInstanceAllowance(req *CheckUDBInstanceAllowanceRequest) (*CheckUDBInstanceAllowanceResponse, error) {
	var err error
	var res CheckUDBInstanceAllowanceResponse

	err = c.client.InvokeAction("CheckUDBInstanceAllowance", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
