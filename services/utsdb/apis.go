// Code is generated by ucloud-model, DO NOT EDIT IT.

package utsdb

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UTSDB API Schema

// CheckUInfluxdbAllowanceRequest is request schema for CheckUInfluxdbAllowance action
type CheckUInfluxdbAllowanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 创建实例的数量，[1-10]
	Count *int `required:"true"`

	// 核数 单位：个，范围［2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	CpuLimit *int `required:"true"`

	// 内存限制 单位：G 范围 [2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	MemoryLimit *int `required:"true"`
}

// CheckUInfluxdbAllowanceResponse is response schema for CheckUInfluxdbAllowance action
type CheckUInfluxdbAllowanceResponse struct {
	response.CommonBase

	// 可创建的数量
	Count int
}

// NewCheckUInfluxdbAllowanceRequest will create request of CheckUInfluxdbAllowance action.
func (c *UTSDBClient) NewCheckUInfluxdbAllowanceRequest() *CheckUInfluxdbAllowanceRequest {
	req := &CheckUInfluxdbAllowanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: CheckUInfluxdbAllowance

检查UInfluxdb剩余资源
*/
func (c *UTSDBClient) CheckUInfluxdbAllowance(req *CheckUInfluxdbAllowanceRequest) (*CheckUInfluxdbAllowanceResponse, error) {
	var err error
	var res CheckUInfluxdbAllowanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CheckUInfluxdbAllowance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUInfluxdbDatabaseRequest is request schema for CreateUInfluxdbDatabase action
type CreateUInfluxdbDatabaseRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// Influxdb数据库账号
	AccoutName *string `required:"false"`

	// Influxdb创建的数据库的名称
	DatabaseName *string `required:"true"`

	// Influxdb数据库的描述
	Description *string `required:"false"`

	// 数据保留策略，以天为单位，比如（1d，2d，3d等，inf为永久保留策略，默认为inf）
	RetentionPolicy *string `required:"false"`

	// 实例ID
	UInfluxdbId *string `required:"true"`
}

// CreateUInfluxdbDatabaseResponse is response schema for CreateUInfluxdbDatabase action
type CreateUInfluxdbDatabaseResponse struct {
	response.CommonBase
}

// NewCreateUInfluxdbDatabaseRequest will create request of CreateUInfluxdbDatabase action.
func (c *UTSDBClient) NewCreateUInfluxdbDatabaseRequest() *CreateUInfluxdbDatabaseRequest {
	req := &CreateUInfluxdbDatabaseRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUInfluxdbDatabase

创建Influxdb数据库
*/
func (c *UTSDBClient) CreateUInfluxdbDatabase(req *CreateUInfluxdbDatabaseRequest) (*CreateUInfluxdbDatabaseResponse, error) {
	var err error
	var res CreateUInfluxdbDatabaseResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUInfluxdbDatabase", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUInfluxdbDatabaseRPRequest is request schema for CreateUInfluxdbDatabaseRP action
type CreateUInfluxdbDatabaseRPRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 要创建RP的数据库
	DatabaseName *string `required:"true"`

	// 数据保留策略，以天为单位，比如（1d，2d，3d等，inf为永久保留策略，默认为inf）
	RetentionPolicy *string `required:"true"`

	// 保留策略名
	RetentionPolicyName *string `required:"true"`

	// 实例ID
	UInfluxdbId *string `required:"true"`
}

// CreateUInfluxdbDatabaseRPResponse is response schema for CreateUInfluxdbDatabaseRP action
type CreateUInfluxdbDatabaseRPResponse struct {
	response.CommonBase

	// 如果执行失败, 失败的错误消息
	Message string
}

// NewCreateUInfluxdbDatabaseRPRequest will create request of CreateUInfluxdbDatabaseRP action.
func (c *UTSDBClient) NewCreateUInfluxdbDatabaseRPRequest() *CreateUInfluxdbDatabaseRPRequest {
	req := &CreateUInfluxdbDatabaseRPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUInfluxdbDatabaseRP

给指定的database创建一个保留策略，最多可以创建10个RP
*/
func (c *UTSDBClient) CreateUInfluxdbDatabaseRP(req *CreateUInfluxdbDatabaseRPRequest) (*CreateUInfluxdbDatabaseRPResponse, error) {
	var err error
	var res CreateUInfluxdbDatabaseRPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUInfluxdbDatabaseRP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUInfluxdbInstanceRequest is request schema for CreateUInfluxdbInstance action
type CreateUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 默认账户
	AccountName *string `required:"true"`

	// 付费类型，后付费阶段固定为：后付费（PostPaid）
	ChargeType *string `required:"true"`

	// 使用的代金券id
	CouponId *string `required:"false"`

	// 核数 单位：个，范围［2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	CpuLimit *int `required:"true"`

	// 数据库名称
	DatabaseName *string `required:"true"`

	// 内存限制 单位：G 范围 [2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	MemoryLimit *int `required:"true"`

	// 实例名称，长度(6<=size<=63)
	Name *string `required:"true"`

	// 默认账户的密码，需要 base64 编码
	Password *string `required:"true"`

	// 购买时长，默认值1
	Quantity *int `required:"true"`

	// 子网 id
	SubnetId *string `required:"true"`

	// 业务组名称
	Tag *string `required:"false"`

	// VPC id
	VPCId *string `required:"true"`
}

// CreateUInfluxdbInstanceResponse is response schema for CreateUInfluxdbInstance action
type CreateUInfluxdbInstanceResponse struct {
	response.CommonBase

	// 返回的实例id
	UInfluxdbId string
}

// NewCreateUInfluxdbInstanceRequest will create request of CreateUInfluxdbInstance action.
func (c *UTSDBClient) NewCreateUInfluxdbInstanceRequest() *CreateUInfluxdbInstanceRequest {
	req := &CreateUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUInfluxdbInstance

创建UInfluxdb实例
*/
func (c *UTSDBClient) CreateUInfluxdbInstance(req *CreateUInfluxdbInstanceRequest) (*CreateUInfluxdbInstanceResponse, error) {
	var err error
	var res CreateUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUInfluxdbDatabaseRequest is request schema for DeleteUInfluxdbDatabase action
type DeleteUInfluxdbDatabaseRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 数据库名称
	DatabaseName *string `required:"true"`

	// 实例id
	UInfluxdbId *string `required:"true"`
}

// DeleteUInfluxdbDatabaseResponse is response schema for DeleteUInfluxdbDatabase action
type DeleteUInfluxdbDatabaseResponse struct {
	response.CommonBase
}

// NewDeleteUInfluxdbDatabaseRequest will create request of DeleteUInfluxdbDatabase action.
func (c *UTSDBClient) NewDeleteUInfluxdbDatabaseRequest() *DeleteUInfluxdbDatabaseRequest {
	req := &DeleteUInfluxdbDatabaseRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUInfluxdbDatabase

删除Influxdb实例的数据库
*/
func (c *UTSDBClient) DeleteUInfluxdbDatabase(req *DeleteUInfluxdbDatabaseRequest) (*DeleteUInfluxdbDatabaseResponse, error) {
	var err error
	var res DeleteUInfluxdbDatabaseResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUInfluxdbDatabase", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUInfluxdbDatabaseRPRequest is request schema for DeleteUInfluxdbDatabaseRP action
type DeleteUInfluxdbDatabaseRPRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 要删除的RP所在数据库
	DatabaseName *string `required:"true"`

	// 要删除的保留策略
	RetentionPolicyName *string `required:"true"`

	// 实例ID
	UInfluxdbId *string `required:"true"`
}

// DeleteUInfluxdbDatabaseRPResponse is response schema for DeleteUInfluxdbDatabaseRP action
type DeleteUInfluxdbDatabaseRPResponse struct {
	response.CommonBase

	// 如果执行失败, 失败的错误消息
	Message string
}

// NewDeleteUInfluxdbDatabaseRPRequest will create request of DeleteUInfluxdbDatabaseRP action.
func (c *UTSDBClient) NewDeleteUInfluxdbDatabaseRPRequest() *DeleteUInfluxdbDatabaseRPRequest {
	req := &DeleteUInfluxdbDatabaseRPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUInfluxdbDatabaseRP

删除指定数据库下面的一个数据保留策略
*/
func (c *UTSDBClient) DeleteUInfluxdbDatabaseRP(req *DeleteUInfluxdbDatabaseRPRequest) (*DeleteUInfluxdbDatabaseRPResponse, error) {
	var err error
	var res DeleteUInfluxdbDatabaseRPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUInfluxdbDatabaseRP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUInfluxdbInstanceRequest is request schema for DeleteUInfluxdbInstance action
type DeleteUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// UInfluxdb 实例id
	UInfluxdbId *string `required:"true"`
}

// DeleteUInfluxdbInstanceResponse is response schema for DeleteUInfluxdbInstance action
type DeleteUInfluxdbInstanceResponse struct {
	response.CommonBase
}

// NewDeleteUInfluxdbInstanceRequest will create request of DeleteUInfluxdbInstance action.
func (c *UTSDBClient) NewDeleteUInfluxdbInstanceRequest() *DeleteUInfluxdbInstanceRequest {
	req := &DeleteUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUInfluxdbInstance

删除UInfluxdb实例
*/
func (c *UTSDBClient) DeleteUInfluxdbInstance(req *DeleteUInfluxdbInstanceRequest) (*DeleteUInfluxdbInstanceResponse, error) {
	var err error
	var res DeleteUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUInfluxdbDatabaseRequest is request schema for DescribeUInfluxdbDatabase action
type DescribeUInfluxdbDatabaseRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	//
	DatabaseName *string `required:"false"`

	//
	Limit *int `required:"false"`

	//
	Offset *int `required:"false"`

	//
	UInfluxdbId *string `required:"true"`
}

// DescribeUInfluxdbDatabaseResponse is response schema for DescribeUInfluxdbDatabase action
type DescribeUInfluxdbDatabaseResponse struct {
	response.CommonBase

	//
	DatabaseInfo []DatabaseInfo
}

// NewDescribeUInfluxdbDatabaseRequest will create request of DescribeUInfluxdbDatabase action.
func (c *UTSDBClient) NewDescribeUInfluxdbDatabaseRequest() *DescribeUInfluxdbDatabaseRequest {
	req := &DescribeUInfluxdbDatabaseRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUInfluxdbDatabase

描述UInfluxdb数据库
*/
func (c *UTSDBClient) DescribeUInfluxdbDatabase(req *DescribeUInfluxdbDatabaseRequest) (*DescribeUInfluxdbDatabaseResponse, error) {
	var err error
	var res DescribeUInfluxdbDatabaseResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUInfluxdbDatabase", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUInfluxdbDatabaseRPRequest is request schema for DescribeUInfluxdbDatabaseRP action
type DescribeUInfluxdbDatabaseRPRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 数据库名称
	DatabaseName *string `required:"true"`

	// 实例ID
	UInfluxdbId *string `required:"true"`
}

// DescribeUInfluxdbDatabaseRPResponse is response schema for DescribeUInfluxdbDatabaseRP action
type DescribeUInfluxdbDatabaseRPResponse struct {
	response.CommonBase

	// 返回保留策略数组（RpData类型）
	DataSet []RpData

	// 如果执行失败, 失败的错误消息
	Message string
}

// NewDescribeUInfluxdbDatabaseRPRequest will create request of DescribeUInfluxdbDatabaseRP action.
func (c *UTSDBClient) NewDescribeUInfluxdbDatabaseRPRequest() *DescribeUInfluxdbDatabaseRPRequest {
	req := &DescribeUInfluxdbDatabaseRPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUInfluxdbDatabaseRP

获取指定数据库下面的所有保留策略
*/
func (c *UTSDBClient) DescribeUInfluxdbDatabaseRP(req *DescribeUInfluxdbDatabaseRPRequest) (*DescribeUInfluxdbDatabaseRPResponse, error) {
	var err error
	var res DescribeUInfluxdbDatabaseRPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUInfluxdbDatabaseRP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUInfluxdbInstanceRequest is request schema for DescribeUInfluxdbInstance action
type DescribeUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 分页显示数量，列表操作则指定
	Limit *int `required:"false"`

	// 分页显示起始偏移位置，列表操作则指定
	Offset *int `required:"false"`

	// 指定id的话，会拉取该实例信息，否则拉取该帐号所有信息
	UInfluxdbId *string `required:"false"`
}

// DescribeUInfluxdbInstanceResponse is response schema for DescribeUInfluxdbInstance action
type DescribeUInfluxdbInstanceResponse struct {
	response.CommonBase

	// UInfluxdb实例信息
	DataSet []UInfluxdbDataSet
}

// NewDescribeUInfluxdbInstanceRequest will create request of DescribeUInfluxdbInstance action.
func (c *UTSDBClient) NewDescribeUInfluxdbInstanceRequest() *DescribeUInfluxdbInstanceRequest {
	req := &DescribeUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUInfluxdbInstance

拉取UInfluxdb实例列表
*/
func (c *UTSDBClient) DescribeUInfluxdbInstance(req *DescribeUInfluxdbInstanceRequest) (*DescribeUInfluxdbInstanceResponse, error) {
	var err error
	var res DescribeUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUInfluxdbPriceRequest is request schema for DescribeUInfluxdbPrice action
type DescribeUInfluxdbPriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 付费类型，后付费。填：PostPaid (后付费)
	ChargeType *string `required:"false"`

	// 核数 单位：个，规格［2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	CpuLimit *int `required:"true"`

	// 内存限制 单位：G 规格 [2C8G, 4C16G, 8C32G, 16C64G, 32C128G］
	MemoryLimit *int `required:"false"`

	// 付费周期数量
	Quantity *int `required:"false"`
}

// DescribeUInfluxdbPriceResponse is response schema for DescribeUInfluxdbPrice action
type DescribeUInfluxdbPriceResponse struct {
	response.CommonBase

	// 原价
	OriginalPrice float64

	// 价格
	Price float64
}

// NewDescribeUInfluxdbPriceRequest will create request of DescribeUInfluxdbPrice action.
func (c *UTSDBClient) NewDescribeUInfluxdbPriceRequest() *DescribeUInfluxdbPriceRequest {
	req := &DescribeUInfluxdbPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUInfluxdbPrice

获取UInfluxdb价格
*/
func (c *UTSDBClient) DescribeUInfluxdbPrice(req *DescribeUInfluxdbPriceRequest) (*DescribeUInfluxdbPriceResponse, error) {
	var err error
	var res DescribeUInfluxdbPriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUInfluxdbPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUInfluxdbUpgradePriceRequest is request schema for DescribeUInfluxdbUpgradePrice action
type DescribeUInfluxdbUpgradePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 核数
	CpuLimit *int `required:"true"`

	// 容量，单位GB
	MemoryLimit *int `required:"true"`

	// UInfluxdb 实例id
	UInfluxdbId *string `required:"true"`
}

// DescribeUInfluxdbUpgradePriceResponse is response schema for DescribeUInfluxdbUpgradePrice action
type DescribeUInfluxdbUpgradePriceResponse struct {
	response.CommonBase

	// 原价
	OriginalPrice float64

	// 升降级价格
	TotalPrice float64
}

// NewDescribeUInfluxdbUpgradePriceRequest will create request of DescribeUInfluxdbUpgradePrice action.
func (c *UTSDBClient) NewDescribeUInfluxdbUpgradePriceRequest() *DescribeUInfluxdbUpgradePriceRequest {
	req := &DescribeUInfluxdbUpgradePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUInfluxdbUpgradePrice

获取UIfluxdb升降级价格
*/
func (c *UTSDBClient) DescribeUInfluxdbUpgradePrice(req *DescribeUInfluxdbUpgradePriceRequest) (*DescribeUInfluxdbUpgradePriceResponse, error) {
	var err error
	var res DescribeUInfluxdbUpgradePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUInfluxdbUpgradePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUInfluxdbDatabasePolicyRequest is request schema for ModifyUInfluxdbDatabasePolicy action
type ModifyUInfluxdbDatabasePolicyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 数据库名
	DatabaseName *string `required:"true"`

	// 数据库数据保留策略。自定义格式如：10d（即10天），2w（即两周），
	RetentionPolicy *string `required:"true"`

	// Influxdb实例id
	UInfluxdbId *string `required:"true"`
}

// ModifyUInfluxdbDatabasePolicyResponse is response schema for ModifyUInfluxdbDatabasePolicy action
type ModifyUInfluxdbDatabasePolicyResponse struct {
	response.CommonBase
}

// NewModifyUInfluxdbDatabasePolicyRequest will create request of ModifyUInfluxdbDatabasePolicy action.
func (c *UTSDBClient) NewModifyUInfluxdbDatabasePolicyRequest() *ModifyUInfluxdbDatabasePolicyRequest {
	req := &ModifyUInfluxdbDatabasePolicyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUInfluxdbDatabasePolicy

更改UInfluxdb实例数据库数据保留策略
*/
func (c *UTSDBClient) ModifyUInfluxdbDatabasePolicy(req *ModifyUInfluxdbDatabasePolicyRequest) (*ModifyUInfluxdbDatabasePolicyResponse, error) {
	var err error
	var res ModifyUInfluxdbDatabasePolicyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUInfluxdbDatabasePolicy", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RebootUInfluxdbInstanceRequest is request schema for RebootUInfluxdbInstance action
type RebootUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// UInfluxdb实例id
	UInfluxdbId *string `required:"true"`
}

// RebootUInfluxdbInstanceResponse is response schema for RebootUInfluxdbInstance action
type RebootUInfluxdbInstanceResponse struct {
	response.CommonBase
}

// NewRebootUInfluxdbInstanceRequest will create request of RebootUInfluxdbInstance action.
func (c *UTSDBClient) NewRebootUInfluxdbInstanceRequest() *RebootUInfluxdbInstanceRequest {
	req := &RebootUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RebootUInfluxdbInstance

重启UInfluxdb实例
*/
func (c *UTSDBClient) RebootUInfluxdbInstance(req *RebootUInfluxdbInstanceRequest) (*RebootUInfluxdbInstanceResponse, error) {
	var err error
	var res RebootUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RebootUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ResetUInfluxdbInstanceNameRequest is request schema for ResetUInfluxdbInstanceName action
type ResetUInfluxdbInstanceNameRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 实例的新名字, 长度要求为6~63位
	NewName *string `required:"true"`

	// UInfluxdb实例id
	UInfluxdbId *string `required:"true"`
}

// ResetUInfluxdbInstanceNameResponse is response schema for ResetUInfluxdbInstanceName action
type ResetUInfluxdbInstanceNameResponse struct {
	response.CommonBase
}

// NewResetUInfluxdbInstanceNameRequest will create request of ResetUInfluxdbInstanceName action.
func (c *UTSDBClient) NewResetUInfluxdbInstanceNameRequest() *ResetUInfluxdbInstanceNameRequest {
	req := &ResetUInfluxdbInstanceNameRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ResetUInfluxdbInstanceName

更改UIfluxdb实例名称
*/
func (c *UTSDBClient) ResetUInfluxdbInstanceName(req *ResetUInfluxdbInstanceNameRequest) (*ResetUInfluxdbInstanceNameResponse, error) {
	var err error
	var res ResetUInfluxdbInstanceNameResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ResetUInfluxdbInstanceName", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StartUInfluxdbInstanceRequest is request schema for StartUInfluxdbInstance action
type StartUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// UInfluxdb实例id
	UInfluxdbId *string `required:"true"`
}

// StartUInfluxdbInstanceResponse is response schema for StartUInfluxdbInstance action
type StartUInfluxdbInstanceResponse struct {
	response.CommonBase
}

// NewStartUInfluxdbInstanceRequest will create request of StartUInfluxdbInstance action.
func (c *UTSDBClient) NewStartUInfluxdbInstanceRequest() *StartUInfluxdbInstanceRequest {
	req := &StartUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StartUInfluxdbInstance

启动UInfluxdb实例
*/
func (c *UTSDBClient) StartUInfluxdbInstance(req *StartUInfluxdbInstanceRequest) (*StartUInfluxdbInstanceResponse, error) {
	var err error
	var res StartUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StartUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StopUInfluxdbInstanceRequest is request schema for StopUInfluxdbInstance action
type StopUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// UInfluxdb实例id
	UInfluxdbId *string `required:"true"`
}

// StopUInfluxdbInstanceResponse is response schema for StopUInfluxdbInstance action
type StopUInfluxdbInstanceResponse struct {
	response.CommonBase
}

// NewStopUInfluxdbInstanceRequest will create request of StopUInfluxdbInstance action.
func (c *UTSDBClient) NewStopUInfluxdbInstanceRequest() *StopUInfluxdbInstanceRequest {
	req := &StopUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StopUInfluxdbInstance

关闭UInfluxdb实例
*/
func (c *UTSDBClient) StopUInfluxdbInstance(req *StopUInfluxdbInstanceRequest) (*StopUInfluxdbInstanceResponse, error) {
	var err error
	var res StopUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StopUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpgradeUInfluxdbInstanceRequest is request schema for UpgradeUInfluxdbInstance action
type UpgradeUInfluxdbInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// UInfluxdb 实例 新的核数，单位个
	CpuLimit *int `required:"true"`

	// UInfluxdb 实例 新的内存
	MemoryLimit *int `required:"true"`

	// 实例ID
	UInfluxdbId *string `required:"true"`
}

// UpgradeUInfluxdbInstanceResponse is response schema for UpgradeUInfluxdbInstance action
type UpgradeUInfluxdbInstanceResponse struct {
	response.CommonBase
}

// NewUpgradeUInfluxdbInstanceRequest will create request of UpgradeUInfluxdbInstance action.
func (c *UTSDBClient) NewUpgradeUInfluxdbInstanceRequest() *UpgradeUInfluxdbInstanceRequest {
	req := &UpgradeUInfluxdbInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpgradeUInfluxdbInstance

UInfluxdb实例配置升降级
*/
func (c *UTSDBClient) UpgradeUInfluxdbInstance(req *UpgradeUInfluxdbInstanceRequest) (*UpgradeUInfluxdbInstanceResponse, error) {
	var err error
	var res UpgradeUInfluxdbInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpgradeUInfluxdbInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
