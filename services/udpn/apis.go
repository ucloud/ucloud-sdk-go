// Code is generated by ucloud-model, DO NOT EDIT IT.




package udpn

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UDPN API Schema
















// AllocateUDPNRequest is request schema for AllocateUDPN action
type AllocateUDPNRequest struct {
	request.CommonBase


    // [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list) 
    // ProjectId *string `required:"false"`

    // [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist) 
    // Region *string `required:"false"`



    // 带宽 
    Bandwidth *int `required:"true"`

    // 计费类型，枚举值为： Year，按年付费； Month，按月付费； Dynamic，按需付费 
    ChargeType *string `required:"false"`

    // 代金劵 
    CouponId *string `required:"false"`

    // 计费模式. 枚举值："Traffic", 流量计费模式; 否则 带宽计费模式； 
    PayMode *string `required:"false"`

    // 专线可用区1，支持地域：北京二：cn-bj2, 上海二：cn-sh2, 广东：cn-gd, 亚太： hk, 上海一：cn-sh1, 法兰克福：ge-fra, 新加坡：sg,  洛杉矶：us-ca， 华盛顿：us-ws， 东京：jpn-tky 
    Peer1 *string `required:"true"`

    // 专线可用区2，支持地域：北京二：cn-bj2, 上海二：cn-sh2, 广东：cn-gd, 亚太： hk, 上海一：cn-sh1, 法兰克福：ge-fra, 新加坡：sg,  洛杉矶：us-ca， 华盛顿：us-ws， 东京：jpn-tky 
    Peer2 *string `required:"true"`

    // 计费时长，默认 1 
    Quantity *int `required:"false"`

}


// AllocateUDPNResponse is response schema for AllocateUDPN action
type AllocateUDPNResponse struct {
	response.CommonBase


    // 操作名称 
    Action string 

    // 返回码 
    RetCode int 

    // 资源名称 
    UDPNId string 

}


// NewAllocateUDPNRequest will create request of AllocateUDPN action.
func (c *UDPNClient) NewAllocateUDPNRequest() *AllocateUDPNRequest {
    req := &AllocateUDPNRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: AllocateUDPN

分配一条 UDPN 专线
*/
func (c *UDPNClient) AllocateUDPN(req *AllocateUDPNRequest) (*AllocateUDPNResponse, error) {
	var err error
	var res AllocateUDPNResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("AllocateUDPN", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribeUDPNRequest is request schema for DescribeUDPN action
type DescribeUDPNRequest struct {
	request.CommonBase


    // [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list) 
    // ProjectId *string `required:"false"`

    // [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist) 
    // Region *string `required:"false"`



    // 返回数据长度，默认为 20 
    Limit *int `required:"false"`

    // 列表起始位置偏移量，默认为 0 
    Offset *int `required:"false"`

    // 申请到的 UDPN 资源 ID。若为空，则查询该用户在机房所有的专线信息。非默认项目资源，需填写ProjectId 
    UDPNId *string `required:"false"`

}


// DescribeUDPNResponse is response schema for DescribeUDPN action
type DescribeUDPNResponse struct {
	response.CommonBase


    // UDPN详情 
    DataSet []UDPNData 

    // 查询到的总数量 
    TotalCount int 

}


// NewDescribeUDPNRequest will create request of DescribeUDPN action.
func (c *UDPNClient) NewDescribeUDPNRequest() *DescribeUDPNRequest {
    req := &DescribeUDPNRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: DescribeUDPN

描述 UDPN
*/
func (c *UDPNClient) DescribeUDPN(req *DescribeUDPNRequest) (*DescribeUDPNResponse, error) {
	var err error
	var res DescribeUDPNResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("DescribeUDPN", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// GetUDPNLineListRequest is request schema for GetUDPNLineList action
type GetUDPNLineListRequest struct {
	request.CommonBase


    // [公共参数]  
    // ProjectId *string `required:"false"`

    // [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html) 
    // Region *string `required:"false"`



}


// GetUDPNLineListResponse is response schema for GetUDPNLineList action
type GetUDPNLineListResponse struct {
	response.CommonBase


    // 当前支持的专线线路详细信息，详见UDPNLineSet 
    DataSet []UDPNLineSet 

    // DataSet中的元素个数 
    TotalCount int 

}


// NewGetUDPNLineListRequest will create request of GetUDPNLineList action.
func (c *UDPNClient) NewGetUDPNLineListRequest() *GetUDPNLineListRequest {
    req := &GetUDPNLineListRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: GetUDPNLineList

获取当前支持的专线线路列表
*/
func (c *UDPNClient) GetUDPNLineList(req *GetUDPNLineListRequest) (*GetUDPNLineListResponse, error) {
	var err error
	var res GetUDPNLineListResponse

	reqCopier := *req
    
    
    
    
    
	err = c.Client.InvokeAction("GetUDPNLineList", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// GetUDPNPriceRequest is request schema for GetUDPNPrice action
type GetUDPNPriceRequest struct {
	request.CommonBase


    // [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html) 
    // Region *string `required:"false"`



    // 带宽信息 
    Bandwidth *int `required:"true"`

    // 计费类型 
    ChargeType *string `required:"false"`

    // PayMode，枚举值，Bandwidth：带宽；Traffic：流量  默认不填写：带宽 
    PayMode *string `required:"false"`

    // 专线可用区1，支持地域：北京二：cn-bj2, 上海二：cn-sh2, 广东：cn-gd, 亚太： hk, 上海一：cn-sh1, 法兰克福：ge-fra, 新加坡：sg, 洛杉矶：us-la， 华盛顿：us-ws， 东京：jpn-tky 
    Peer1 *string `required:"true"`

    // 专线可用区2，支持地域：北京二：cn-bj2, 上海二：cn-sh2, 广东：cn-gd, 亚太： hk, 上海一：cn-sh1, 法兰克福：ge-fra, 新加坡：sg, 洛杉矶：us-la， 华盛顿：us-ws， 东京：jpn-tky 
    Peer2 *string `required:"true"`

    // 购买时长 
    Quantity *int `required:"false"`

}


// GetUDPNPriceResponse is response schema for GetUDPNPrice action
type GetUDPNPriceResponse struct {
	response.CommonBase


    // 专线价格 
    Price float64 

    // 资源有效期 unix 时间戳 
    PurchaseValue int 

}


// NewGetUDPNPriceRequest will create request of GetUDPNPrice action.
func (c *UDPNClient) NewGetUDPNPriceRequest() *GetUDPNPriceRequest {
    req := &GetUDPNPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: GetUDPNPrice

获取 UDPN 价格
*/
func (c *UDPNClient) GetUDPNPrice(req *GetUDPNPriceRequest) (*GetUDPNPriceResponse, error) {
	var err error
	var res GetUDPNPriceResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("GetUDPNPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// GetUDPNUpgradePriceRequest is request schema for GetUDPNUpgradePrice action
type GetUDPNUpgradePriceRequest struct {
	request.CommonBase


    // [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html) 
    // ProjectId *string `required:"false"`

    // [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html) 
    // Region *string `required:"false"`



    // 带宽 
    Bandwidth *int `required:"true"`

    // 专线带宽资源 Id 
    UDPNId *string `required:"true"`

}


// GetUDPNUpgradePriceResponse is response schema for GetUDPNUpgradePrice action
type GetUDPNUpgradePriceResponse struct {
	response.CommonBase


    // 升级后的价格 
    Price float64 

}


// NewGetUDPNUpgradePriceRequest will create request of GetUDPNUpgradePrice action.
func (c *UDPNClient) NewGetUDPNUpgradePriceRequest() *GetUDPNUpgradePriceRequest {
    req := &GetUDPNUpgradePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: GetUDPNUpgradePrice

获取专线升级价格
*/
func (c *UDPNClient) GetUDPNUpgradePrice(req *GetUDPNUpgradePriceRequest) (*GetUDPNUpgradePriceResponse, error) {
	var err error
	var res GetUDPNUpgradePriceResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("GetUDPNUpgradePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ModifyUDPNBandwidthRequest is request schema for ModifyUDPNBandwidth action
type ModifyUDPNBandwidthRequest struct {
	request.CommonBase


    // [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html) 
    // ProjectId *string `required:"false"`



    // 调整后专线带宽, 单位为Mbps，取值范围为大于等于2且小于等于1000([2-1000])的整数 
    Bandwidth *int `required:"true"`

    // 代金劵 ID 
    CouponId *string `required:"false"`

    // UDPN Id 
    UDPNId *string `required:"true"`

}


// ModifyUDPNBandwidthResponse is response schema for ModifyUDPNBandwidth action
type ModifyUDPNBandwidthResponse struct {
	response.CommonBase


}


// NewModifyUDPNBandwidthRequest will create request of ModifyUDPNBandwidth action.
func (c *UDPNClient) NewModifyUDPNBandwidthRequest() *ModifyUDPNBandwidthRequest {
    req := &ModifyUDPNBandwidthRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: ModifyUDPNBandwidth

修改带宽值
*/
func (c *UDPNClient) ModifyUDPNBandwidth(req *ModifyUDPNBandwidthRequest) (*ModifyUDPNBandwidthResponse, error) {
	var err error
	var res ModifyUDPNBandwidthResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("ModifyUDPNBandwidth", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ReleaseUDPNRequest is request schema for ReleaseUDPN action
type ReleaseUDPNRequest struct {
	request.CommonBase


    // [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html) 
    // ProjectId *string `required:"false"`

    // [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html) 
    // Region *string `required:"false"`



    // UDPN 资源 Id 
    UDPNId *string `required:"true"`

}


// ReleaseUDPNResponse is response schema for ReleaseUDPN action
type ReleaseUDPNResponse struct {
	response.CommonBase


}


// NewReleaseUDPNRequest will create request of ReleaseUDPN action.
func (c *UDPNClient) NewReleaseUDPNRequest() *ReleaseUDPNRequest {
    req := &ReleaseUDPNRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}


/*
API: ReleaseUDPN

释放 UDPN
*/
func (c *UDPNClient) ReleaseUDPN(req *ReleaseUDPNRequest) (*ReleaseUDPNResponse, error) {
	var err error
	var res ReleaseUDPNResponse

	reqCopier := *req
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("ReleaseUDPN", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}


