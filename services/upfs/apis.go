// Code is generated by ucloud-model, DO NOT EDIT IT.

package upfs

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UPFS API Schema

// CreateUPFSVolumeRequest is request schema for CreateUPFSVolume action
type CreateUPFSVolumeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 计费模式，枚举值为： Year，按年付费； Month，按月付费
	ChargeType *string `required:"false"`

	// 使用的代金券id
	CouponId *string `required:"false"`

	// 文件系统协议，目前仅支持POSIX
	ProtocolType *string `required:"true"`

	// 购买时长 默认: 1
	Quantity *int `required:"false"`

	// 备注
	Remark *string `required:"false"`

	// 文件系统大小，单位为GB，必须为100的整数倍，Size最小为500GB
	Size *int `required:"true"`

	// 文件系统所属业务组
	Tag *string `required:"false"`

	// 文件系统名称
	VolumeName *string `required:"false"`
}

// CreateUPFSVolumeResponse is response schema for CreateUPFSVolume action
type CreateUPFSVolumeResponse struct {
	response.CommonBase

	// UPFS文件系统ID
	VolumeId string

	// UPFS文件系统名称
	VolumeName string
}

// NewCreateUPFSVolumeRequest will create request of CreateUPFSVolume action.
func (c *UPFSClient) NewCreateUPFSVolumeRequest() *CreateUPFSVolumeRequest {
	req := &CreateUPFSVolumeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPFSVolume

创建UPFS文件系统
*/
func (c *UPFSClient) CreateUPFSVolume(req *CreateUPFSVolumeRequest) (*CreateUPFSVolumeResponse, error) {
	var err error
	var res CreateUPFSVolumeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPFSVolume", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPFSVolumeRequest is request schema for DescribeUPFSVolume action
type DescribeUPFSVolumeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 文件列表长度
	Limit *int `required:"false"`

	// 文件列表起始
	Offset *int `required:"false"`

	// 文件系统ID
	VolumeId *string `required:"false"`
}

// DescribeUPFSVolumeResponse is response schema for DescribeUPFSVolume action
type DescribeUPFSVolumeResponse struct {
	response.CommonBase

	// UPFS文件系统详细信息列表
	DataSet []UPFSVolumeInfo

	// UPFS文件系统总数
	TotalCount int
}

// NewDescribeUPFSVolumeRequest will create request of DescribeUPFSVolume action.
func (c *UPFSClient) NewDescribeUPFSVolumeRequest() *DescribeUPFSVolumeRequest {
	req := &DescribeUPFSVolumeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPFSVolume

获取UPFS文件系统列表
*/
func (c *UPFSClient) DescribeUPFSVolume(req *DescribeUPFSVolumeRequest) (*DescribeUPFSVolumeResponse, error) {
	var err error
	var res DescribeUPFSVolumeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPFSVolume", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPFSVolumePriceRequest is request schema for DescribeUPFSVolumePrice action
type DescribeUPFSVolumePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// Year， Month默认: Month
	ChargeType *string `required:"false"`

	// 购买UPFS的时长， 默认为1
	Quantity *int `required:"false"`

	// 文件系统大小，单位为GB，新架构容量型最小容量为500GB，以100GB递增，最大不超过100TB。
	Size *int `required:"true"`

	// UPFS文件系统id，第一次创建文件系统时不需要传这个参数
	VolumeId *string `required:"false"`
}

// DescribeUPFSVolumePriceResponse is response schema for DescribeUPFSVolumePrice action
type DescribeUPFSVolumePriceResponse struct {
	response.CommonBase

	// upfs 价格信息
	DataSet []UPFSPriceDataSet
}

// NewDescribeUPFSVolumePriceRequest will create request of DescribeUPFSVolumePrice action.
func (c *UPFSClient) NewDescribeUPFSVolumePriceRequest() *DescribeUPFSVolumePriceRequest {
	req := &DescribeUPFSVolumePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPFSVolumePrice

获取UPFS文件系统价格
*/
func (c *UPFSClient) DescribeUPFSVolumePrice(req *DescribeUPFSVolumePriceRequest) (*DescribeUPFSVolumePriceResponse, error) {
	var err error
	var res DescribeUPFSVolumePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPFSVolumePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPFSVolumeUpgradePriceRequest is request schema for DescribeUPFSVolumeUpgradePrice action
type DescribeUPFSVolumeUpgradePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 文件系统大小
	Size *string `required:"true"`

	// 文件系统ID
	VolumeId *string `required:"true"`
}

// DescribeUPFSVolumeUpgradePriceResponse is response schema for DescribeUPFSVolumeUpgradePrice action
type DescribeUPFSVolumeUpgradePriceResponse struct {
	response.CommonBase

	// 原价格（单位：分）
	OriginalPrice float64

	// 价格（单位：分）
	Price float64
}

// NewDescribeUPFSVolumeUpgradePriceRequest will create request of DescribeUPFSVolumeUpgradePrice action.
func (c *UPFSClient) NewDescribeUPFSVolumeUpgradePriceRequest() *DescribeUPFSVolumeUpgradePriceRequest {
	req := &DescribeUPFSVolumeUpgradePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPFSVolumeUpgradePrice

UPFS文件系统扩容价格
*/
func (c *UPFSClient) DescribeUPFSVolumeUpgradePrice(req *DescribeUPFSVolumeUpgradePriceRequest) (*DescribeUPFSVolumeUpgradePriceResponse, error) {
	var err error
	var res DescribeUPFSVolumeUpgradePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPFSVolumeUpgradePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ExtendUPFSVolumeRequest is request schema for ExtendUPFSVolume action
type ExtendUPFSVolumeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 文件系统大小，单位为GB，最小为6000GB，最大为10PB，必须为1000的整数倍
	Size *int `required:"true"`

	// 文件系统ID
	VolumeId *string `required:"true"`
}

// ExtendUPFSVolumeResponse is response schema for ExtendUPFSVolume action
type ExtendUPFSVolumeResponse struct {
	response.CommonBase
}

// NewExtendUPFSVolumeRequest will create request of ExtendUPFSVolume action.
func (c *UPFSClient) NewExtendUPFSVolumeRequest() *ExtendUPFSVolumeRequest {
	req := &ExtendUPFSVolumeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ExtendUPFSVolume

UPFS文件系统扩容
*/
func (c *UPFSClient) ExtendUPFSVolume(req *ExtendUPFSVolumeRequest) (*ExtendUPFSVolumeResponse, error) {
	var err error
	var res ExtendUPFSVolumeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ExtendUPFSVolume", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RemoveUPFSVolumeRequest is request schema for RemoveUPFSVolume action
type RemoveUPFSVolumeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 文件系统ID
	VolumeId *string `required:"true"`
}

// RemoveUPFSVolumeResponse is response schema for RemoveUPFSVolume action
type RemoveUPFSVolumeResponse struct {
	response.CommonBase
}

// NewRemoveUPFSVolumeRequest will create request of RemoveUPFSVolume action.
func (c *UPFSClient) NewRemoveUPFSVolumeRequest() *RemoveUPFSVolumeRequest {
	req := &RemoveUPFSVolumeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RemoveUPFSVolume

删除UPFS文件系统
*/
func (c *UPFSClient) RemoveUPFSVolume(req *RemoveUPFSVolumeRequest) (*RemoveUPFSVolumeResponse, error) {
	var err error
	var res RemoveUPFSVolumeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RemoveUPFSVolume", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUPFSVolumeInfoRequest is request schema for UpdateUPFSVolumeInfo action
type UpdateUPFSVolumeInfoRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// UPFS文件系统备注（文件系统名称／备注至少传入其中一个）
	Remark *string `required:"false"`

	// UPFS文件系统ID
	VolumeId *string `required:"true"`

	// UPFS文件系统名称（文件系统名称／备注至少传入其中一个）
	VolumeName *string `required:"false"`
}

// UpdateUPFSVolumeInfoResponse is response schema for UpdateUPFSVolumeInfo action
type UpdateUPFSVolumeInfoResponse struct {
	response.CommonBase
}

// NewUpdateUPFSVolumeInfoRequest will create request of UpdateUPFSVolumeInfo action.
func (c *UPFSClient) NewUpdateUPFSVolumeInfoRequest() *UpdateUPFSVolumeInfoRequest {
	req := &UpdateUPFSVolumeInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUPFSVolumeInfo

更改UPFS文件系统相关信息（名称／备注）
*/
func (c *UPFSClient) UpdateUPFSVolumeInfo(req *UpdateUPFSVolumeInfoRequest) (*UpdateUPFSVolumeInfoResponse, error) {
	var err error
	var res UpdateUPFSVolumeInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUPFSVolumeInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
