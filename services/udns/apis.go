// Code is generated by ucloud-model, DO NOT EDIT IT.

package udns

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UDNS API Schema

// AssociateUDNSZoneVPCRequest is request schema for AssociateUDNSZoneVPC action
type AssociateUDNSZoneVPCRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// VPC资源ID
	VPCId *string `required:"true"`

	// VPC所属项目ID
	VPCProjectId *string `required:"true"`
}

// AssociateUDNSZoneVPCResponse is response schema for AssociateUDNSZoneVPC action
type AssociateUDNSZoneVPCResponse struct {
	response.CommonBase
}

// NewAssociateUDNSZoneVPCRequest will create request of AssociateUDNSZoneVPC action.
func (c *UDNSClient) NewAssociateUDNSZoneVPCRequest() *AssociateUDNSZoneVPCRequest {
	req := &AssociateUDNSZoneVPCRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: AssociateUDNSZoneVPC

绑定域名与VPC
*/
func (c *UDNSClient) AssociateUDNSZoneVPC(req *AssociateUDNSZoneVPCRequest) (*AssociateUDNSZoneVPCResponse, error) {
	var err error
	var res AssociateUDNSZoneVPCResponse

	reqCopier := *req

	err = c.Client.InvokeAction("AssociateUDNSZoneVPC", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUDNSRecordRequest is request schema for CreateUDNSRecord action
type CreateUDNSRecordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// 主机记录
	Name *string `required:"true"`

	// 记录的备注信息
	Remark *string `required:"false"`

	// TTL值，范围为5-600，单位为秒。默认为5
	TTL *int `required:"false"`

	// 记录类型。枚举值，“A”,"CNAME","MX","AAAA","SRV","PTR","TXT"。
	Type *string `required:"true"`

	// 数值组，支持逗号分割。格式为：Value|权重|IsEnabled，其中权重支持1-10，IsEnabled为枚举值（1为启用，0为禁用）。输入格式示例：192.168.1.1|1|1,192.168.1.2|10|0。
	Value *string `required:"true"`

	// 值类型。枚举值，“Normal”，标准；“Multivalue”，多值返回。仅在值为“Multivalue”时，Value的权重生效。
	ValueType *string `required:"true"`
}

// CreateUDNSRecordResponse is response schema for CreateUDNSRecord action
type CreateUDNSRecordResponse struct {
	response.CommonBase

	// 域名记录的资源ID
	DNSRecordId string
}

// NewCreateUDNSRecordRequest will create request of CreateUDNSRecord action.
func (c *UDNSClient) NewCreateUDNSRecordRequest() *CreateUDNSRecordRequest {
	req := &CreateUDNSRecordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUDNSRecord

创建域名记录
*/
func (c *UDNSClient) CreateUDNSRecord(req *CreateUDNSRecordRequest) (*CreateUDNSRecordResponse, error) {
	var err error
	var res CreateUDNSRecordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUDNSRecord", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUDNSZoneRequest is request schema for CreateUDNSZone action
type CreateUDNSZoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 付费方式, 枚举值为: Year, 按年付费; Month, 按月付费; Dynamic, 按需付费，默认为按月付费
	ChargeType *string `required:"false"`

	// 代金券ID，默认不使用
	CouponId *string `required:"false"`

	// 域名字符串
	DNSZoneName *string `required:"true"`

	// 是否支持迭代。枚举值,"enable",支持迭代; "disable",不支持迭代
	IsRecursionEnabled *string `required:"false"`

	// 购买时长，默认为1
	Quantity *int `required:"false"`

	// 备注
	Remark *string `required:"false"`

	// 所属业务组名称
	Tag *string `required:"false"`

	// 域名类型。枚举值，“private”，内网DNS；“public”，公网DNS，暂只支持private。
	Type *string `required:"true"`
}

// CreateUDNSZoneResponse is response schema for CreateUDNSZone action
type CreateUDNSZoneResponse struct {
	response.CommonBase

	// 域名资源ID
	DNSZoneId string
}

// NewCreateUDNSZoneRequest will create request of CreateUDNSZone action.
func (c *UDNSClient) NewCreateUDNSZoneRequest() *CreateUDNSZoneRequest {
	req := &CreateUDNSZoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUDNSZone

创建域名
*/
func (c *UDNSClient) CreateUDNSZone(req *CreateUDNSZoneRequest) (*CreateUDNSZoneResponse, error) {
	var err error
	var res CreateUDNSZoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUDNSZone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUDNSRecordRequest is request schema for DeleteUDNSRecord action
type DeleteUDNSRecordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// 域名记录资源ID
	RecordIds []string `required:"true"`
}

// DeleteUDNSRecordResponse is response schema for DeleteUDNSRecord action
type DeleteUDNSRecordResponse struct {
	response.CommonBase
}

// NewDeleteUDNSRecordRequest will create request of DeleteUDNSRecord action.
func (c *UDNSClient) NewDeleteUDNSRecordRequest() *DeleteUDNSRecordRequest {
	req := &DeleteUDNSRecordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUDNSRecord

删除域名记录
*/
func (c *UDNSClient) DeleteUDNSRecord(req *DeleteUDNSRecordRequest) (*DeleteUDNSRecordResponse, error) {
	var err error
	var res DeleteUDNSRecordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUDNSRecord", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUDNSDomainRequest is request schema for DescribeUDNSDomain action
type DescribeUDNSDomainRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// zone名称
	DNSZoneName *string `required:"true"`

	// 返回数量
	Limit *int `required:"false"`

	// 查询数量偏移
	Offset *int `required:"false"`

	// VPI资源ID
	VPCId *string `required:"true"`
}

// DescribeUDNSDomainResponse is response schema for DescribeUDNSDomain action
type DescribeUDNSDomainResponse struct {
	response.CommonBase

	// 查询记录
	RecordInfos []RecordInfo

	// 总条数
	TotalCount int
}

// NewDescribeUDNSDomainRequest will create request of DescribeUDNSDomain action.
func (c *UDNSClient) NewDescribeUDNSDomainRequest() *DescribeUDNSDomainRequest {
	req := &DescribeUDNSDomainRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUDNSDomain

zone下所有域名的rr记录
*/
func (c *UDNSClient) DescribeUDNSDomain(req *DescribeUDNSDomainRequest) (*DescribeUDNSDomainResponse, error) {
	var err error
	var res DescribeUDNSDomainResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUDNSDomain", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUDNSRecordRequest is request schema for DescribeUDNSRecord action
type DescribeUDNSRecordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// 数据分页值, 默认为20
	Limit *int `required:"false"`

	// 数据偏移量, 默认为0
	Offset *int `required:"false"`

	// 域名记录资源ID
	RecordIds []string `required:"false"`
}

// DescribeUDNSRecordResponse is response schema for DescribeUDNSRecord action
type DescribeUDNSRecordResponse struct {
	response.CommonBase

	// 域名记录详细信息
	RecordInfos []RecordInfo

	// 资源数量
	TotalCount int
}

// NewDescribeUDNSRecordRequest will create request of DescribeUDNSRecord action.
func (c *UDNSClient) NewDescribeUDNSRecordRequest() *DescribeUDNSRecordRequest {
	req := &DescribeUDNSRecordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUDNSRecord

获取域名记录
*/
func (c *UDNSClient) DescribeUDNSRecord(req *DescribeUDNSRecordRequest) (*DescribeUDNSRecordResponse, error) {
	var err error
	var res DescribeUDNSRecordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUDNSRecord", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUDNSZoneRequest is request schema for DescribeUDNSZone action
type DescribeUDNSZoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneIds []string `required:"false"`

	// 数据分页值, 默认为20
	Limit *int `required:"false"`

	// 数据偏移量, 默认为0
	Offset *int `required:"false"`
}

// DescribeUDNSZoneResponse is response schema for DescribeUDNSZone action
type DescribeUDNSZoneResponse struct {
	response.CommonBase

	// 域名资源信息
	DNSZoneInfos []ZoneInfo

	// 符合查询条件的域名数量
	TotalCount int
}

// NewDescribeUDNSZoneRequest will create request of DescribeUDNSZone action.
func (c *UDNSClient) NewDescribeUDNSZoneRequest() *DescribeUDNSZoneRequest {
	req := &DescribeUDNSZoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUDNSZone

获取域名信息
*/
func (c *UDNSClient) DescribeUDNSZone(req *DescribeUDNSZoneRequest) (*DescribeUDNSZoneResponse, error) {
	var err error
	var res DescribeUDNSZoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUDNSZone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DisassociateUDNSZoneVPCRequest is request schema for DisassociateUDNSZoneVPC action
type DisassociateUDNSZoneVPCRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// VPC资源ID
	VPCId *string `required:"true"`

	// VPC所属项目ID
	VPCProjectId *string `required:"true"`
}

// DisassociateUDNSZoneVPCResponse is response schema for DisassociateUDNSZoneVPC action
type DisassociateUDNSZoneVPCResponse struct {
	response.CommonBase
}

// NewDisassociateUDNSZoneVPCRequest will create request of DisassociateUDNSZoneVPC action.
func (c *UDNSClient) NewDisassociateUDNSZoneVPCRequest() *DisassociateUDNSZoneVPCRequest {
	req := &DisassociateUDNSZoneVPCRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DisassociateUDNSZoneVPC

解绑域名和VPC
*/
func (c *UDNSClient) DisassociateUDNSZoneVPC(req *DisassociateUDNSZoneVPCRequest) (*DisassociateUDNSZoneVPCResponse, error) {
	var err error
	var res DisassociateUDNSZoneVPCResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DisassociateUDNSZoneVPC", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUDNSRecordRequest is request schema for ModifyUDNSRecord action
type ModifyUDNSRecordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// 域名记录资源ID
	RecordId *string `required:"true"`

	// 记录的备注信息
	Remark *string `required:"false"`

	// TTL值，单位为秒
	TTL *int `required:"false"`

	// 数值组，支持逗号分割。格式为：Value|权重|Enable，其中权重支持1-10，Enable为枚举值（1为启用，0为禁用）。输入格式示例：192.168.1.1|1|1,192.168.1.2|10|0。
	Value *string `required:"false"`

	// 值类型。枚举值，“Normal”，标准；“Multivalue”，多值返回。仅在值为“Multivalue”时，Value的权重生效。
	ValueType *string `required:"false"`
}

// ModifyUDNSRecordResponse is response schema for ModifyUDNSRecord action
type ModifyUDNSRecordResponse struct {
	response.CommonBase
}

// NewModifyUDNSRecordRequest will create request of ModifyUDNSRecord action.
func (c *UDNSClient) NewModifyUDNSRecordRequest() *ModifyUDNSRecordRequest {
	req := &ModifyUDNSRecordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUDNSRecord

修改域名记录
*/
func (c *UDNSClient) ModifyUDNSRecord(req *ModifyUDNSRecordRequest) (*ModifyUDNSRecordResponse, error) {
	var err error
	var res ModifyUDNSRecordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUDNSRecord", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUDNSZoneRequest is request schema for ModifyUDNSZone action
type ModifyUDNSZoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 域名资源ID
	DNSZoneId *string `required:"true"`

	// 是否支持迭代。枚举值,"enable",支持迭代; "disable",不支持迭代
	IsRecursionEnabled *string `required:"false"`

	// 备注
	Remark *string `required:"false"`
}

// ModifyUDNSZoneResponse is response schema for ModifyUDNSZone action
type ModifyUDNSZoneResponse struct {
	response.CommonBase
}

// NewModifyUDNSZoneRequest will create request of ModifyUDNSZone action.
func (c *UDNSClient) NewModifyUDNSZoneRequest() *ModifyUDNSZoneRequest {
	req := &ModifyUDNSZoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUDNSZone

修改域名备注/递归查询状态
*/
func (c *UDNSClient) ModifyUDNSZone(req *ModifyUDNSZoneRequest) (*ModifyUDNSZoneResponse, error) {
	var err error
	var res ModifyUDNSZoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUDNSZone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
