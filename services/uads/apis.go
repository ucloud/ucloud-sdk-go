// Code is generated by ucloud-model, DO NOT EDIT IT.

package uads

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UADS API Schema

// AddHighProtectGameIPInfoRequest is request schema for AddHighProtectGameIPInfo action
type AddHighProtectGameIPInfoRequest struct {
	request.CommonBase

	// 代金券ID
	CouponId *string `required:"false"`

	// 套餐线路类型, 如果是BGP的线路, 则为BGP;如果为双线, 则可选TELECOM, UNICOM;如果为海外, 则为INTERNATIONAL;
	LineType *string `required:"true"`

	// 备注,默认为空.
	Remark *string `required:"false"`

	// 资源Id
	ResourceId *string `required:"true"`

	// IP类型,取值范围为:TypeFree,  TypeCharge
	TypeIP *string `required:"true"`

	// 用户的源站ip
	UserIP *string `required:"true"`
}

// AddHighProtectGameIPInfoResponse is response schema for AddHighProtectGameIPInfo action
type AddHighProtectGameIPInfoResponse struct {
	response.CommonBase

	// cname记录
	Cname string

	// 防御IP
	DefenceIP string

	// IPId
	IPId int

	// 源IP
	SrcIP string
}

// NewAddHighProtectGameIPInfoRequest will create request of AddHighProtectGameIPInfo action.
func (c *UADSClient) NewAddHighProtectGameIPInfoRequest() *AddHighProtectGameIPInfoRequest {
	req := &AddHighProtectGameIPInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: AddHighProtectGameIPInfo

添加代理ip
*/
func (c *UADSClient) AddHighProtectGameIPInfo(req *AddHighProtectGameIPInfoRequest) (*AddHighProtectGameIPInfoResponse, error) {
	var err error
	var res AddHighProtectGameIPInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("AddHighProtectGameIPInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// AddNapAllowListDomainRequest is request schema for AddNapAllowListDomain action
type AddNapAllowListDomainRequest struct {
	request.CommonBase

	// 域名，N从0开始，多个域名：Domain.0、Domain.1、...
	Domain []string `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// AddNapAllowListDomainResponse is response schema for AddNapAllowListDomain action
type AddNapAllowListDomainResponse struct {
	response.CommonBase

	// 域名配置结果
	Data []DomainConfigResult
}

// NewAddNapAllowListDomainRequest will create request of AddNapAllowListDomain action.
func (c *UADSClient) NewAddNapAllowListDomainRequest() *AddNapAllowListDomainRequest {
	req := &AddNapAllowListDomainRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: AddNapAllowListDomain

添加域名允许列表
*/
func (c *UADSClient) AddNapAllowListDomain(req *AddNapAllowListDomainRequest) (*AddNapAllowListDomainResponse, error) {
	var err error
	var res AddNapAllowListDomainResponse

	reqCopier := *req

	err = c.Client.InvokeAction("AddNapAllowListDomain", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// BindNapIPRequest is request schema for BindNapIP action
type BindNapIPRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 绑定的资源ID
	BindResourceId *string `required:"true"`

	// EIP资源ID
	EIPId *string `required:"true"`

	// 高防IP
	NapIp *string `required:"true"`

	// 高防资源ID
	ResourceId *string `required:"true"`

	// 绑定的资源类型(uhost:云主机,ulb:负载均衡,upm:物理机)
	ResourceType *string `required:"true"`
}

// BindNapIPResponse is response schema for BindNapIP action
type BindNapIPResponse struct {
	response.CommonBase

	// 错误信息
	Message string
}

// NewBindNapIPRequest will create request of BindNapIP action.
func (c *UADSClient) NewBindNapIPRequest() *BindNapIPRequest {
	req := &BindNapIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: BindNapIP

直连高防：将尚未使用的高防EIP绑定到指定的资源
*/
func (c *UADSClient) BindNapIP(req *BindNapIPRequest) (*BindNapIPResponse, error) {
	var err error
	var res BindNapIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("BindNapIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// BuyHighProtectGameServiceRequest is request schema for BuyHighProtectGameService action
type BuyHighProtectGameServiceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 接入模式，默认为：IP；Domain：网站接入、IP：非网站接入
	AccessMode *string `required:"false"`

	// 线路区域, 可取范围{"SouthChina",   "EastChina"}
	AreaLine *string `required:"true"`

	// 计费方式 ,取值范围 {"Month",  "Year", "Dynamic", "Day"};其中华东双线周付使用Day,其他支持的周付使用Dynamic;
	ChargeType *string `required:"true"`

	// 代金券ID
	CouponId *string `required:"false"`

	// DDoS基础防护值（当购买套餐为多种线路的时候，顺序为，电信，联通，移动...，当为单线的时候只传DefenceDDosBaseFlowArr.0）
	DefenceDDosBaseFlowArr []string `required:"false"`

	// DDoS最大防护值（当购买套餐为多种线路的时候，顺序为，电信，联通，移动...；当为单线的时候只传DefenceDDosMaxFlowArr.0）
	DefenceDDosMaxFlowArr []string `required:"false"`

	// 防御类型，默认为TypeFixed; 取值范围{"TypeFixed",  "TypeDynamic"}
	DefenceType *string `required:"false"`

	// 购买的套餐所在机房，取值范围{"Hangzhou2",  "Hangzhou", "Xiamen"}
	EngineRoom []string `required:"true"`

	// 转发类型，默认为：Proxy；Proxy：代理、Passthrough：透传
	ForwardType *string `required:"false"`

	// 高防服务名称
	HighProtectGameServiceName *string `required:"false"`

	// 'default': 'DUPLET',  取值范围 {"DUPLET", "BGP"}
	LineType *string `required:"true"`

	// 计费时长
	Quantity *int `required:"true"`

	// 带宽
	SrcBandwidth *int `required:"true"`

	// 供应商编号
	Vendor *int `required:"false"`
}

// BuyHighProtectGameServiceResponse is response schema for BuyHighProtectGameService action
type BuyHighProtectGameServiceResponse struct {
	response.CommonBase

	// 返回的用户资源信息
	ResourceInfo ResourceInfo
}

// NewBuyHighProtectGameServiceRequest will create request of BuyHighProtectGameService action.
func (c *UADSClient) NewBuyHighProtectGameServiceRequest() *BuyHighProtectGameServiceRequest {
	req := &BuyHighProtectGameServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: BuyHighProtectGameService

购买高防服务
*/
func (c *UADSClient) BuyHighProtectGameService(req *BuyHighProtectGameServiceRequest) (*BuyHighProtectGameServiceResponse, error) {
	var err error
	var res BuyHighProtectGameServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("BuyHighProtectGameService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateBGPServiceIPRequest is request schema for CreateBGPServiceIP action
type CreateBGPServiceIPRequest struct {
	request.CommonBase

	// 高防IP对应机房（直连高防必须携带）
	EIPRegion *string `required:"false"`

	// 备注,默认为空
	Remark *string `required:"false"`

	// 资源id，表示归属在哪个高防服务下
	ResourceId *string `required:"true"`

	// ip的类型, 默认是TypeFree
	TypeIP *string `required:"false"`
}

// CreateBGPServiceIPResponse is response schema for CreateBGPServiceIP action
type CreateBGPServiceIPResponse struct {
	response.CommonBase

	// cname记录
	Cname string

	// 分配的BGP高防IP的IP地址
	DefenceIP string

	// 是否热备份开启
	EnableSwitch int

	// IPId
	IPId int
}

// NewCreateBGPServiceIPRequest will create request of CreateBGPServiceIP action.
func (c *UADSClient) NewCreateBGPServiceIPRequest() *CreateBGPServiceIPRequest {
	req := &CreateBGPServiceIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateBGPServiceIP

分配一个BGP IP
*/
func (c *UADSClient) CreateBGPServiceIP(req *CreateBGPServiceIPRequest) (*CreateBGPServiceIPResponse, error) {
	var err error
	var res CreateBGPServiceIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateBGPServiceIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteBGPServiceFwdRuleRequest is request schema for DeleteBGPServiceFwdRule action
type DeleteBGPServiceFwdRuleRequest struct {
	request.CommonBase

	// 资源id
	ResourceId *string `required:"true"`

	// 需要删除的转发规则ID
	RuleIndex *int `required:"true"`
}

// DeleteBGPServiceFwdRuleResponse is response schema for DeleteBGPServiceFwdRule action
type DeleteBGPServiceFwdRuleResponse struct {
	response.CommonBase
}

// NewDeleteBGPServiceFwdRuleRequest will create request of DeleteBGPServiceFwdRule action.
func (c *UADSClient) NewDeleteBGPServiceFwdRuleRequest() *DeleteBGPServiceFwdRuleRequest {
	req := &DeleteBGPServiceFwdRuleRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteBGPServiceFwdRule

删除转发规则
*/
func (c *UADSClient) DeleteBGPServiceFwdRule(req *DeleteBGPServiceFwdRuleRequest) (*DeleteBGPServiceFwdRuleResponse, error) {
	var err error
	var res DeleteBGPServiceFwdRuleResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteBGPServiceFwdRule", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteBGPServiceIPRequest is request schema for DeleteBGPServiceIP action
type DeleteBGPServiceIPRequest struct {
	request.CommonBase

	// [公共参数] 机房(直接模式高防需要传)
	// Region *string `required:"false"`

	// 需要删除的高防IP
	DefenceIp *string `required:"true"`

	// 资源id
	ResourceId *string `required:"true"`
}

// DeleteBGPServiceIPResponse is response schema for DeleteBGPServiceIP action
type DeleteBGPServiceIPResponse struct {
	response.CommonBase
}

// NewDeleteBGPServiceIPRequest will create request of DeleteBGPServiceIP action.
func (c *UADSClient) NewDeleteBGPServiceIPRequest() *DeleteBGPServiceIPRequest {
	req := &DeleteBGPServiceIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteBGPServiceIP

删除BGP高防IP
*/
func (c *UADSClient) DeleteBGPServiceIP(req *DeleteBGPServiceIPRequest) (*DeleteBGPServiceIPResponse, error) {
	var err error
	var res DeleteBGPServiceIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteBGPServiceIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteHighProtectGameIPInfoRequest is request schema for DeleteHighProtectGameIPInfo action
type DeleteHighProtectGameIPInfoRequest struct {
	request.CommonBase

	// 要删除的高防ip
	DefenceIp *string `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// DeleteHighProtectGameIPInfoResponse is response schema for DeleteHighProtectGameIPInfo action
type DeleteHighProtectGameIPInfoResponse struct {
	response.CommonBase
}

// NewDeleteHighProtectGameIPInfoRequest will create request of DeleteHighProtectGameIPInfo action.
func (c *UADSClient) NewDeleteHighProtectGameIPInfoRequest() *DeleteHighProtectGameIPInfoRequest {
	req := &DeleteHighProtectGameIPInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteHighProtectGameIPInfo

删除高防IP
*/
func (c *UADSClient) DeleteHighProtectGameIPInfo(req *DeleteHighProtectGameIPInfoRequest) (*DeleteHighProtectGameIPInfoResponse, error) {
	var err error
	var res DeleteHighProtectGameIPInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteHighProtectGameIPInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteHighProtectGameServiceRequest is request schema for DeleteHighProtectGameService action
type DeleteHighProtectGameServiceRequest struct {
	request.CommonBase

	// 删除的资源Id
	ResourceId *string `required:"true"`
}

// DeleteHighProtectGameServiceResponse is response schema for DeleteHighProtectGameService action
type DeleteHighProtectGameServiceResponse struct {
	response.CommonBase
}

// NewDeleteHighProtectGameServiceRequest will create request of DeleteHighProtectGameService action.
func (c *UADSClient) NewDeleteHighProtectGameServiceRequest() *DeleteHighProtectGameServiceRequest {
	req := &DeleteHighProtectGameServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteHighProtectGameService

删除高防
*/
func (c *UADSClient) DeleteHighProtectGameService(req *DeleteHighProtectGameServiceRequest) (*DeleteHighProtectGameServiceResponse, error) {
	var err error
	var res DeleteHighProtectGameServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteHighProtectGameService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteNapAllowListDomainRequest is request schema for DeleteNapAllowListDomain action
type DeleteNapAllowListDomainRequest struct {
	request.CommonBase

	// 域名，N从0开始，多个域名：Domain.0、Domain.1、...
	Domain []string `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// DeleteNapAllowListDomainResponse is response schema for DeleteNapAllowListDomain action
type DeleteNapAllowListDomainResponse struct {
	response.CommonBase

	// 域名配置结果
	Data []DomainConfigResult
}

// NewDeleteNapAllowListDomainRequest will create request of DeleteNapAllowListDomain action.
func (c *UADSClient) NewDeleteNapAllowListDomainRequest() *DeleteNapAllowListDomainRequest {
	req := &DeleteNapAllowListDomainRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteNapAllowListDomain

删除域名允许列表
*/
func (c *UADSClient) DeleteNapAllowListDomain(req *DeleteNapAllowListDomainRequest) (*DeleteNapAllowListDomainResponse, error) {
	var err error
	var res DeleteNapAllowListDomainResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteNapAllowListDomain", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeBuyHighProtectGameIPPriceRequest is request schema for DescribeBuyHighProtectGameIPPrice action
type DescribeBuyHighProtectGameIPPriceRequest struct {
	request.CommonBase

	// 付费方式, 枚举值为: Year, 按年付费; Month, 按月付费; Dynamic, 按需付费(需开启权限); Trial
	ChargeType *string `required:"true"`

	// 购买数量
	Quantity *int `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// DescribeBuyHighProtectGameIPPriceResponse is response schema for DescribeBuyHighProtectGameIPPrice action
type DescribeBuyHighProtectGameIPPriceResponse struct {
	response.CommonBase

	// 溢价
	PremiumPrice float64

	// 单位价格
	UnitPrice float64
}

// NewDescribeBuyHighProtectGameIPPriceRequest will create request of DescribeBuyHighProtectGameIPPrice action.
func (c *UADSClient) NewDescribeBuyHighProtectGameIPPriceRequest() *DescribeBuyHighProtectGameIPPriceRequest {
	req := &DescribeBuyHighProtectGameIPPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeBuyHighProtectGameIPPrice

获取购买IP的价格
*/
func (c *UADSClient) DescribeBuyHighProtectGameIPPrice(req *DescribeBuyHighProtectGameIPPriceRequest) (*DescribeBuyHighProtectGameIPPriceResponse, error) {
	var err error
	var res DescribeBuyHighProtectGameIPPriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeBuyHighProtectGameIPPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeHighProtectGameIPInfoRequest is request schema for DescribeHighProtectGameIPInfo action
type DescribeHighProtectGameIPInfoRequest struct {
	request.CommonBase

	// 返回数据长度，默认为50。
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0。
	Offset *int `required:"false"`

	// 资源短id
	ResourceId *string `required:"true"`
}

// DescribeHighProtectGameIPInfoResponse is response schema for DescribeHighProtectGameIPInfo action
type DescribeHighProtectGameIPInfoResponse struct {
	response.CommonBase

	// 可用剩余ip配额数
	AvailableIPQuota int

	// 高防IP信息
	GameIPInfo []GameIpInfoTotal

	// 已经配置的总数
	TotalCount int
}

// NewDescribeHighProtectGameIPInfoRequest will create request of DescribeHighProtectGameIPInfo action.
func (c *UADSClient) NewDescribeHighProtectGameIPInfoRequest() *DescribeHighProtectGameIPInfoRequest {
	req := &DescribeHighProtectGameIPInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeHighProtectGameIPInfo

获取高防IP信息
*/
func (c *UADSClient) DescribeHighProtectGameIPInfo(req *DescribeHighProtectGameIPInfoRequest) (*DescribeHighProtectGameIPInfoResponse, error) {
	var err error
	var res DescribeHighProtectGameIPInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeHighProtectGameIPInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeNapHistoryStatisticRequest is request schema for DescribeNapHistoryStatistic action
type DescribeNapHistoryStatisticRequest struct {
	request.CommonBase

	// 查询粒度。1.分钟粒度 2.小时粒度 3.天粒度 默认为21.分钟粒度，BeginTime开始时间是7天内，EndTime-BeginTime时间跨度最大是1小时2.小时粒度，BeginTime开始时间是30天内，EndTime-BeginTime时间跨度最大是7天3.天粒度，BeginTime开始时间是180天内，EndTime-BeginTime时间跨度最大是90天
	Accuracy *int `required:"false"`

	// 开始时间，Unix时间戳
	BeginTime *int `required:"true"`

	// 结束时间，Unix时间戳
	EndTime *int `required:"true"`

	// 返回数据长度，默认不限制
	Limit *int `required:"false"`

	// 高防IP
	NapIP *string `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// DescribeNapHistoryStatisticResponse is response schema for DescribeNapHistoryStatistic action
type DescribeNapHistoryStatisticResponse struct {
	response.CommonBase

	// 统计数据
	NetStats []NetStats
}

// NewDescribeNapHistoryStatisticRequest will create request of DescribeNapHistoryStatistic action.
func (c *UADSClient) NewDescribeNapHistoryStatisticRequest() *DescribeNapHistoryStatisticRequest {
	req := &DescribeNapHistoryStatisticRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeNapHistoryStatistic

获取高防历史统计
*/
func (c *UADSClient) DescribeNapHistoryStatistic(req *DescribeNapHistoryStatisticRequest) (*DescribeNapHistoryStatisticResponse, error) {
	var err error
	var res DescribeNapHistoryStatisticResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeNapHistoryStatistic", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeNapRealTimeStatisticRequest is request schema for DescribeNapRealTimeStatistic action
type DescribeNapRealTimeStatisticRequest struct {
	request.CommonBase

	// 开始时间，Unix时间戳
	BeginTime *int `required:"true"`

	// 结束时间，Unix时间戳（时间跨度不超过1小时）
	EndTime *int `required:"true"`

	// 返回数据长度，默认不限制
	Limit *int `required:"false"`

	// 高防IP
	NapIP *string `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// DescribeNapRealTimeStatisticResponse is response schema for DescribeNapRealTimeStatistic action
type DescribeNapRealTimeStatisticResponse struct {
	response.CommonBase

	// 统计数据
	NetStats []NetStats
}

// NewDescribeNapRealTimeStatisticRequest will create request of DescribeNapRealTimeStatistic action.
func (c *UADSClient) NewDescribeNapRealTimeStatisticRequest() *DescribeNapRealTimeStatisticRequest {
	req := &DescribeNapRealTimeStatisticRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeNapRealTimeStatistic

获取高防实时统计
*/
func (c *UADSClient) DescribeNapRealTimeStatistic(req *DescribeNapRealTimeStatisticRequest) (*DescribeNapRealTimeStatisticResponse, error) {
	var err error
	var res DescribeNapRealTimeStatisticResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeNapRealTimeStatistic", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeNapServiceInfoRequest is request schema for DescribeNapServiceInfo action
type DescribeNapServiceInfoRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 返回数据长度，默认为10
	Limit *int `required:"false"`

	// 高防类型；0：全部、1：内地高防、2：海外高防
	NapType *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 资源ID
	ResourceId *string `required:"false"`
}

// DescribeNapServiceInfoResponse is response schema for DescribeNapServiceInfo action
type DescribeNapServiceInfoResponse struct {
	response.CommonBase

	// 高防服务信息
	ServiceInfo []ServiceInfo

	// 总数
	TotalCount int
}

// NewDescribeNapServiceInfoRequest will create request of DescribeNapServiceInfo action.
func (c *UADSClient) NewDescribeNapServiceInfoRequest() *DescribeNapServiceInfoRequest {
	req := &DescribeNapServiceInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeNapServiceInfo

获取高防服务信息
*/
func (c *UADSClient) DescribeNapServiceInfo(req *DescribeNapServiceInfoRequest) (*DescribeNapServiceInfoResponse, error) {
	var err error
	var res DescribeNapServiceInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeNapServiceInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribePassthroughNapIPRequest is request schema for DescribePassthroughNapIP action
type DescribePassthroughNapIPRequest struct {
	request.CommonBase

	// 限制(传EIPs.0时暂时无效)
	Limit *int `required:"false"`

	// 高防IP
	NapIp *string `required:"false"`

	// 位偏移(传EIPs.0时暂时无效)
	Offset *int `required:"false"`

	// 高防资源ID
	ResourceId *string `required:"true"`
}

// DescribePassthroughNapIPResponse is response schema for DescribePassthroughNapIP action
type DescribePassthroughNapIPResponse struct {
	response.CommonBase

	// 合法IP配额
	AvailableIPQuota int

	// EIP信息
	IPInfo []IPInfo

	// 错误信息
	Message string

	// IP总个数
	TotalCount int
}

// NewDescribePassthroughNapIPRequest will create request of DescribePassthroughNapIP action.
func (c *UADSClient) NewDescribePassthroughNapIPRequest() *DescribePassthroughNapIPRequest {
	req := &DescribePassthroughNapIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribePassthroughNapIP

获取直连高防IP信息
*/
func (c *UADSClient) DescribePassthroughNapIP(req *DescribePassthroughNapIPRequest) (*DescribePassthroughNapIPResponse, error) {
	var err error
	var res DescribePassthroughNapIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribePassthroughNapIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUpgradeHighProtectGameServicePriceRequest is request schema for DescribeUpgradeHighProtectGameServicePrice action
type DescribeUpgradeHighProtectGameServicePriceRequest struct {
	request.CommonBase

	// 区域，华东和华南，EastChina 和SouthChina
	AreaLine *string `required:"false"`

	// DDoS弹性防护值
	DefenceDDosBaseFlowArr []string `required:"false"`

	// DDoS基础防护值
	DefenceDDosMaxFlowArr []string `required:"false"`

	// 防御类型，默认为TypeFixed
	DefenceType *string `required:"false"`

	// 代表机房，例如Dongguan  Hangzhou
	EngineRoom []string `required:"false"`

	// 线路
	LineType *string `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`

	// 带宽，默认100M
	SrcBandwidth *int `required:"false"`
}

// DescribeUpgradeHighProtectGameServicePriceResponse is response schema for DescribeUpgradeHighProtectGameServicePrice action
type DescribeUpgradeHighProtectGameServicePriceResponse struct {
	response.CommonBase

	// 收费IP配额
	ChargeIPQuota int

	// 免费IP配额
	FreeIPQuota int

	// 价格
	Price int
}

// NewDescribeUpgradeHighProtectGameServicePriceRequest will create request of DescribeUpgradeHighProtectGameServicePrice action.
func (c *UADSClient) NewDescribeUpgradeHighProtectGameServicePriceRequest() *DescribeUpgradeHighProtectGameServicePriceRequest {
	req := &DescribeUpgradeHighProtectGameServicePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUpgradeHighProtectGameServicePrice

获取高防升降级价格
*/
func (c *UADSClient) DescribeUpgradeHighProtectGameServicePrice(req *DescribeUpgradeHighProtectGameServicePriceRequest) (*DescribeUpgradeHighProtectGameServicePriceResponse, error) {
	var err error
	var res DescribeUpgradeHighProtectGameServicePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUpgradeHighProtectGameServicePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetBGPServiceFwdRuleRequest is request schema for GetBGPServiceFwdRule action
type GetBGPServiceFwdRuleRequest struct {
	request.CommonBase

	// 指定需要查询的IP下的规则
	BgpIP *string `required:"false"`

	// 分页显示的条目数，默认值为32
	Limit *int `required:"false"`

	// 分页显示的起始偏移，默认值为0
	Offset *int `required:"false"`

	// 资源id
	ResourceId *string `required:"true"`

	// 查询指定的rule_id, 不填写则默认获取所有的转发规则
	RuleIndex *int `required:"false"`
}

// GetBGPServiceFwdRuleResponse is response schema for GetBGPServiceFwdRule action
type GetBGPServiceFwdRuleResponse struct {
	response.CommonBase

	// 负载模式下可添加的规则数量（根据IP查询才返回此参数）
	AvailLoad int

	// 非负载模式下可添加的规则数量（根据IP查询才返回此参数）
	AvailNonload int

	// 当前配置的规则中是否存在IP规则（根据IP查询才返回此参数）
	IpRuleExist bool

	// 满足要求的数据条目
	RuleCnt int

	// 转发规则信息
	RuleInfo []BGPFwdRule
}

// NewGetBGPServiceFwdRuleRequest will create request of GetBGPServiceFwdRule action.
func (c *UADSClient) NewGetBGPServiceFwdRuleRequest() *GetBGPServiceFwdRuleRequest {
	req := &GetBGPServiceFwdRuleRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetBGPServiceFwdRule

获取转发规则
*/
func (c *UADSClient) GetBGPServiceFwdRule(req *GetBGPServiceFwdRuleRequest) (*GetBGPServiceFwdRuleResponse, error) {
	var err error
	var res GetBGPServiceFwdRuleResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetBGPServiceFwdRule", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetBGPServiceIPRequest is request schema for GetBGPServiceIP action
type GetBGPServiceIPRequest struct {
	request.CommonBase

	// BGP高防IP
	BgpIP *string `required:"false"`

	// 分页显示的条目数，默认值为32
	Limit *int `required:"false"`

	// 分页显示的起始偏移，默认值为0
	Offset *int `required:"false"`

	// 资源id
	ResourceId *string `required:"true"`
}

// GetBGPServiceIPResponse is response schema for GetBGPServiceIP action
type GetBGPServiceIPResponse struct {
	response.CommonBase

	// 套餐可用的ip配额
	AvailableIPQuota int

	// 返回高防IP的相关信息
	GameIPInfo []GameIpInfoTotal

	// 套餐中已经配置的ip数量
	TotalCount int
}

// NewGetBGPServiceIPRequest will create request of GetBGPServiceIP action.
func (c *UADSClient) NewGetBGPServiceIPRequest() *GetBGPServiceIPRequest {
	req := &GetBGPServiceIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetBGPServiceIP

获取BGP高防IP的信息
*/
func (c *UADSClient) GetBGPServiceIP(req *GetBGPServiceIPRequest) (*GetBGPServiceIPResponse, error) {
	var err error
	var res GetBGPServiceIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetBGPServiceIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetBuyNapServicePriceRequest is request schema for GetBuyNapServicePrice action
type GetBuyNapServicePriceRequest struct {
	request.CommonBase

	// 接入模式，Domain：网站接入、IP：非网站接入；默认为：IP
	AccessMode *string `required:"false"`

	// 地区线路
	AreaLine *string `required:"true"`

	// 计费方式
	ChargeType *string `required:"true"`

	// DDoS基础防护流量
	DefenceDDosBaseFlowArr []string `required:"true"`

	// DDoS最大防护流量
	DefenceDDosMaxFlowArr []string `required:"true"`

	// 地区
	EngineRoom []string `required:"true"`

	// 线路类型
	LineType *string `required:"true"`

	// 计费时长
	Quantity *string `required:"true"`

	// 带宽
	SrcBandwidth *string `required:"true"`
}

// GetBuyNapServicePriceResponse is response schema for GetBuyNapServicePrice action
type GetBuyNapServicePriceResponse struct {
	response.CommonBase

	// 收费IP配额
	ChargeIPQuota int

	// 免费IP配额
	FreeIPQuota int

	// 错误信息
	Message string

	// 价格
	Price float64

	// UDP免费IP配额
	UdpFreeIpQuota int
}

// NewGetBuyNapServicePriceRequest will create request of GetBuyNapServicePrice action.
func (c *UADSClient) NewGetBuyNapServicePriceRequest() *GetBuyNapServicePriceRequest {
	req := &GetBuyNapServicePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetBuyNapServicePrice

获取高防价格
*/
func (c *UADSClient) GetBuyNapServicePrice(req *GetBuyNapServicePriceRequest) (*GetBuyNapServicePriceResponse, error) {
	var err error
	var res GetBuyNapServicePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetBuyNapServicePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetNapAllowListDomainRequest is request schema for GetNapAllowListDomain action
type GetNapAllowListDomainRequest struct {
	request.CommonBase

	// 获取指定域名信息
	Domain *string `required:"false"`

	// 域名模糊查找
	DomainLike *string `required:"false"`

	// 返回数据长度，默认为1000
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// GetNapAllowListDomainResponse is response schema for GetNapAllowListDomain action
type GetNapAllowListDomainResponse struct {
	response.CommonBase

	// 域名允许列表
	DomainList []BlockAllowDomainEntry

	// 列表总条目数
	TotalCount int
}

// NewGetNapAllowListDomainRequest will create request of GetNapAllowListDomain action.
func (c *UADSClient) NewGetNapAllowListDomainRequest() *GetNapAllowListDomainRequest {
	req := &GetNapAllowListDomainRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetNapAllowListDomain

获取域名允许列表
*/
func (c *UADSClient) GetNapAllowListDomain(req *GetNapAllowListDomainRequest) (*GetNapAllowListDomainResponse, error) {
	var err error
	var res GetNapAllowListDomainResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetNapAllowListDomain", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetNapServiceConfigRequest is request schema for GetNapServiceConfig action
type GetNapServiceConfigRequest struct {
	request.CommonBase

	// 线路区域
	AreaLine *string `required:"false"`

	// 购买的套餐所在机房
	EngineRoom *string `required:"false"`

	// 线路类型
	LineType *string `required:"false"`

	// 高防类型；0：全部、1：内地高防、:2：亚太高防
	NapType *int `required:"false"`
}

// GetNapServiceConfigResponse is response schema for GetNapServiceConfig action
type GetNapServiceConfigResponse struct {
	response.CommonBase

	// 高防服务配置
	NapServiceConfig []NapServiceConfigEntry
}

// NewGetNapServiceConfigRequest will create request of GetNapServiceConfig action.
func (c *UADSClient) NewGetNapServiceConfigRequest() *GetNapServiceConfigRequest {
	req := &GetNapServiceConfigRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetNapServiceConfig

获取高防服务配置
*/
func (c *UADSClient) GetNapServiceConfig(req *GetNapServiceConfigRequest) (*GetNapServiceConfigResponse, error) {
	var err error
	var res GetNapServiceConfigResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetNapServiceConfig", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyHighProtectGameIPInfoRequest is request schema for ModifyHighProtectGameIPInfo action
type ModifyHighProtectGameIPInfoRequest struct {
	request.CommonBase

	// 高防ip
	DefenceIp *string `required:"true"`

	// 资源Id
	ResourceId *string `required:"true"`

	// 源站IP
	UserIP *string `required:"true"`
}

// ModifyHighProtectGameIPInfoResponse is response schema for ModifyHighProtectGameIPInfo action
type ModifyHighProtectGameIPInfoResponse struct {
	response.CommonBase
}

// NewModifyHighProtectGameIPInfoRequest will create request of ModifyHighProtectGameIPInfo action.
func (c *UADSClient) NewModifyHighProtectGameIPInfoRequest() *ModifyHighProtectGameIPInfoRequest {
	req := &ModifyHighProtectGameIPInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyHighProtectGameIPInfo

修改高防IP信息
*/
func (c *UADSClient) ModifyHighProtectGameIPInfo(req *ModifyHighProtectGameIPInfoRequest) (*ModifyHighProtectGameIPInfoResponse, error) {
	var err error
	var res ModifyHighProtectGameIPInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyHighProtectGameIPInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyHighProtectGameServiceRequest is request schema for ModifyHighProtectGameService action
type ModifyHighProtectGameServiceRequest struct {
	request.CommonBase

	// 高防名称
	HighProtectGameServiceName *string `required:"false"`

	// 资源Id
	ResourceId *string `required:"true"`
}

// ModifyHighProtectGameServiceResponse is response schema for ModifyHighProtectGameService action
type ModifyHighProtectGameServiceResponse struct {
	response.CommonBase
}

// NewModifyHighProtectGameServiceRequest will create request of ModifyHighProtectGameService action.
func (c *UADSClient) NewModifyHighProtectGameServiceRequest() *ModifyHighProtectGameServiceRequest {
	req := &ModifyHighProtectGameServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyHighProtectGameService

修改高防信息
*/
func (c *UADSClient) ModifyHighProtectGameService(req *ModifyHighProtectGameServiceRequest) (*ModifyHighProtectGameServiceResponse, error) {
	var err error
	var res ModifyHighProtectGameServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyHighProtectGameService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyNapServiceAutoRenewRequest is request schema for ModifyNapServiceAutoRenew action
type ModifyNapServiceAutoRenewRequest struct {
	request.CommonBase

	// 自动续费开关， 0：关闭；1：开启
	AutoRenew *int `required:"true"`

	// 资源Id
	ResourceId *string `required:"true"`
}

// ModifyNapServiceAutoRenewResponse is response schema for ModifyNapServiceAutoRenew action
type ModifyNapServiceAutoRenewResponse struct {
	response.CommonBase
}

// NewModifyNapServiceAutoRenewRequest will create request of ModifyNapServiceAutoRenew action.
func (c *UADSClient) NewModifyNapServiceAutoRenewRequest() *ModifyNapServiceAutoRenewRequest {
	req := &ModifyNapServiceAutoRenewRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyNapServiceAutoRenew

修改高防服务自动续费开关
*/
func (c *UADSClient) ModifyNapServiceAutoRenew(req *ModifyNapServiceAutoRenewRequest) (*ModifyNapServiceAutoRenewResponse, error) {
	var err error
	var res ModifyNapServiceAutoRenewResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyNapServiceAutoRenew", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RenewHighProtectGameServiceRequest is request schema for RenewHighProtectGameService action
type RenewHighProtectGameServiceRequest struct {
	request.CommonBase

	// 区域，华东和华南，EastChina 和SouthChina
	AreaLine *string `required:"true"`

	// 计费方式
	ChargeType *string `required:"true"`

	// 代金券ID
	CouponId *string `required:"false"`

	// DDoS基础防御值
	DefenceDDosBaseFlowArr []string `required:"false"`

	// DDoS弹性防御值
	DefenceDDosMaxFlowArr []string `required:"false"`

	// 防御类型，默认为TypeFixed
	DefenceType *string `required:"false"`

	// 代表机房，例如Dongguan  Hangzhou
	EngineRoom []string `required:"true"`

	// 线路
	LineType *string `required:"true"`

	// 购买数量
	Quantity *int `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`

	// 带宽，默认100M
	SrcBandwidth *int `required:"true"`
}

// RenewHighProtectGameServiceResponse is response schema for RenewHighProtectGameService action
type RenewHighProtectGameServiceResponse struct {
	response.CommonBase

	// 资源信息
	ResourceInfo ResourceInfo
}

// NewRenewHighProtectGameServiceRequest will create request of RenewHighProtectGameService action.
func (c *UADSClient) NewRenewHighProtectGameServiceRequest() *RenewHighProtectGameServiceRequest {
	req := &RenewHighProtectGameServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RenewHighProtectGameService

续费高防服务
*/
func (c *UADSClient) RenewHighProtectGameService(req *RenewHighProtectGameServiceRequest) (*RenewHighProtectGameServiceResponse, error) {
	var err error
	var res RenewHighProtectGameServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RenewHighProtectGameService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetNapDomainEntryRemarkRequest is request schema for SetNapDomainEntryRemark action
type SetNapDomainEntryRemarkRequest struct {
	request.CommonBase

	// 域名
	Domain *string `required:"true"`

	// 备注,默认为空
	Remark *string `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// SetNapDomainEntryRemarkResponse is response schema for SetNapDomainEntryRemark action
type SetNapDomainEntryRemarkResponse struct {
	response.CommonBase
}

// NewSetNapDomainEntryRemarkRequest will create request of SetNapDomainEntryRemark action.
func (c *UADSClient) NewSetNapDomainEntryRemarkRequest() *SetNapDomainEntryRemarkRequest {
	req := &SetNapDomainEntryRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetNapDomainEntryRemark

设置域名条目备注
*/
func (c *UADSClient) SetNapDomainEntryRemark(req *SetNapDomainEntryRemarkRequest) (*SetNapDomainEntryRemarkResponse, error) {
	var err error
	var res SetNapDomainEntryRemarkResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetNapDomainEntryRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetNapFwdRuleRemarkRequest is request schema for SetNapFwdRuleRemark action
type SetNapFwdRuleRemarkRequest struct {
	request.CommonBase

	// 备注,默认为空
	Remark *string `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`

	// 要修改的规则index
	RuleIndex *string `required:"true"`
}

// SetNapFwdRuleRemarkResponse is response schema for SetNapFwdRuleRemark action
type SetNapFwdRuleRemarkResponse struct {
	response.CommonBase
}

// NewSetNapFwdRuleRemarkRequest will create request of SetNapFwdRuleRemark action.
func (c *UADSClient) NewSetNapFwdRuleRemarkRequest() *SetNapFwdRuleRemarkRequest {
	req := &SetNapFwdRuleRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetNapFwdRuleRemark

设置高防转发规则备注信息
*/
func (c *UADSClient) SetNapFwdRuleRemark(req *SetNapFwdRuleRemarkRequest) (*SetNapFwdRuleRemarkResponse, error) {
	var err error
	var res SetNapFwdRuleRemarkResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetNapFwdRuleRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetNapIpRemarkRequest is request schema for SetNapIpRemark action
type SetNapIpRemarkRequest struct {
	request.CommonBase

	// 高防IP
	NapIp *string `required:"true"`

	// 备注，默认为空
	Remark *string `required:"false"`

	// 资源ID
	ResourceId *string `required:"true"`
}

// SetNapIpRemarkResponse is response schema for SetNapIpRemark action
type SetNapIpRemarkResponse struct {
	response.CommonBase
}

// NewSetNapIpRemarkRequest will create request of SetNapIpRemark action.
func (c *UADSClient) NewSetNapIpRemarkRequest() *SetNapIpRemarkRequest {
	req := &SetNapIpRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetNapIpRemark

设置高防IP的备注信息
*/
func (c *UADSClient) SetNapIpRemark(req *SetNapIpRemarkRequest) (*SetNapIpRemarkResponse, error) {
	var err error
	var res SetNapIpRemarkResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetNapIpRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UnBindNapIPRequest is request schema for UnBindNapIP action
type UnBindNapIPRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 需要解绑的资源ID
	BindResourceId *string `required:"true"`

	// 高防EIP资源ID
	EIPId *string `required:"true"`

	// 高防Ip
	NapIp *string `required:"true"`

	// 高防资源ID
	ResourceId *string `required:"true"`

	// 解绑的资源类型(uhost:云主机,ulb:负载均衡,upm:物理机)
	ResourceType *string `required:"true"`
}

// UnBindNapIPResponse is response schema for UnBindNapIP action
type UnBindNapIPResponse struct {
	response.CommonBase

	// 错误信息
	Message string
}

// NewUnBindNapIPRequest will create request of UnBindNapIP action.
func (c *UADSClient) NewUnBindNapIPRequest() *UnBindNapIPRequest {
	req := &UnBindNapIPRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UnBindNapIP

直连高防：将高防EIP从资源上解绑
*/
func (c *UADSClient) UnBindNapIP(req *UnBindNapIPRequest) (*UnBindNapIPResponse, error) {
	var err error
	var res UnBindNapIPResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UnBindNapIP", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateBGPServiceFwdRuleRequest is request schema for UpdateBGPServiceFwdRule action
type UpdateBGPServiceFwdRuleRequest struct {
	request.CommonBase

	// 备份源站的IP
	BackupIP *string `required:"false"`

	// 备份源站的端口
	BackupPort *int `required:"false"`

	// 备份源站的toa id
	BackupToa *int `required:"false"`

	// BGP的IP
	BgpIP *string `required:"true"`

	// 默认为0，为IP协议的转发端口，其余的自定义
	BgpIPPort *int `required:"false"`

	// 转发协议的类型包括三种：默认为“IP”，还可以选择为“TCP”或"UDP"
	FwdType *string `required:"false"`

	// 转发协议的类型是否为负载均衡的：默认为“No”，还可以选择为“Yes”。负载模式的规则最多添加2条，非负载模式的规则最多添加8条
	LoadBalance *string `required:"false"`

	// 资源id
	ResourceId *string `required:"true"`

	// 规则uuid
	RuleID *string `required:"true"`

	// 要修改的规则index
	RuleIndex *int `required:"true"`

	// 回源地址,可填 IP地址 或 域名
	SourceAddrArr []string `required:"false"`

	// 表示对源站进行检测：默认为0表示关闭，还可以选择为1表示开启
	SourceDetect *int `required:"false"`

	// 回源端口
	SourcePortArr []string `required:"false"`

	// 回源TOA
	SourceToaIDArr []string `required:"false"`
}

// UpdateBGPServiceFwdRuleResponse is response schema for UpdateBGPServiceFwdRule action
type UpdateBGPServiceFwdRuleResponse struct {
	response.CommonBase

	// 转发规则的数据库索引
	RuleIndex int
}

// NewUpdateBGPServiceFwdRuleRequest will create request of UpdateBGPServiceFwdRule action.
func (c *UADSClient) NewUpdateBGPServiceFwdRuleRequest() *UpdateBGPServiceFwdRuleRequest {
	req := &UpdateBGPServiceFwdRuleRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateBGPServiceFwdRule

用于修改BGP高防的规则信息
*/
func (c *UADSClient) UpdateBGPServiceFwdRule(req *UpdateBGPServiceFwdRuleRequest) (*UpdateBGPServiceFwdRuleResponse, error) {
	var err error
	var res UpdateBGPServiceFwdRuleResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateBGPServiceFwdRule", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateNapFwdRuleDomainResolutionRequest is request schema for UpdateNapFwdRuleDomainResolution action
type UpdateNapFwdRuleDomainResolutionRequest struct {
	request.CommonBase

	// 资源ID
	ResourceId *string `required:"true"`

	// 要修改的规则index
	RuleIndex *int `required:"true"`
}

// UpdateNapFwdRuleDomainResolutionResponse is response schema for UpdateNapFwdRuleDomainResolution action
type UpdateNapFwdRuleDomainResolutionResponse struct {
	response.CommonBase
}

// NewUpdateNapFwdRuleDomainResolutionRequest will create request of UpdateNapFwdRuleDomainResolution action.
func (c *UADSClient) NewUpdateNapFwdRuleDomainResolutionRequest() *UpdateNapFwdRuleDomainResolutionRequest {
	req := &UpdateNapFwdRuleDomainResolutionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateNapFwdRuleDomainResolution

手动触发域名回源转发规则更新
*/
func (c *UADSClient) UpdateNapFwdRuleDomainResolution(req *UpdateNapFwdRuleDomainResolutionRequest) (*UpdateNapFwdRuleDomainResolutionResponse, error) {
	var err error
	var res UpdateNapFwdRuleDomainResolutionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateNapFwdRuleDomainResolution", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpgradeHighProtectGameServiceRequest is request schema for UpgradeHighProtectGameService action
type UpgradeHighProtectGameServiceRequest struct {
	request.CommonBase

	// 区域，华东和华南，EastChina 和SouthChina
	AreaLine *string `required:"true"`

	// 代金券ID
	CouponId *string `required:"false"`

	// DDoS基础防御值
	DefenceDDosBaseFlowArr []string `required:"false"`

	// DDoS弹性防御值
	DefenceDDosMaxFlowArr []string `required:"false"`

	// 防御类型，默认为TypeFixed
	DefenceType *string `required:"false"`

	// 机房
	EngineRoom []string `required:"true"`

	// 线路类型
	LineType *string `required:"true"`

	// 资源ID
	ResourceId *string `required:"true"`

	// 业务带宽
	SrcBandwidth *int `required:"true"`
}

// UpgradeHighProtectGameServiceResponse is response schema for UpgradeHighProtectGameService action
type UpgradeHighProtectGameServiceResponse struct {
	response.CommonBase

	// 返回资源信息
	ResourceInfo ResourceInfo
}

// NewUpgradeHighProtectGameServiceRequest will create request of UpgradeHighProtectGameService action.
func (c *UADSClient) NewUpgradeHighProtectGameServiceRequest() *UpgradeHighProtectGameServiceRequest {
	req := &UpgradeHighProtectGameServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpgradeHighProtectGameService

升降级高防服务
*/
func (c *UADSClient) UpgradeHighProtectGameService(req *UpgradeHighProtectGameServiceRequest) (*UpgradeHighProtectGameServiceResponse, error) {
	var err error
	var res UpgradeHighProtectGameServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpgradeHighProtectGameService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
