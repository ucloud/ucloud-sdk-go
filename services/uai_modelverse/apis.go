// Code is generated by ucloud-model, DO NOT EDIT IT.

package uai_modelverse

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UAI_Modelverse API Schema

// CreateMVAppRequest is request schema for CreateMVApp action
type CreateMVAppRequest struct {
	request.CommonBase

	// 应用描述
	AppDes *string `required:"false"`

	// 应用名称
	AppName *string `required:"true"`

	// 应用类型
	AppType *int `required:"true"`

	// 语言模型ID
	LLMID *string `required:"true"`

	// 模型采样温度 ，(0，100) 开区间，不能等于 0 或 100，默认值95
	LLMTemperature *int `required:"false"`

	// 模型采样温度（核取样）， (0，100) 开区间，不能等于 0 或 100，默认值70
	LLMTopP *int `required:"false"`
}

// CreateMVAppResponse is response schema for CreateMVApp action
type CreateMVAppResponse struct {
	response.CommonBase

	// 应用信息
	AppInfo AppInfo

	// Code非0时，描述错误信息
	Msg string
}

// NewCreateMVAppRequest will create request of CreateMVApp action.
func (c *UAI_ModelverseClient) NewCreateMVAppRequest() *CreateMVAppRequest {
	req := &CreateMVAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateMVApp

提供参数创建应用
*/
func (c *UAI_ModelverseClient) CreateMVApp(req *CreateMVAppRequest) (*CreateMVAppResponse, error) {
	var err error
	var res CreateMVAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateMVApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteMVAppRequest is request schema for DeleteMVApp action
type DeleteMVAppRequest struct {
	request.CommonBase

	// 应用ID
	AppID *string `required:"true"`
}

// DeleteMVAppResponse is response schema for DeleteMVApp action
type DeleteMVAppResponse struct {
	response.CommonBase

	// Code非0时，描述错误信息
	Msg string
}

// NewDeleteMVAppRequest will create request of DeleteMVApp action.
func (c *UAI_ModelverseClient) NewDeleteMVAppRequest() *DeleteMVAppRequest {
	req := &DeleteMVAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteMVApp

删除应用
*/
func (c *UAI_ModelverseClient) DeleteMVApp(req *DeleteMVAppRequest) (*DeleteMVAppResponse, error) {
	var err error
	var res DeleteMVAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteMVApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// QueryMVAppRequest is request schema for QueryMVApp action
type QueryMVAppRequest struct {
	request.CommonBase

	// 应用ID (缺省则返回所有应用列表)
	APPID *string `required:"false"`
}

// QueryMVAppResponse is response schema for QueryMVApp action
type QueryMVAppResponse struct {
	response.CommonBase

	// 应用信息列表
	AppInfo []AppInfo

	// Code非0时，描述错误信息
	Msg string
}

// NewQueryMVAppRequest will create request of QueryMVApp action.
func (c *UAI_ModelverseClient) NewQueryMVAppRequest() *QueryMVAppRequest {
	req := &QueryMVAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: QueryMVApp

查询用户创建的应用信息
*/
func (c *UAI_ModelverseClient) QueryMVApp(req *QueryMVAppRequest) (*QueryMVAppResponse, error) {
	var err error
	var res QueryMVAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("QueryMVApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// QueryMVLLMListRequest is request schema for QueryMVLLMList action
type QueryMVLLMListRequest struct {
	request.CommonBase

	// 语言模型ID (缺省则返回所有模型列表)
	LLMID *string `required:"false"`
}

// QueryMVLLMListResponse is response schema for QueryMVLLMList action
type QueryMVLLMListResponse struct {
	response.CommonBase

	// 语言模型列表
	LLMInfoList []LLMInfo

	// 状态码描述
	Msg string
}

// NewQueryMVLLMListRequest will create request of QueryMVLLMList action.
func (c *UAI_ModelverseClient) NewQueryMVLLMListRequest() *QueryMVLLMListRequest {
	req := &QueryMVLLMListRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: QueryMVLLMList

查询可用的语言模型列表
*/
func (c *UAI_ModelverseClient) QueryMVLLMList(req *QueryMVLLMListRequest) (*QueryMVLLMListResponse, error) {
	var err error
	var res QueryMVLLMListResponse

	reqCopier := *req

	err = c.Client.InvokeAction("QueryMVLLMList", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RunMVChatRequest is request schema for RunMVChat action
type RunMVChatRequest struct {
	request.CommonBase

	// 应用 ID
	AppID *string `required:"true"`

	// 按时间从老到新传输对话列表集合，需要与Role一一对应Content为本条信息的具体内容
	Content []string `required:"true"`

	// 按时间从老到新传输对话列表集合，需要与Content一一对应Role为本条信息作者的角色，枚举值为user 或 assistant- user 指用户角色输入的信息- assistant 指模型返回的信息
	Role []string `required:"true"`

	// 会话 ID (不填写默认创建新会话)
	SessionID *int `required:"false"`
}

// RunMVChatResponse is response schema for RunMVChat action
type RunMVChatResponse struct {
	response.CommonBase

	// 消息唯一标识
	ID int

	// 状态码描述
	Msg string

	// 回复内容
	Response string

	// 会话id
	SessionID int

	// 时间
	Time int
}

// NewRunMVChatRequest will create request of RunMVChat action.
func (c *UAI_ModelverseClient) NewRunMVChatRequest() *RunMVChatRequest {
	req := &RunMVChatRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: RunMVChat

聊天接口
*/
func (c *UAI_ModelverseClient) RunMVChat(req *RunMVChatRequest) (*RunMVChatResponse, error) {
	var err error
	var res RunMVChatResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RunMVChat", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateMVAppRequest is request schema for UpdateMVApp action
type UpdateMVAppRequest struct {
	request.CommonBase

	// 应用描述
	AppDes *string `required:"false"`

	// 应用ID
	AppID *string `required:"true"`

	// 应用名称
	AppName *string `required:"false"`

	// 应用状态
	AppState *int `required:"false"`

	// 应用类型
	AppType *int `required:"false"`

	// 语言模型ID
	LLMID *string `required:"false"`

	// 模型采样温度，(0,100)开区间，默认值95
	LLMTemperature *int `required:"false"`

	// 模型采样温度（核取样），(0,100)开区间，默认值70
	LLMTopP *int `required:"false"`
}

// UpdateMVAppResponse is response schema for UpdateMVApp action
type UpdateMVAppResponse struct {
	response.CommonBase

	//
	AppInfo AppInfo

	// Code非0时，描述错误信息
	Msg string
}

// NewUpdateMVAppRequest will create request of UpdateMVApp action.
func (c *UAI_ModelverseClient) NewUpdateMVAppRequest() *UpdateMVAppRequest {
	req := &UpdateMVAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateMVApp

更新应用
*/
func (c *UAI_ModelverseClient) UpdateMVApp(req *UpdateMVAppRequest) (*UpdateMVAppResponse, error) {
	var err error
	var res UpdateMVAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateMVApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
