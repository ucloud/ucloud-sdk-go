// Code is generated by ucloud-model, DO NOT EDIT IT.

package uai_modelverse

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UAI_Modelverse API Schema

// CreateUMInferAPIKeyRequest is request schema for CreateUMInferAPIKey action
type CreateUMInferAPIKeyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// apikey名称
	Name *string `required:"true"`
}

// CreateUMInferAPIKeyResponse is response schema for CreateUMInferAPIKey action
type CreateUMInferAPIKeyResponse struct {
	response.CommonBase

	// apikey
	Data APIKey
}

// NewCreateUMInferAPIKeyRequest will create request of CreateUMInferAPIKey action.
func (c *UAI_ModelverseClient) NewCreateUMInferAPIKeyRequest() *CreateUMInferAPIKeyRequest {
	req := &CreateUMInferAPIKeyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUMInferAPIKey

创建apikey
*/
func (c *UAI_ModelverseClient) CreateUMInferAPIKey(req *CreateUMInferAPIKeyRequest) (*CreateUMInferAPIKeyResponse, error) {
	var err error
	var res CreateUMInferAPIKeyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUMInferAPIKey", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUMInferAPIKeyRequest is request schema for DeleteUMInferAPIKey action
type DeleteUMInferAPIKeyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 要删除的apikey id
	KeyId *string `required:"true"`
}

// DeleteUMInferAPIKeyResponse is response schema for DeleteUMInferAPIKey action
type DeleteUMInferAPIKeyResponse struct {
	response.CommonBase

	// apikey 的资源ID
	UminferID string
}

// NewDeleteUMInferAPIKeyRequest will create request of DeleteUMInferAPIKey action.
func (c *UAI_ModelverseClient) NewDeleteUMInferAPIKeyRequest() *DeleteUMInferAPIKeyRequest {
	req := &DeleteUMInferAPIKeyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUMInferAPIKey

删除apikey
*/
func (c *UAI_ModelverseClient) DeleteUMInferAPIKey(req *DeleteUMInferAPIKeyRequest) (*DeleteUMInferAPIKeyResponse, error) {
	var err error
	var res DeleteUMInferAPIKeyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUMInferAPIKey", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMInferAPIModelRequest is request schema for GetUMInferAPIModel action
type GetUMInferAPIModelRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// apikey 的id
	KeyId *string `required:"false"`

	// 模型类型，1: 文本生成，2: 图片生成。
	ModelType *int `required:"false"`

	// 模型广场的id，用来跳转体验中心
	SquareId *string `required:"false"`
}

// GetUMInferAPIModelResponse is response schema for GetUMInferAPIModel action
type GetUMInferAPIModelResponse struct {
	response.CommonBase

	// 模型名称的字符串列表
	Data []UMinferAPIModel
}

// NewGetUMInferAPIModelRequest will create request of GetUMInferAPIModel action.
func (c *UAI_ModelverseClient) NewGetUMInferAPIModelRequest() *GetUMInferAPIModelRequest {
	req := &GetUMInferAPIModelRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMInferAPIModel

获取该apikey能调用api的模型列表
*/
func (c *UAI_ModelverseClient) GetUMInferAPIModel(req *GetUMInferAPIModelRequest) (*GetUMInferAPIModelResponse, error) {
	var err error
	var res GetUMInferAPIModelResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMInferAPIModel", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMInferServiceRequest is request schema for GetUMInferService action
type GetUMInferServiceRequest struct {
	request.CommonBase

	// limit
	Limit *string `required:"false"`

	// offset
	Offset *string `required:"false"`

	// 推理服务id
	UminferID *string `required:"false"`

	// 默认preDeploy,可获取DeepSeek Key
	UminferType *string `required:"false"`
}

// GetUMInferServiceResponse is response schema for GetUMInferService action
type GetUMInferServiceResponse struct {
	response.CommonBase

	// 推理服务数据
	Data []UMInferServiceData

	// 模型数量
	TotalCount int
}

// NewGetUMInferServiceRequest will create request of GetUMInferService action.
func (c *UAI_ModelverseClient) NewGetUMInferServiceRequest() *GetUMInferServiceRequest {
	req := &GetUMInferServiceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMInferService

获取模型服务
*/
func (c *UAI_ModelverseClient) GetUMInferService(req *GetUMInferServiceRequest) (*GetUMInferServiceResponse, error) {
	var err error
	var res GetUMInferServiceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMInferService", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMInferTokenUsageRequest is request schema for GetUMInferTokenUsage action
type GetUMInferTokenUsageRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 结束时间戳
	EndTime *int `required:"true"`

	// apikey的id
	KeyId *string `required:"true"`

	// 模型名称
	Model *string `required:"true"`

	// 开始时间戳
	StartTime *int `required:"true"`
}

// GetUMInferTokenUsageResponse is response schema for GetUMInferTokenUsage action
type GetUMInferTokenUsageResponse struct {
	response.CommonBase

	// token使用详情
	Data TokenUsage
}

// NewGetUMInferTokenUsageRequest will create request of GetUMInferTokenUsage action.
func (c *UAI_ModelverseClient) NewGetUMInferTokenUsageRequest() *GetUMInferTokenUsageRequest {
	req := &GetUMInferTokenUsageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMInferTokenUsage

获取某个key下的某个模型的token使用量
*/
func (c *UAI_ModelverseClient) GetUMInferTokenUsage(req *GetUMInferTokenUsageRequest) (*GetUMInferTokenUsageResponse, error) {
	var err error
	var res GetUMInferTokenUsageResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMInferTokenUsage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUFSquareModelRequest is request schema for ListUFSquareModel action
type ListUFSquareModelRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"false"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 关键字
	Keyword *string `required:"false"`

	// 语言，数组类型，可选值 ["chinese", "english"]
	Language []string `required:"false"`

	// 每页数量
	Limit *int `required:"false"`

	// 上下文长度，数组类型，可选值 [0,4096,16384,32768,131072,256000,262144,1048576]
	MaxModelLen []int `required:"false"`

	// 模型类型
	ModelType *string `required:"false"`

	// 偏移量
	Offset *int `required:"false"`

	// 排序顺序，默认倒序
	Order *string `required:"false"`

	// 排序字段
	OrderBy *string `required:"false"`
}

// ListUFSquareModelResponse is response schema for ListUFSquareModel action
type ListUFSquareModelResponse struct {
	response.CommonBase

	// 广场模型
	SquareModels []SquareModel

	// 总数
	TotalCount int
}

// NewListUFSquareModelRequest will create request of ListUFSquareModel action.
func (c *UAI_ModelverseClient) NewListUFSquareModelRequest() *ListUFSquareModelRequest {
	req := &ListUFSquareModelRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUFSquareModel

查询模型广场数据
*/
func (c *UAI_ModelverseClient) ListUFSquareModel(req *ListUFSquareModelRequest) (*ListUFSquareModelResponse, error) {
	var err error
	var res ListUFSquareModelResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUFSquareModel", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUFSquareModelLenRequest is request schema for ListUFSquareModelLen action
type ListUFSquareModelLenRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

}

// ListUFSquareModelLenResponse is response schema for ListUFSquareModelLen action
type ListUFSquareModelLenResponse struct {
	response.CommonBase

	// 模型上下文长度列表
	MaxModelLens []int
}

// NewListUFSquareModelLenRequest will create request of ListUFSquareModelLen action.
func (c *UAI_ModelverseClient) NewListUFSquareModelLenRequest() *ListUFSquareModelLenRequest {
	req := &ListUFSquareModelLenRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUFSquareModelLen

获取模型广场上下文长度列表
*/
func (c *UAI_ModelverseClient) ListUFSquareModelLen(req *ListUFSquareModelLenRequest) (*ListUFSquareModelLenResponse, error) {
	var err error
	var res ListUFSquareModelLenResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUFSquareModelLen", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUMInferAPIKeyRequest is request schema for ListUMInferAPIKey action
type ListUMInferAPIKeyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`
}

// ListUMInferAPIKeyResponse is response schema for ListUMInferAPIKey action
type ListUMInferAPIKeyResponse struct {
	response.CommonBase

	// apikey
	Data []APIKey
}

// NewListUMInferAPIKeyRequest will create request of ListUMInferAPIKey action.
func (c *UAI_ModelverseClient) NewListUMInferAPIKeyRequest() *ListUMInferAPIKeyRequest {
	req := &ListUMInferAPIKeyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUMInferAPIKey

列表查询apikey
*/
func (c *UAI_ModelverseClient) ListUMInferAPIKey(req *ListUMInferAPIKeyRequest) (*ListUMInferAPIKeyResponse, error) {
	var err error
	var res ListUMInferAPIKeyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUMInferAPIKey", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUMInferAPIKeyRequest is request schema for UpdateUMInferAPIKey action
type UpdateUMInferAPIKeyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// apikey的id
	KeyId *string `required:"true"`

	// 更新的名称
	Name *string `required:"true"`
}

// UpdateUMInferAPIKeyResponse is response schema for UpdateUMInferAPIKey action
type UpdateUMInferAPIKeyResponse struct {
	response.CommonBase

	// apikey 的id
	UminferID string
}

// NewUpdateUMInferAPIKeyRequest will create request of UpdateUMInferAPIKey action.
func (c *UAI_ModelverseClient) NewUpdateUMInferAPIKeyRequest() *UpdateUMInferAPIKeyRequest {
	req := &UpdateUMInferAPIKeyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUMInferAPIKey

更新apikey
*/
func (c *UAI_ModelverseClient) UpdateUMInferAPIKey(req *UpdateUMInferAPIKeyRequest) (*UpdateUMInferAPIKeyResponse, error) {
	var err error
	var res UpdateUMInferAPIKeyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUMInferAPIKey", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
