// Code is generated by ucloud-model, DO NOT EDIT IT.

package uphone

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UPhone API Schema

// CreateUPhoneAppRequest is request schema for CreateUPhoneApp action
type CreateUPhoneAppRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用描述。
	Description *string `required:"false"`

	// 应用名称。
	Name *string `required:"true"`
}

// CreateUPhoneAppResponse is response schema for CreateUPhoneApp action
type CreateUPhoneAppResponse struct {
	response.CommonBase

	// 应用的唯一标识ID
	AppId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewCreateUPhoneAppRequest will create request of CreateUPhoneApp action.
func (c *UPhoneClient) NewCreateUPhoneAppRequest() *CreateUPhoneAppRequest {
	req := &CreateUPhoneAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPhoneApp

一个 app 对应多个 app_version。
*/
func (c *UPhoneClient) CreateUPhoneApp(req *CreateUPhoneAppRequest) (*CreateUPhoneAppResponse, error) {
	var err error
	var res CreateUPhoneAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPhoneApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUPhoneAppVersionRequest is request schema for CreateUPhoneAppVersion action
type CreateUPhoneAppVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用的唯一标识ID。
	AppId *string `required:"true"`

	// 应用版本描述。
	Description *string `required:"false"`

	// 应用版本名称，最大字符长度为255。
	Name *string `required:"true"`

	// 应用版本相关的Apk文件存放的公网URL地址。
	URL *string `required:"true"`
}

// CreateUPhoneAppVersionResponse is response schema for CreateUPhoneAppVersion action
type CreateUPhoneAppVersionResponse struct {
	response.CommonBase

	// 应用版本的唯一标识ID
	AppVersionId string
}

// NewCreateUPhoneAppVersionRequest will create request of CreateUPhoneAppVersion action.
func (c *UPhoneClient) NewCreateUPhoneAppVersionRequest() *CreateUPhoneAppVersionRequest {
	req := &CreateUPhoneAppVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPhoneAppVersion

创建云手机应用版本。
注：一个 app 对应多个 app_version。
*/
func (c *UPhoneClient) CreateUPhoneAppVersion(req *CreateUPhoneAppVersionRequest) (*CreateUPhoneAppVersionResponse, error) {
	var err error
	var res CreateUPhoneAppVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPhoneAppVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUPhoneImageRequest is request schema for CreateUPhoneImage action
type CreateUPhoneImageRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 镜像的描述信息。长度为2~256个英文或中文字符
	Description *string `required:"false"`

	// 镜像名称。长度为2~128个英文或中文字符。
	Name *string `required:"false"`

	// 手机实例的资源ID
	UPhoneId *string `required:"true"`
}

// CreateUPhoneImageResponse is response schema for CreateUPhoneImage action
type CreateUPhoneImageResponse struct {
	response.CommonBase

	// 云手机自定义镜像资源 ID
	ImageId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewCreateUPhoneImageRequest will create request of CreateUPhoneImage action.
func (c *UPhoneClient) NewCreateUPhoneImageRequest() *CreateUPhoneImageRequest {
	req := &CreateUPhoneImageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPhoneImage

创建云手机镜像。
*/
func (c *UPhoneClient) CreateUPhoneImage(req *CreateUPhoneImageRequest) (*CreateUPhoneImageResponse, error) {
	var err error
	var res CreateUPhoneImageResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPhoneImage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

/*
CreateUPhoneServerParamNetworkInterface is request schema for complex param
*/
type CreateUPhoneServerParamNetworkInterface struct {
}

// CreateUPhoneServerRequest is request schema for CreateUPhoneServer action
type CreateUPhoneServerRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 计费模式。枚举值为：> 年 Year，按年付费；> Month，按月付费；> Dynamic，按小时预付费;默认为月付
	ChargeType *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机服务器代金券ID。请通过DescribeCoupon接口查询，或登录用户中心查看。注：代金券对带宽不适用，仅适用于云手机服务器计费
	CouponId *string `required:"false"`

	// 云手机镜像ID，不超过32个字节。可通过[查询手机镜像]()查询云手机规格对应的镜像ID。
	ImageId *string `required:"true"`

	// 购买独立IP必须此参数。绑定的目的地域。参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	IpDestRegion *string `required:"false"`

	// 独立IP参数。需要独立IP的比例。eg: [4:1]->4， [3:1]->3。
	IpProportion *int `required:"false"`

	// 云手机服务器实例名称。默认：UPhone。请遵照字段规范设定实例名称。
	Name *string `required:"true"`

	// 购买时长。默认值: 1。月付时，此参数传0，代表购买至月末。
	Quantity *string `required:"false"`

	// 云手机服务器规格名称，不超过64个字节。可通过[查询云手机服务器规格列表]()查询支持的云手机服务器规格。
	ServerModelName *string `required:"true"`

	// 独立IP参数。共享带宽值大小。传此参数需要和IpProportion同时传。
	ShareBandwidth *int `required:"false"`

	// 业务组。默认：Default（Default即为未分组）。请遵照[[api:uhost-api:specification|字段规范]]设定业务组。
	Tag *string `required:"false"`

	// 云手机规格名称，不超过64个字节。可通过[查询云手机规格列表]()查询支持的云手机规格。
	UPhoneModelName *string `required:"true"`
}

// CreateUPhoneServerResponse is response schema for CreateUPhoneServer action
type CreateUPhoneServerResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// 云手机服务器的实例 ID
	ServerId string
}

// NewCreateUPhoneServerRequest will create request of CreateUPhoneServer action.
func (c *UPhoneClient) NewCreateUPhoneServerRequest() *CreateUPhoneServerRequest {
	req := &CreateUPhoneServerRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPhoneServer

创建云手机服务器
*/
func (c *UPhoneClient) CreateUPhoneServer(req *CreateUPhoneServerRequest) (*CreateUPhoneServerResponse, error) {
	var err error
	var res CreateUPhoneServerResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPhoneServer", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUPhoneImageRequest is request schema for DeleteUPhoneImage action
type DeleteUPhoneImageRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 云手机自定义镜像资源ID
	ImageId *string `required:"true"`
}

// DeleteUPhoneImageResponse is response schema for DeleteUPhoneImage action
type DeleteUPhoneImageResponse struct {
	response.CommonBase

	// 云手机自定义镜像资源ID
	ImageId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewDeleteUPhoneImageRequest will create request of DeleteUPhoneImage action.
func (c *UPhoneClient) NewDeleteUPhoneImageRequest() *DeleteUPhoneImageRequest {
	req := &DeleteUPhoneImageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUPhoneImage

删除自制云手机镜像。
*/
func (c *UPhoneClient) DeleteUPhoneImage(req *DeleteUPhoneImageRequest) (*DeleteUPhoneImageResponse, error) {
	var err error
	var res DeleteUPhoneImageResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUPhoneImage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUPhoneServerRequest is request schema for DeleteUPhoneServer action
type DeleteUPhoneServerRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 删除云手机服务器时是否释放绑定的EIP。默认为false。
	ReleaseEIP *bool `required:"false"`

	// 删除云手机服务器时是否同时删除挂载的数据盘。默认为false。
	ReleaseUDisk *bool `required:"false"`

	// 云手机服务器的实例ID 可通过 [DescribeUPhoneServer]()获取
	ServerId *string `required:"true"`
}

// DeleteUPhoneServerResponse is response schema for DeleteUPhoneServer action
type DeleteUPhoneServerResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewDeleteUPhoneServerRequest will create request of DeleteUPhoneServer action.
func (c *UPhoneClient) NewDeleteUPhoneServerRequest() *DeleteUPhoneServerRequest {
	req := &DeleteUPhoneServerRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUPhoneServer

删除云手机服务器。 注：关机状态下才能执行删除操作。
*/
func (c *UPhoneClient) DeleteUPhoneServer(req *DeleteUPhoneServerRequest) (*DeleteUPhoneServerResponse, error) {
	var err error
	var res DeleteUPhoneServerResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUPhoneServer", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneRequest is request schema for DescribeUPhone action
type DescribeUPhoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 是否返回全部。如果有此参数，分页不生效。
	IsAll *bool `required:"false"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 云手机服务器的资源ID。
	ServerId *string `required:"false"`

	// 要查询的业务组名称
	Tag *string `required:"false"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望获取信息的云手机 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。如果都不传入，则返回当前 城市 所有符合条件的云手机列表。
	UPhoneIds []string `required:"false"`
}

// DescribeUPhoneResponse is response schema for DescribeUPhone action
type DescribeUPhoneResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// UPhoneInstance总数
	TotalCount int

	// 云手机实例列表，每项参数可见数据模型 [UPhoneInstance](#UPhoneInstance)
	UPhones []UPhoneInstance
}

// NewDescribeUPhoneRequest will create request of DescribeUPhone action.
func (c *UPhoneClient) NewDescribeUPhoneRequest() *DescribeUPhoneRequest {
	req := &DescribeUPhoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhone

获取云手机列表信息。
*/
func (c *UPhoneClient) DescribeUPhone(req *DescribeUPhoneRequest) (*DescribeUPhoneResponse, error) {
	var err error
	var res DescribeUPhoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneAppRequest is request schema for DescribeUPhoneApp action
type DescribeUPhoneAppRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 数组】应用的唯一标识 ID，调用方式举例：AppIds.0=希望获取应用信息的应用 1，AppIds.1=应用 2。 如果不传入，则返回当前 城市 所有符合条件的应用列表。
	AppIds []string `required:"false"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`
}

// DescribeUPhoneAppResponse is response schema for DescribeUPhoneApp action
type DescribeUPhoneAppResponse struct {
	response.CommonBase

	// 云手机应用实例列表，每项参数可见数据模型 [AppInstance](#appInstance)
	Apps []AppInstance

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// AppInstance总数
	TotalCount int
}

// NewDescribeUPhoneAppRequest will create request of DescribeUPhoneApp action.
func (c *UPhoneClient) NewDescribeUPhoneAppRequest() *DescribeUPhoneAppRequest {
	req := &DescribeUPhoneAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneApp

获取应用列表。
*/
func (c *UPhoneClient) DescribeUPhoneApp(req *DescribeUPhoneAppRequest) (*DescribeUPhoneAppResponse, error) {
	var err error
	var res DescribeUPhoneAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneAppVersionRequest is request schema for DescribeUPhoneAppVersion action
type DescribeUPhoneAppVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用的唯一标识ID
	AppId *string `required:"false"`

	// 【数组】应用版本的唯一标识 ID，调用方式举例：AppVersionIds.0=希望获取应用版本信息的应用版本 1，AppVersionIds.1=应用版本 2。 如果不传入，则返回当前 城市 所有符合条件的应用版本列表。
	AppVersionIds []string `required:"false"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 云手机Id。此参数表示查询手机上所安装的应用版本。
	UPhoneId *string `required:"false"`
}

// DescribeUPhoneAppVersionResponse is response schema for DescribeUPhoneAppVersion action
type DescribeUPhoneAppVersionResponse struct {
	response.CommonBase

	// 云手机应用版本实例列表，每项参数可见数据模型 [AppVersionInstance](#AppVersionInstance)
	AppVersions []AppVersionInstance

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// AppVersionInstance总数
	TotalCount int
}

// NewDescribeUPhoneAppVersionRequest will create request of DescribeUPhoneAppVersion action.
func (c *UPhoneClient) NewDescribeUPhoneAppVersionRequest() *DescribeUPhoneAppVersionRequest {
	req := &DescribeUPhoneAppVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneAppVersion

获取应用版本列表。
*/
func (c *UPhoneClient) DescribeUPhoneAppVersion(req *DescribeUPhoneAppVersionRequest) (*DescribeUPhoneAppVersionResponse, error) {
	var err error
	var res DescribeUPhoneAppVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneAppVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneCitiesRequest is request schema for DescribeUPhoneCities action
type DescribeUPhoneCitiesRequest struct {
	request.CommonBase

	// [公共参数]
	// ProjectId *string `required:"false"`

}

// DescribeUPhoneCitiesResponse is response schema for DescribeUPhoneCities action
type DescribeUPhoneCitiesResponse struct {
	response.CommonBase

	// 云手机城市实例列表，每项参数可见数据模型 [CityInstance](#CityInstance)
	UPhoneCities []CityInstance
}

// NewDescribeUPhoneCitiesRequest will create request of DescribeUPhoneCities action.
func (c *UPhoneClient) NewDescribeUPhoneCitiesRequest() *DescribeUPhoneCitiesRequest {
	req := &DescribeUPhoneCitiesRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneCities

获取云手机提供服务的城市列表
*/
func (c *UPhoneClient) DescribeUPhoneCities(req *DescribeUPhoneCitiesRequest) (*DescribeUPhoneCitiesResponse, error) {
	var err error
	var res DescribeUPhoneCitiesResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneCities", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneDetailByAppRequest is request schema for DescribeUPhoneDetailByApp action
type DescribeUPhoneDetailByAppRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用的唯一标识ID
	AppId *string `required:"true"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`
}

// DescribeUPhoneDetailByAppResponse is response schema for DescribeUPhoneDetailByApp action
type DescribeUPhoneDetailByAppResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// UPhoneWithAppVersion总数
	TotalCount int

	// 带有应用版本的云手机实例，具体参数见数据模型 [UPhoneDetailInstanc](#UPhoneDetailInstanc)
	UPhoneDetails []UPhoneDetailInstance
}

// NewDescribeUPhoneDetailByAppRequest will create request of DescribeUPhoneDetailByApp action.
func (c *UPhoneClient) NewDescribeUPhoneDetailByAppRequest() *DescribeUPhoneDetailByAppRequest {
	req := &DescribeUPhoneDetailByAppRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneDetailByApp

根据AppId，查询安装该应用的云手机以及相关的应用版本信息
*/
func (c *UPhoneClient) DescribeUPhoneDetailByApp(req *DescribeUPhoneDetailByAppRequest) (*DescribeUPhoneDetailByAppResponse, error) {
	var err error
	var res DescribeUPhoneDetailByAppResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneDetailByApp", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneImageRequest is request schema for DescribeUPhoneImage action
type DescribeUPhoneImageRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 【数组】云手机镜像资源 ID，调用方式举例：ImageIds.0=希望获取信息的云手机镜像 1，ImageIds.1=云手机镜像 2。 如果不传入，则返回当前 城市 所有符合条件的云手机镜像。
	ImageIds []string `required:"false"`

	// 最大返回镜像数量，默认为20，最大100
	Limit *string `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *string `required:"false"`

	// 希望获取的镜像类型，枚举值，不传则返回全部类型的镜像： <br /> >标准镜像: BASE; <br />>自制镜像: CUSTOM;  <br />
	Type *string `required:"false"`
}

// DescribeUPhoneImageResponse is response schema for DescribeUPhoneImage action
type DescribeUPhoneImageResponse struct {
	response.CommonBase

	// 云手机镜像实例列表，具体参数见 [UPhoneImageInstance](#uphoneimageinstance)
	Images []UPhoneImageInstance

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// UPhoneImageInstance总数
	TotalCount int
}

// NewDescribeUPhoneImageRequest will create request of DescribeUPhoneImage action.
func (c *UPhoneClient) NewDescribeUPhoneImageRequest() *DescribeUPhoneImageRequest {
	req := &DescribeUPhoneImageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneImage

获取云手机镜像信息列表。
*/
func (c *UPhoneClient) DescribeUPhoneImage(req *DescribeUPhoneImageRequest) (*DescribeUPhoneImageResponse, error) {
	var err error
	var res DescribeUPhoneImageResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneImage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneIpRegionsRequest is request schema for DescribeUPhoneIpRegions action
type DescribeUPhoneIpRegionsRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，eg: cn-shanghai, cn-hangzhou
	CityId *string `required:"true"`
}

// DescribeUPhoneIpRegionsResponse is response schema for DescribeUPhoneIpRegions action
type DescribeUPhoneIpRegionsResponse struct {
	response.CommonBase

	// 独立IP地域信息。
	Regions []IpRegion

	// 总数量
	TotalCount int
}

// NewDescribeUPhoneIpRegionsRequest will create request of DescribeUPhoneIpRegions action.
func (c *UPhoneClient) NewDescribeUPhoneIpRegionsRequest() *DescribeUPhoneIpRegionsRequest {
	req := &DescribeUPhoneIpRegionsRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneIpRegions

获取云手机支持绑定独立IP的城市列表
*/
func (c *UPhoneClient) DescribeUPhoneIpRegions(req *DescribeUPhoneIpRegionsRequest) (*DescribeUPhoneIpRegionsResponse, error) {
	var err error
	var res DescribeUPhoneIpRegionsResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneIpRegions", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneJobRequest is request schema for DescribeUPhoneJob action
type DescribeUPhoneJobRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】Job 的唯一标识 Id，调用方式举例：ServerIds.0=希望查询状态的 Job1，ServerIds.1=Job2。 如果不传入，则返回当前 城市 所有符合条件的 Job 。
	JobIds []string `required:"false"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// Job状态，枚举值：* 等待状态: PENDING;* 运行状态: RUNNING;* 成功状态: SUCCESS* 失败状态: FAILED* 部分成功状态：PARTIAL_SUCCESS
	State *string `required:"false"`

	// 【数组】Job 类型，调用方式举例：JobTypes.0=希望查询的 Job 类型 1，JobTypes.1=Job 类型 2。 如果不传入，则返回当前 城市 所有符合条件的 Job 类型。Job 类型仅支持 INSTALL_APP、UNINSTALL_APP、RUN_ASYNC_COMMAND、CREATE_SERVER_AND_UPHONE、SET_UPHONE_GPS、SET_UPHONE_CONFIG、UPLOAD_FILE、DELETE_UPHONE
	Types []string `required:"false"`
}

// DescribeUPhoneJobResponse is response schema for DescribeUPhoneJob action
type DescribeUPhoneJobResponse struct {
	response.CommonBase

	// Job信息，详情见数据结构Job（如果Status为等待中，此字段为空）
	Jobs []Job

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// Job总数
	TotalCount int
}

// NewDescribeUPhoneJobRequest will create request of DescribeUPhoneJob action.
func (c *UPhoneClient) NewDescribeUPhoneJobRequest() *DescribeUPhoneJobRequest {
	req := &DescribeUPhoneJobRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneJob

查询Job的执行状态。
*/
func (c *UPhoneClient) DescribeUPhoneJob(req *DescribeUPhoneJobRequest) (*DescribeUPhoneJobResponse, error) {
	var err error
	var res DescribeUPhoneJobResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneJob", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneModelRequest is request schema for DescribeUPhoneModel action
type DescribeUPhoneModelRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 【数组】要获得信息的 UPhoneModel 名称。调用方式举例：UPhoneModelNames.0=希望获取信息的 UPhoneModel1，UPhoneModelNames.1=UPhoneModel2。 如果不传入，则返回当前 城市 所有符合条件的 UPhoneModel。
	UPhoneModelNames []string `required:"false"`
}

// DescribeUPhoneModelResponse is response schema for DescribeUPhoneModel action
type DescribeUPhoneModelResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// UPhoneModelInstance总数
	TotalCount int

	// UPhoneModel实例列表，具体参数可见 UPhoneModelInstance
	UPhoneModels []UPhoneModelInstance
}

// NewDescribeUPhoneModelRequest will create request of DescribeUPhoneModel action.
func (c *UPhoneClient) NewDescribeUPhoneModelRequest() *DescribeUPhoneModelRequest {
	req := &DescribeUPhoneModelRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneModel


*/
func (c *UPhoneClient) DescribeUPhoneModel(req *DescribeUPhoneModelRequest) (*DescribeUPhoneModelResponse, error) {
	var err error
	var res DescribeUPhoneModelResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneModel", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneServerRequest is request schema for DescribeUPhoneServer action
type DescribeUPhoneServerRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 【数组】云手机服务器的资源 ID，调用方式举例：ServerIds.0=希望获取信息的服务器 1，ServerIds.1=服务器 2。 如果不传入，则返回当前 城市 所有符合条件的云手机服务器。
	ServerIds []string `required:"false"`
}

// DescribeUPhoneServerResponse is response schema for DescribeUPhoneServer action
type DescribeUPhoneServerResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云手机服务器列表，每项参数可见数据模型 [ServerInstance](#ServerInstance)
	Servers []ServerInstance

	// ServerInstance总数
	TotalCount int
}

// NewDescribeUPhoneServerRequest will create request of DescribeUPhoneServer action.
func (c *UPhoneClient) NewDescribeUPhoneServerRequest() *DescribeUPhoneServerRequest {
	req := &DescribeUPhoneServerRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneServer

获取云手机服务器列表信息。
*/
func (c *UPhoneClient) DescribeUPhoneServer(req *DescribeUPhoneServerRequest) (*DescribeUPhoneServerResponse, error) {
	var err error
	var res DescribeUPhoneServerResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneServer", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUPhoneServerModelRequest is request schema for DescribeUPhoneServerModel action
type DescribeUPhoneServerModelRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 【数组】要获得信息的 ServerModel 名称。调用方式举例：ServerModelNames.0=希望获取信息的 ServerModel1，ServerModelNames.1=ServerModel2。 如果不传入，则返回当前 城市 所有符合条件的 ServerModel。
	ServerModelNames []string `required:"false"`
}

// DescribeUPhoneServerModelResponse is response schema for DescribeUPhoneServerModel action
type DescribeUPhoneServerModelResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// ServerModel实例列表，每项参数可见数据模型 ServerModelInstance
	ServerModels []ServerModelInstance

	// ServerModelInstance总数
	TotalCount int
}

// NewDescribeUPhoneServerModelRequest will create request of DescribeUPhoneServerModel action.
func (c *UPhoneClient) NewDescribeUPhoneServerModelRequest() *DescribeUPhoneServerModelRequest {
	req := &DescribeUPhoneServerModelRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUPhoneServerModel

获取ServerModel列表。
*/
func (c *UPhoneClient) DescribeUPhoneServerModel(req *DescribeUPhoneServerModelRequest) (*DescribeUPhoneServerModelResponse, error) {
	var err error
	var res DescribeUPhoneServerModelResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUPhoneServerModel", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPhoneScreenCaptureRequest is request schema for GetUPhoneScreenCapture action
type GetUPhoneScreenCaptureRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机ID
	UPhoneID *string `required:"true"`
}

// GetUPhoneScreenCaptureResponse is response schema for GetUPhoneScreenCapture action
type GetUPhoneScreenCaptureResponse struct {
	response.CommonBase

	// 云手机截图URL
	URL string
}

// NewGetUPhoneScreenCaptureRequest will create request of GetUPhoneScreenCapture action.
func (c *UPhoneClient) NewGetUPhoneScreenCaptureRequest() *GetUPhoneScreenCaptureRequest {
	req := &GetUPhoneScreenCaptureRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPhoneScreenCapture

云手机截屏
*/
func (c *UPhoneClient) GetUPhoneScreenCapture(req *GetUPhoneScreenCaptureRequest) (*GetUPhoneScreenCaptureResponse, error) {
	var err error
	var res GetUPhoneScreenCaptureResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPhoneScreenCapture", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPhoneServerPriceRequest is request schema for GetUPhoneServerPrice action
type GetUPhoneServerPriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 购买独立IP需要此参数。共享带宽总值。
	Bandwidth *int `required:"false"`

	// 计费模式。枚举值为：> Year，按年付费；> Month，按月付费；> Dynamic，按小时预付费; 如果不传某个枚举值，默认返回年付、月付的价格组合集。
	ChargeType *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 购买独立IP需要此参数。需要的eip数量。
	IpCount *int `required:"false"`

	// 购买独立IP必须此参数。绑定的目的地域。参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	IpDestRegion *string `required:"false"`

	// 购买时长。默认: 1。 月付时，此参数传0，代表了购买至月末。
	Quantity *int `required:"false"`

	// 服务器规格名称
	ServerModelName *string `required:"true"`
}

// GetUPhoneServerPriceResponse is response schema for GetUPhoneServerPrice action
type GetUPhoneServerPriceResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// 价格列表，每项参数见UPhoneServerPriceSet
	PriceSet []UPhoneServerPriceSet
}

// NewGetUPhoneServerPriceRequest will create request of GetUPhoneServerPrice action.
func (c *UPhoneClient) NewGetUPhoneServerPriceRequest() *GetUPhoneServerPriceRequest {
	req := &GetUPhoneServerPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPhoneServerPrice

根据服务器规格名称，获取UPhoneServer实例的价格。
*/
func (c *UPhoneClient) GetUPhoneServerPrice(req *GetUPhoneServerPriceRequest) (*GetUPhoneServerPriceResponse, error) {
	var err error
	var res GetUPhoneServerPriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPhoneServerPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPhoneServerRenewPriceRequest is request schema for GetUPhoneServerRenewPrice action
type GetUPhoneServerRenewPriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 计费模式。枚举值为：> Year，按年付费；> Month，按月付费； > Dynamic，按小时预付费; 默认返回全部计费方式对应的价格
	ChargeType *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机服务器的唯一标识，可通过[查询云手机服务器列表]()获取。
	ServerId *string `required:"true"`
}

// GetUPhoneServerRenewPriceResponse is response schema for GetUPhoneServerRenewPrice action
type GetUPhoneServerRenewPriceResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string

	// 价格列表,具体参数见UPhoneServerPriceSet
	PriceSet []UPhoneServerPriceSet
}

// NewGetUPhoneServerRenewPriceRequest will create request of GetUPhoneServerRenewPrice action.
func (c *UPhoneClient) NewGetUPhoneServerRenewPriceRequest() *GetUPhoneServerRenewPriceRequest {
	req := &GetUPhoneServerRenewPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPhoneServerRenewPrice

获取云手机服务器续费价格

提示信息: 须按照控制台服务器模型配置创建服务器。详情请参考控制台。
*/
func (c *UPhoneClient) GetUPhoneServerRenewPrice(req *GetUPhoneServerRenewPriceRequest) (*GetUPhoneServerRenewPriceResponse, error) {
	var err error
	var res GetUPhoneServerRenewPriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPhoneServerRenewPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// InstallUPhoneAppVersionRequest is request schema for InstallUPhoneAppVersion action
type InstallUPhoneAppVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用版本的唯一标识ID
	AppVersionId *string `required:"true"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望安装应用的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// InstallUPhoneAppVersionResponse is response schema for InstallUPhoneAppVersion action
type InstallUPhoneAppVersionResponse struct {
	response.CommonBase

	// 请求的唯一标识Id，`RetCode`为0时返回，可根据此ID查询请求的执行状态
	JobId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewInstallUPhoneAppVersionRequest will create request of InstallUPhoneAppVersion action.
func (c *UPhoneClient) NewInstallUPhoneAppVersionRequest() *InstallUPhoneAppVersionRequest {
	req := &InstallUPhoneAppVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: InstallUPhoneAppVersion

在云手机中安装应用版本相关的Apk文件。系统会根据AppVersionId将对应的Apk文件下载后安装到云手机中。一次只支持安装一个Apk。
*/
func (c *UPhoneClient) InstallUPhoneAppVersion(req *InstallUPhoneAppVersionRequest) (*InstallUPhoneAppVersionResponse, error) {
	var err error
	var res InstallUPhoneAppVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("InstallUPhoneAppVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUPhoneNameRequest is request schema for ModifyUPhoneName action
type ModifyUPhoneNameRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机实例名称
	Name *string `required:"true"`

	// 云手机实例的资源ID
	UPhoneId *string `required:"true"`
}

// ModifyUPhoneNameResponse is response schema for ModifyUPhoneName action
type ModifyUPhoneNameResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云手机实例的资源ID
	UPhoneId string
}

// NewModifyUPhoneNameRequest will create request of ModifyUPhoneName action.
func (c *UPhoneClient) NewModifyUPhoneNameRequest() *ModifyUPhoneNameRequest {
	req := &ModifyUPhoneNameRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUPhoneName

修改指定云手机实例名称。
*/
func (c *UPhoneClient) ModifyUPhoneName(req *ModifyUPhoneNameRequest) (*ModifyUPhoneNameResponse, error) {
	var err error
	var res ModifyUPhoneNameResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUPhoneName", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUPhoneRemarkRequest is request schema for ModifyUPhoneRemark action
type ModifyUPhoneRemarkRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 备注
	Remark *string `required:"false"`

	// 云手机实例的资源ID
	UPhoneId *string `required:"true"`
}

// ModifyUPhoneRemarkResponse is response schema for ModifyUPhoneRemark action
type ModifyUPhoneRemarkResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云手机实例的资源ID
	UPhoneId string
}

// NewModifyUPhoneRemarkRequest will create request of ModifyUPhoneRemark action.
func (c *UPhoneClient) NewModifyUPhoneRemarkRequest() *ModifyUPhoneRemarkRequest {
	req := &ModifyUPhoneRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUPhoneRemark

修改指定云手机实例备注信息。
*/
func (c *UPhoneClient) ModifyUPhoneRemark(req *ModifyUPhoneRemarkRequest) (*ModifyUPhoneRemarkResponse, error) {
	var err error
	var res ModifyUPhoneRemarkResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUPhoneRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUPhoneServerNameRequest is request schema for ModifyUPhoneServerName action
type ModifyUPhoneServerNameRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机服务器实例名称
	Name *string `required:"false"`

	// 云手机服务器的唯一标识
	ServerId *string `required:"true"`
}

// ModifyUPhoneServerNameResponse is response schema for ModifyUPhoneServerName action
type ModifyUPhoneServerNameResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云手机服务器的唯一标识
	ServerId string
}

// NewModifyUPhoneServerNameRequest will create request of ModifyUPhoneServerName action.
func (c *UPhoneClient) NewModifyUPhoneServerNameRequest() *ModifyUPhoneServerNameRequest {
	req := &ModifyUPhoneServerNameRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUPhoneServerName

修改指定云手机服务器实例名称。
*/
func (c *UPhoneClient) ModifyUPhoneServerName(req *ModifyUPhoneServerNameRequest) (*ModifyUPhoneServerNameResponse, error) {
	var err error
	var res ModifyUPhoneServerNameResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUPhoneServerName", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUPhoneServerRemarkRequest is request schema for ModifyUPhoneServerRemark action
type ModifyUPhoneServerRemarkRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 备注
	Remark *string `required:"false"`

	// 云手机服务器的唯一标识
	ServerId *string `required:"true"`
}

// ModifyUPhoneServerRemarkResponse is response schema for ModifyUPhoneServerRemark action
type ModifyUPhoneServerRemarkResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云手机服务器的唯一标识
	ServerId string
}

// NewModifyUPhoneServerRemarkRequest will create request of ModifyUPhoneServerRemark action.
func (c *UPhoneClient) NewModifyUPhoneServerRemarkRequest() *ModifyUPhoneServerRemarkRequest {
	req := &ModifyUPhoneServerRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUPhoneServerRemark

修改指定云手机实例备注信息。
*/
func (c *UPhoneClient) ModifyUPhoneServerRemark(req *ModifyUPhoneServerRemarkRequest) (*ModifyUPhoneServerRemarkResponse, error) {
	var err error
	var res ModifyUPhoneServerRemarkResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUPhoneServerRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// PoweroffUPhoneRequest is request schema for PoweroffUPhone action
type PoweroffUPhoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望关闭的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// PoweroffUPhoneResponse is response schema for PoweroffUPhone action
type PoweroffUPhoneResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewPoweroffUPhoneRequest will create request of PoweroffUPhone action.
func (c *UPhoneClient) NewPoweroffUPhoneRequest() *PoweroffUPhoneRequest {
	req := &PoweroffUPhoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: PoweroffUPhone

关闭处于运行状态的云手机实例
*/
func (c *UPhoneClient) PoweroffUPhone(req *PoweroffUPhoneRequest) (*PoweroffUPhoneResponse, error) {
	var err error
	var res PoweroffUPhoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("PoweroffUPhone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// PoweronUPhoneRequest is request schema for PoweronUPhone action
type PoweronUPhoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源ID，调用方式举例：UPhoneIds.0=希望开启的云手机实例1的UPhoneId，UPhoneIds.1=云手机实例2的UPhoneId。
	UPhoneIds []string `required:"true"`
}

// PoweronUPhoneResponse is response schema for PoweronUPhone action
type PoweronUPhoneResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewPoweronUPhoneRequest will create request of PoweronUPhone action.
func (c *UPhoneClient) NewPoweronUPhoneRequest() *PoweronUPhoneRequest {
	req := &PoweronUPhoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: PoweronUPhone

启动处于关闭状态的云手机实例
*/
func (c *UPhoneClient) PoweronUPhone(req *PoweronUPhoneRequest) (*PoweronUPhoneResponse, error) {
	var err error
	var res PoweronUPhoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("PoweronUPhone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RebootUPhoneRequest is request schema for RebootUPhone action
type RebootUPhoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望重启的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// RebootUPhoneResponse is response schema for RebootUPhone action
type RebootUPhoneResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewRebootUPhoneRequest will create request of RebootUPhone action.
func (c *UPhoneClient) NewRebootUPhoneRequest() *RebootUPhoneRequest {
	req := &RebootUPhoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RebootUPhone

重新启动云手机实例
*/
func (c *UPhoneClient) RebootUPhone(req *RebootUPhoneRequest) (*RebootUPhoneResponse, error) {
	var err error
	var res RebootUPhoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RebootUPhone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ResetUPhoneRequest is request schema for ResetUPhone action
type ResetUPhoneRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望重置的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// ResetUPhoneResponse is response schema for ResetUPhone action
type ResetUPhoneResponse struct {
	response.CommonBase

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewResetUPhoneRequest will create request of ResetUPhone action.
func (c *UPhoneClient) NewResetUPhoneRequest() *ResetUPhoneRequest {
	req := &ResetUPhoneRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ResetUPhone

将云手机恢复为创建时的状态。
*/
func (c *UPhoneClient) ResetUPhone(req *ResetUPhoneRequest) (*ResetUPhoneResponse, error) {
	var err error
	var res ResetUPhoneResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ResetUPhone", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RunAsyncCommandRequest is request schema for RunAsyncCommand action
type RunAsyncCommandRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 待执行的命令。
	Content *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望执行命令的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// RunAsyncCommandResponse is response schema for RunAsyncCommand action
type RunAsyncCommandResponse struct {
	response.CommonBase

	// 请求的唯一标识Id，`RetCode`为0时返回，可根据此ID查询请求的执行状态
	JobId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewRunAsyncCommandRequest will create request of RunAsyncCommand action.
func (c *UPhoneClient) NewRunAsyncCommandRequest() *RunAsyncCommandRequest {
	req := &RunAsyncCommandRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: RunAsyncCommand

在云手机中执行异步shell命令。
*/
func (c *UPhoneClient) RunAsyncCommand(req *RunAsyncCommandRequest) (*RunAsyncCommandResponse, error) {
	var err error
	var res RunAsyncCommandResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RunAsyncCommand", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RunSyncCommandRequest is request schema for RunSyncCommand action
type RunSyncCommandRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 待执行的命令。
	Content *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望执行命令的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// RunSyncCommandResponse is response schema for RunSyncCommand action
type RunSyncCommandResponse struct {
	response.CommonBase

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string

	// 云主机实例列表，每项参数可见数据模型 [UPhoneCommandResult](#UPhoneCommandResult)
	Results []UPhoneCommandResult
}

// NewRunSyncCommandRequest will create request of RunSyncCommand action.
func (c *UPhoneClient) NewRunSyncCommandRequest() *RunSyncCommandRequest {
	req := &RunSyncCommandRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: RunSyncCommand

在云手机中执行同步shell命令。
*/
func (c *UPhoneClient) RunSyncCommand(req *RunSyncCommandRequest) (*RunSyncCommandResponse, error) {
	var err error
	var res RunSyncCommandResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RunSyncCommand", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetUPhoneConfigRequest is request schema for SetUPhoneConfig action
type SetUPhoneConfigRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 异步请求开关，只有为1的时候才是异步，不填或者其他数值为同步
	Async *string `required:"false"`

	// 云手机画面传输码率（例，8000）取值范围[100,5000]
	Bitrate *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机dpi，取值范围[100,1000]
	Dpi *string `required:"false"`

	// 云手机画面刷新率，即帧率（例，30）取值范围[1,200]
	Refresh *string `required:"false"`

	// 云手机画面分辨率（宽x高） （例，1920x1080，中间是字母x）宽和高的取值范围[100,5000]
	Resolution *string `required:"false"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望重启的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// SetUPhoneConfigResponse is response schema for SetUPhoneConfig action
type SetUPhoneConfigResponse struct {
	response.CommonBase

	// 异步请求成功后返回JobId，用以查询Job状态
	JobId string

	// 失败后返回Message，错误信息
	Message string

	// request_uuid，唯一值，用于区分request
	RequestId string

	// 同步请求会返回命令行结果，异步请求该参数为空
	Results []Results
}

// NewSetUPhoneConfigRequest will create request of SetUPhoneConfig action.
func (c *UPhoneClient) NewSetUPhoneConfigRequest() *SetUPhoneConfigRequest {
	req := &SetUPhoneConfigRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetUPhoneConfig

设置云手机画面参数（分辨率、DPI、帧率、码率）
*/
func (c *UPhoneClient) SetUPhoneConfig(req *SetUPhoneConfigRequest) (*SetUPhoneConfigResponse, error) {
	var err error
	var res SetUPhoneConfigResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetUPhoneConfig", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

/*
SetUPhoneGPSParamUPhoneGPSs is request schema for complex param
*/
type SetUPhoneGPSParamUPhoneGPSs struct {

	// 海拔
	Altitude *float64 `required:"false"`

	// 纬度：-90~90
	Latitude *float64 `required:"false"`

	// 经度：-180~180
	Longitude *float64 `required:"false"`

	// 云手机ID
	UPhoneId *string `required:"false"`
}

// SetUPhoneGPSRequest is request schema for SetUPhoneGPS action
type SetUPhoneGPSRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	//
	UPhoneGPSs []SetUPhoneGPSParamUPhoneGPSs `required:"false"`
}

// SetUPhoneGPSResponse is response schema for SetUPhoneGPS action
type SetUPhoneGPSResponse struct {
	response.CommonBase

	// 请求的唯一标识Id，`RetCode`为0时返回，可根据此ID查询请求的执行状态
	JobId string

	// 返回错误消息，当 RetCode 非 0 时提供详细的描述信息
	Message string
}

// NewSetUPhoneGPSRequest will create request of SetUPhoneGPS action.
func (c *UPhoneClient) NewSetUPhoneGPSRequest() *SetUPhoneGPSRequest {
	req := &SetUPhoneGPSRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetUPhoneGPS

设置云手机GPS信息
*/
func (c *UPhoneClient) SetUPhoneGPS(req *SetUPhoneGPSRequest) (*SetUPhoneGPSResponse, error) {
	var err error
	var res SetUPhoneGPSResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetUPhoneGPS", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetUPhoneManagerModeRequest is request schema for SetUPhoneManagerMode action
type SetUPhoneManagerModeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 管理模式：管理员admin，普通用户user
	Mode *string `required:"true"`

	// 云手机实例的资源ID
	UPhoneId *string `required:"true"`
}

// SetUPhoneManagerModeResponse is response schema for SetUPhoneManagerMode action
type SetUPhoneManagerModeResponse struct {
	response.CommonBase
}

// NewSetUPhoneManagerModeRequest will create request of SetUPhoneManagerMode action.
func (c *UPhoneClient) NewSetUPhoneManagerModeRequest() *SetUPhoneManagerModeRequest {
	req := &SetUPhoneManagerModeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetUPhoneManagerMode

管理员模式支持所有按键，普通用户模式禁用返回桌面
*/
func (c *UPhoneClient) SetUPhoneManagerMode(req *SetUPhoneManagerModeRequest) (*SetUPhoneManagerModeResponse, error) {
	var err error
	var res SetUPhoneManagerModeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetUPhoneManagerMode", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// SetUPhoneSplashScreenRequest is request schema for SetUPhoneSplashScreen action
type SetUPhoneSplashScreenRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 云手机ID
	UPhoneId *string `required:"true"`

	// 启动画面下载地址
	URL *string `required:"true"`
}

// SetUPhoneSplashScreenResponse is response schema for SetUPhoneSplashScreen action
type SetUPhoneSplashScreenResponse struct {
	response.CommonBase
}

// NewSetUPhoneSplashScreenRequest will create request of SetUPhoneSplashScreen action.
func (c *UPhoneClient) NewSetUPhoneSplashScreenRequest() *SetUPhoneSplashScreenRequest {
	req := &SetUPhoneSplashScreenRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: SetUPhoneSplashScreen

设置云手机启动画面，通过DescribeUPhone接口可以查询该地址
*/
func (c *UPhoneClient) SetUPhoneSplashScreen(req *SetUPhoneSplashScreenRequest) (*SetUPhoneSplashScreenResponse, error) {
	var err error
	var res SetUPhoneSplashScreenResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetUPhoneSplashScreen", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UnInstallUPhoneAppVersionRequest is request schema for UnInstallUPhoneAppVersion action
type UnInstallUPhoneAppVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 应用版本的唯一标识ID
	AppVersionId *string `required:"true"`

	// 城市Id，通过[获取城市列表](#DescribeUPhoneCities)获取
	CityId *string `required:"true"`

	// 【数组】云手机实例的资源 ID，调用方式举例：UPhoneIds.0=希望卸载应用的云手机实例 1 的 UPhoneId，UPhoneIds.1=云手机实例 2 的 UPhoneId。
	UPhoneIds []string `required:"true"`
}

// UnInstallUPhoneAppVersionResponse is response schema for UnInstallUPhoneAppVersion action
type UnInstallUPhoneAppVersionResponse struct {
	response.CommonBase

	// 请求的唯一标识Id，`RetCode`为0时返回，可根据此ID查询请求的执行状态
	JobId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewUnInstallUPhoneAppVersionRequest will create request of UnInstallUPhoneAppVersion action.
func (c *UPhoneClient) NewUnInstallUPhoneAppVersionRequest() *UnInstallUPhoneAppVersionRequest {
	req := &UnInstallUPhoneAppVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UnInstallUPhoneAppVersion

传入应用版本Id，在云手机中根据应用版本的PackageName卸载相关应用。一次只支持卸载一个应用。
*/
func (c *UPhoneClient) UnInstallUPhoneAppVersion(req *UnInstallUPhoneAppVersionRequest) (*UnInstallUPhoneAppVersionResponse, error) {
	var err error
	var res UnInstallUPhoneAppVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UnInstallUPhoneAppVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUPhoneImageRequest is request schema for UpdateUPhoneImage action
type UpdateUPhoneImageRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// 镜像的描述信息。长度为2~256个英文或中文字符
	Description *string `required:"false"`

	// 云手机自定义镜像资源ID
	ImageId *string `required:"true"`

	// 镜像名称。长度为2~128个英文或中文字符。
	Name *string `required:"false"`
}

// UpdateUPhoneImageResponse is response schema for UpdateUPhoneImage action
type UpdateUPhoneImageResponse struct {
	response.CommonBase

	// 云手机自定义镜像资源ID
	ImageId string

	// 返回错误消息，当 `RetCode` 非 0 时提供详细的描述信息
	Message string
}

// NewUpdateUPhoneImageRequest will create request of UpdateUPhoneImage action.
func (c *UPhoneClient) NewUpdateUPhoneImageRequest() *UpdateUPhoneImageRequest {
	req := &UpdateUPhoneImageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUPhoneImage

更新云手机镜像信息。
*/
func (c *UPhoneClient) UpdateUPhoneImage(req *UpdateUPhoneImageRequest) (*UpdateUPhoneImageResponse, error) {
	var err error
	var res UpdateUPhoneImageResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUPhoneImage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
