// Code is generated by ucloud-model, DO NOT EDIT IT.

package cube

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// Cube API Schema

// CreateCubeDeploymentRequest is request schema for CreateCubeDeployment action
type CreateCubeDeploymentRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 计费模式。枚举值为： \\ > Year，按年付费； \\ > Month，按月付费；\\ > Postpay， \\ 后付费；默认为后付费
	ChargeType *string `required:"false"`

	// Cpu平台（V6：Intel、A2：AMD），默认V6。支持的地域（北京2B、北京2E、上海2A、广东、香港 、东京）目前北京2E仅有A2，其余地域仅有V6
	CpuPlatform *string `required:"false"`

	// base64编码的Deployment的yaml。大小不超过16KB
	Deployment *string `required:"true"`

	// base64编码的kubeconfig。大小不超过16KB
	KubeConfig *string `required:"false"`

	// Deployment名称
	Name *string `required:"false"`

	// 购买时长。默认:值 1。 月付时，此参数传0，代表购买至月末。
	Quantity *int `required:"false"`

	// 子网Id
	SubnetId *string `required:"true"`

	// 业务组。默认：Default（Default即为未分组）
	Tag *string `required:"false"`

	// VPCId
	VPCId *string `required:"true"`
}

// CreateCubeDeploymentResponse is response schema for CreateCubeDeployment action
type CreateCubeDeploymentResponse struct {
	response.CommonBase

	// 经过base64编码的Deployment的yaml
	Deployment string

	// 控制器ID
	DeploymentId string
}

// NewCreateCubeDeploymentRequest will create request of CreateCubeDeployment action.
func (c *CubeClient) NewCreateCubeDeploymentRequest() *CreateCubeDeploymentRequest {
	req := &CreateCubeDeploymentRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateCubeDeployment

创建Cube的Deployment
*/
func (c *CubeClient) CreateCubeDeployment(req *CreateCubeDeploymentRequest) (*CreateCubeDeploymentResponse, error) {
	var err error
	var res CreateCubeDeploymentResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateCubeDeployment", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateCubePodRequest is request schema for CreateCubePod action
type CreateCubePodRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 计费模式。枚举值为： \\ > Year，按年付费； \\ > Month，按月付费；\\ > Postpay， \\ 后付费；默认为后付费
	ChargeType *string `required:"false"`

	// 代金券ID。请通过DescribeCoupon接口查询，或登录用户中心查看
	CouponId *string `required:"false"`

	// Cpu平台（V6：Intel、A2：AMD、Auto），默认Auto。支持的地域（北京2B、北京2E、上海2A、广东、香港 、东京）目前北京2E仅有A2，其余地域仅有V6
	CpuPlatform *string `required:"false"`

	// pod所在组
	Group *string `required:"false"`

	// base64编码的kubeconfig。大小不超过16KB
	KubeConfig *string `required:"false"`

	// pod的名字
	Name *string `required:"false"`

	// base64编码的Pod的yaml。大小不超过16KB
	Pod *string `required:"true"`

	// 购买时长。默认:值 1。 月付时，此参数传0，代表购买至月末。
	Quantity *int `required:"false"`

	// 子网Id
	SubnetId *string `required:"true"`

	// 业务组。默认：Default（Default即为未分组）
	Tag *string `required:"false"`

	// VPCId
	VPCId *string `required:"true"`
}

// CreateCubePodResponse is response schema for CreateCubePod action
type CreateCubePodResponse struct {
	response.CommonBase

	// 【该字段已废弃，请谨慎使用】
	Action string `deprecated:"true"`

	// cube的资源Id
	CubeId string

	// base64编码的yaml
	Pod string

	// 【该字段已废弃，请谨慎使用】
	RetCode int `deprecated:"true"`
}

// NewCreateCubePodRequest will create request of CreateCubePod action.
func (c *CubeClient) NewCreateCubePodRequest() *CreateCubePodRequest {
	req := &CreateCubePodRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateCubePod

创建Pod
*/
func (c *CubeClient) CreateCubePod(req *CreateCubePodRequest) (*CreateCubePodResponse, error) {
	var err error
	var res CreateCubePodResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateCubePod", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteCubeDeploymentRequest is request schema for DeleteCubeDeployment action
type DeleteCubeDeploymentRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 控制器Id
	DeploymentId *string `required:"true"`
}

// DeleteCubeDeploymentResponse is response schema for DeleteCubeDeployment action
type DeleteCubeDeploymentResponse struct {
	response.CommonBase
}

// NewDeleteCubeDeploymentRequest will create request of DeleteCubeDeployment action.
func (c *CubeClient) NewDeleteCubeDeploymentRequest() *DeleteCubeDeploymentRequest {
	req := &DeleteCubeDeploymentRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteCubeDeployment

删除Cube的Deployment
*/
func (c *CubeClient) DeleteCubeDeployment(req *DeleteCubeDeploymentRequest) (*DeleteCubeDeploymentResponse, error) {
	var err error
	var res DeleteCubeDeploymentResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteCubeDeployment", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteCubePodRequest is request schema for DeleteCubePod action
type DeleteCubePodRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// cubeid和uid任意一个（必须）
	CubeId *string `required:"false"`

	// 删除cube时是否释放绑定的EIP。默认为false。
	ReleaseEIP *bool `required:"false"`

	// cubeid和uid任意一个（必须）
	Uid *string `required:"false"`
}

// DeleteCubePodResponse is response schema for DeleteCubePod action
type DeleteCubePodResponse struct {
	response.CommonBase
}

// NewDeleteCubePodRequest will create request of DeleteCubePod action.
func (c *CubeClient) NewDeleteCubePodRequest() *DeleteCubePodRequest {
	req := &DeleteCubePodRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteCubePod

删除Pod
*/
func (c *CubeClient) DeleteCubePod(req *DeleteCubePodRequest) (*DeleteCubePodResponse, error) {
	var err error
	var res DeleteCubePodResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteCubePod", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubeDeploymentRequest is request schema for GetCubeDeployment action
type GetCubeDeploymentRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// Deployment的Id
	DeploymentId *string `required:"true"`
}

// GetCubeDeploymentResponse is response schema for GetCubeDeployment action
type GetCubeDeploymentResponse struct {
	response.CommonBase

	// 经过base64编码的Deployment的yaml
	Deployment string
}

// NewGetCubeDeploymentRequest will create request of GetCubeDeployment action.
func (c *CubeClient) NewGetCubeDeploymentRequest() *GetCubeDeploymentRequest {
	req := &GetCubeDeploymentRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubeDeployment

获取Deployment的详细信息
*/
func (c *CubeClient) GetCubeDeployment(req *GetCubeDeploymentRequest) (*GetCubeDeploymentResponse, error) {
	var err error
	var res GetCubeDeploymentResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubeDeployment", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubeExecTokenRequest is request schema for GetCubeExecToken action
type GetCubeExecTokenRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 容器名称
	ContainerName *string `required:"true"`

	// CubeId 和 Uid 中必须填写任意一个。CubeId 是所有 Cube 资源的唯一 ID，如非在 UK8S 通过 Virtual Kubelet 插件创建的 Cube， 则必填 CubeId
	CubeId *string `required:"false"`

	// CubeId 和 Uid 中必须填写任意一个。Uid 是在 UK8S 中通过 Virtual Kubelet 插件创建出的 Cube 的唯一标识
	Uid *string `required:"false"`
}

// GetCubeExecTokenResponse is response schema for GetCubeExecToken action
type GetCubeExecTokenResponse struct {
	response.CommonBase

	// terminal的登录连接地址，限单点登录，有效时间5min
	TerminalUrl string

	// 有效时间5min
	Token string
}

// NewGetCubeExecTokenRequest will create request of GetCubeExecToken action.
func (c *CubeClient) NewGetCubeExecTokenRequest() *GetCubeExecTokenRequest {
	req := &GetCubeExecTokenRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubeExecToken

获取登录容器的token
*/
func (c *CubeClient) GetCubeExecToken(req *GetCubeExecTokenRequest) (*GetCubeExecTokenResponse, error) {
	var err error
	var res GetCubeExecTokenResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubeExecToken", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubeExtendInfoRequest is request schema for GetCubeExtendInfo action
type GetCubeExtendInfoRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// id列表以逗号(,)分割
	CubeIds *string `required:"true"`
}

// GetCubeExtendInfoResponse is response schema for GetCubeExtendInfo action
type GetCubeExtendInfoResponse struct {
	response.CommonBase

	// CubeExtendInfo
	ExtendInfo []CubeExtendInfo
}

// NewGetCubeExtendInfoRequest will create request of GetCubeExtendInfo action.
func (c *CubeClient) NewGetCubeExtendInfoRequest() *GetCubeExtendInfoRequest {
	req := &GetCubeExtendInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubeExtendInfo

获取Cube的额外信息
*/
func (c *CubeClient) GetCubeExtendInfo(req *GetCubeExtendInfoRequest) (*GetCubeExtendInfoResponse, error) {
	var err error
	var res GetCubeExtendInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubeExtendInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubeMetricsRequest is request schema for GetCubeMetrics action
type GetCubeMetricsRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 开始时间
	BeginTime *int `required:"true"`

	// Pod内容器名称
	ContainerName *string `required:"true"`

	// 结束时间，必须大于开始时间
	EndTime *int `required:"true"`

	// 监控指标名称
	MetricName []string `required:"true"`

	// Cube实例资源ID
	ResourceId *string `required:"true"`
}

// GetCubeMetricsResponse is response schema for GetCubeMetrics action
type GetCubeMetricsResponse struct {
	response.CommonBase

	// 时间序列集合
	DataSets []MetricDataSet

	// 错误信息
	Message string
}

// NewGetCubeMetricsRequest will create request of GetCubeMetrics action.
func (c *CubeClient) NewGetCubeMetricsRequest() *GetCubeMetricsRequest {
	req := &GetCubeMetricsRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubeMetrics

获取Cube实例（Pod，PodX，Deploy等）监控数据时间序列
*/
func (c *CubeClient) GetCubeMetrics(req *GetCubeMetricsRequest) (*GetCubeMetricsResponse, error) {
	var err error
	var res GetCubeMetricsResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubeMetrics", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubePodRequest is request schema for GetCubePod action
type GetCubePodRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// CubeId和Uid任意一个
	CubeId *string `required:"false"`

	// CubeId和Uid任意一个
	Uid *string `required:"false"`
}

// GetCubePodResponse is response schema for GetCubePod action
type GetCubePodResponse struct {
	response.CommonBase

	// base64编码的pod的yaml
	Pod string
}

// NewGetCubePodRequest will create request of GetCubePod action.
func (c *CubeClient) NewGetCubePodRequest() *GetCubePodRequest {
	req := &GetCubePodRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubePod

获取Pod的详细信息
*/
func (c *CubeClient) GetCubePod(req *GetCubePodRequest) (*GetCubePodResponse, error) {
	var err error
	var res GetCubePodResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubePod", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubePriceRequest is request schema for GetCubePrice action
type GetCubePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 计费模式。枚举值为： \\ > Year，按年付费； \\ > Month，按月付费；\\ > Dynamic，按小时预付费 \\ > Postpay，按秒后付费，默认为月付
	ChargeType *string `required:"true"`

	// 购买数量
	Count *string `required:"true"`

	// CPU 配置，单位为毫核，例如如 1 核则须输入 1000
	Cpu *string `required:"true"`

	// 内存配置，单位为 Mi，例如 1Gi 须输入 1024
	Mem *string `required:"true"`

	// 购买时长。默认:值 1。按小时购买（Dynamic/Postpay）时无需此参数。 月付时，此参数传0，代表购买至月末。
	Quantity *int `required:"true"`
}

// GetCubePriceResponse is response schema for GetCubePrice action
type GetCubePriceResponse struct {
	response.CommonBase

	// 列表价格，单位为分
	OriginalPrice int

	// 折扣后价格，单位为分
	Price int
}

// NewGetCubePriceRequest will create request of GetCubePrice action.
func (c *CubeClient) NewGetCubePriceRequest() *GetCubePriceRequest {
	req := &GetCubePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubePrice

获取cube的价格
*/
func (c *CubeClient) GetCubePrice(req *GetCubePriceRequest) (*GetCubePriceResponse, error) {
	var err error
	var res GetCubePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetCubeTokenRequest is request schema for GetCubeToken action
type GetCubeTokenRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 容器名称
	ContainerName *string `required:"true"`

	// CubeId 和 Uid 中必须填写任意一个。CubeId 是所有 Cube 资源的唯一 ID，如非在 UK8S 通过 Virtual Kubelet 插件创建的 Cube， 则必填 CubeId
	CubeId *string `required:"false"`

	// CubeId 和 Uid 中必须填写任意一个。Uid 是在 UK8S 中通过 Virtual Kubelet 插件创建出的 Cube 的唯一标识
	Uid *string `required:"false"`
}

// GetCubeTokenResponse is response schema for GetCubeToken action
type GetCubeTokenResponse struct {
	response.CommonBase

	// 有效时间5min
	Token string
}

// NewGetCubeTokenRequest will create request of GetCubeToken action.
func (c *CubeClient) NewGetCubeTokenRequest() *GetCubeTokenRequest {
	req := &GetCubeTokenRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetCubeToken

获取Cube的token，可用于terminal登录、log获取
*/
func (c *CubeClient) GetCubeToken(req *GetCubeTokenRequest) (*GetCubeTokenResponse, error) {
	var err error
	var res GetCubeTokenResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetCubeToken", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListCubeDeploymentRequest is request schema for ListCubeDeployment action
type ListCubeDeploymentRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 默认20
	Limit *int `required:"true"`

	// 默认0
	Offset *int `required:"true"`
}

// ListCubeDeploymentResponse is response schema for ListCubeDeployment action
type ListCubeDeploymentResponse struct {
	response.CommonBase

	// DeploymentInfo
	Deployments []string

	//
	TotalCount int
}

// NewListCubeDeploymentRequest will create request of ListCubeDeployment action.
func (c *CubeClient) NewListCubeDeploymentRequest() *ListCubeDeploymentRequest {
	req := &ListCubeDeploymentRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListCubeDeployment

获取Cube的Deployment列表
*/
func (c *CubeClient) ListCubeDeployment(req *ListCubeDeploymentRequest) (*ListCubeDeploymentResponse, error) {
	var err error
	var res ListCubeDeploymentResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListCubeDeployment", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListCubePodRequest is request schema for ListCubePod action
type ListCubePodRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// Deployment的Id
	DeploymentId *string `required:"false"`

	// 组名称
	Group *string `required:"false"`

	// 默认20
	Limit *int `required:"false"`

	// 默认0
	Offset *int `required:"false"`

	// 子网Id
	SubnetId *string `required:"false"`

	// VPC的Id
	VPCId *string `required:"false"`
}

// ListCubePodResponse is response schema for ListCubePod action
type ListCubePodResponse struct {
	response.CommonBase

	// Pod列表，每条数据都做了base64编码
	Pods []string

	// Cube的总数
	TotalCount int
}

// NewListCubePodRequest will create request of ListCubePod action.
func (c *CubeClient) NewListCubePodRequest() *ListCubePodRequest {
	req := &ListCubePodRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListCubePod

获取Pods列表
*/
func (c *CubeClient) ListCubePod(req *ListCubePodRequest) (*ListCubePodResponse, error) {
	var err error
	var res ListCubePodResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListCubePod", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyCubeExtendInfoRequest is request schema for ModifyCubeExtendInfo action
type ModifyCubeExtendInfoRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// cube的id
	CubeId *string `required:"true"`

	// 修改的名字，规则（^[a-zA-Z0-9-_.\u4e00-\u9fa5]{1,32}）
	Name *string `required:"false"`
}

// ModifyCubeExtendInfoResponse is response schema for ModifyCubeExtendInfo action
type ModifyCubeExtendInfoResponse struct {
	response.CommonBase
}

// NewModifyCubeExtendInfoRequest will create request of ModifyCubeExtendInfo action.
func (c *CubeClient) NewModifyCubeExtendInfoRequest() *ModifyCubeExtendInfoRequest {
	req := &ModifyCubeExtendInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyCubeExtendInfo

修改Cube额外信息
*/
func (c *CubeClient) ModifyCubeExtendInfo(req *ModifyCubeExtendInfoRequest) (*ModifyCubeExtendInfoResponse, error) {
	var err error
	var res ModifyCubeExtendInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyCubeExtendInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyCubeTagRequest is request schema for ModifyCubeTag action
type ModifyCubeTagRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// CubeId
	CubeId *string `required:"true"`

	// 业务组名称
	Tag *string `required:"true"`
}

// ModifyCubeTagResponse is response schema for ModifyCubeTag action
type ModifyCubeTagResponse struct {
	response.CommonBase

	// CubeId
	CubeId string
}

// NewModifyCubeTagRequest will create request of ModifyCubeTag action.
func (c *CubeClient) NewModifyCubeTagRequest() *ModifyCubeTagRequest {
	req := &ModifyCubeTagRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyCubeTag

修改业务组名字
*/
func (c *CubeClient) ModifyCubeTag(req *ModifyCubeTagRequest) (*ModifyCubeTagResponse, error) {
	var err error
	var res ModifyCubeTagResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyCubeTag", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RenewCubePodRequest is request schema for RenewCubePod action
type RenewCubePodRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// 容器Id
	CubeId *string `required:"true"`

	// base64编码的Pod的yaml
	Pod *string `required:"true"`
}

// RenewCubePodResponse is response schema for RenewCubePod action
type RenewCubePodResponse struct {
	response.CommonBase

	// base64编码过的yaml，需要解码获取信息
	Pod string
}

// NewRenewCubePodRequest will create request of RenewCubePod action.
func (c *CubeClient) NewRenewCubePodRequest() *RenewCubePodRequest {
	req := &RenewCubePodRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RenewCubePod

更新Pod
*/
func (c *CubeClient) RenewCubePod(req *RenewCubePodRequest) (*RenewCubePodResponse, error) {
	var err error
	var res RenewCubePodResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RenewCubePod", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateCubeDeploymentRequest is request schema for UpdateCubeDeployment action
type UpdateCubeDeploymentRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// base64编码的Deployment的yaml。大小不超过16KB
	Deployment *string `required:"true"`

	// Deployment的Id
	DeploymentId *string `required:"true"`

	// Deployment的name
	Name *string `required:"false"`
}

// UpdateCubeDeploymentResponse is response schema for UpdateCubeDeployment action
type UpdateCubeDeploymentResponse struct {
	response.CommonBase

	// 经过base64编码的Deployment的yaml
	Deployment string
}

// NewUpdateCubeDeploymentRequest will create request of UpdateCubeDeployment action.
func (c *CubeClient) NewUpdateCubeDeploymentRequest() *UpdateCubeDeploymentRequest {
	req := &UpdateCubeDeploymentRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateCubeDeployment

更新Deployment
*/
func (c *CubeClient) UpdateCubeDeployment(req *UpdateCubeDeploymentRequest) (*UpdateCubeDeploymentResponse, error) {
	var err error
	var res UpdateCubeDeploymentResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateCubeDeployment", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
