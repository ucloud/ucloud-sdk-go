// Code is generated by ucloud-model, DO NOT EDIT IT.

package upgsql

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UPgSQL API Schema

// CreateUPgSQLInstanceRequest is request schema for CreateUPgSQLInstance action
type CreateUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 管理员密码
	AdminPassword *string `required:"true"`

	// PostgreSQL的版本，pg10.4:postgresql-10.4，pg13.4:postgresql-13.4
	DBVersion *string `required:"true"`

	// 磁盘空间(GB)
	DiskSpace *string `required:"true"`

	// UDB实例模式类型, 可选值如下: "Normal": 普通版UDB实例 "HA": 高可用版UDB实例 默认是"Normal"
	InstanceMode *string `required:"false"`

	// 机器配置类型，2核4G的机器:o.pgsql2m.medium
	MachineType *string `required:"true"`

	// 实例名称，至少6位
	Name *string `required:"true"`

	// DB实例使用的配置参数组id
	ParamGroupID *int `required:"true"`

	// 端口默认为5432
	Port *int `required:"true"`

	// 子网ID
	SubnetID *string `required:"true"`

	// VPC的ID
	VPCID *string `required:"true"`
}

// CreateUPgSQLInstanceResponse is response schema for CreateUPgSQLInstance action
type CreateUPgSQLInstanceResponse struct {
	response.CommonBase

	// 资源ID
	InstanceID string

	// 返回信息
	Message string
}

// NewCreateUPgSQLInstanceRequest will create request of CreateUPgSQLInstance action.
func (c *UPgSQLClient) NewCreateUPgSQLInstanceRequest() *CreateUPgSQLInstanceRequest {
	req := &CreateUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPgSQLInstance

创建PG云数据库
*/
func (c *UPgSQLClient) CreateUPgSQLInstance(req *CreateUPgSQLInstanceRequest) (*CreateUPgSQLInstanceResponse, error) {
	var err error
	var res CreateUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUPgSQLParamTemplateRequest is request schema for CreateUPgSQLParamTemplate action
type CreateUPgSQLParamTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 什么版本,以及类型的DB
	DBVersion *string `required:"true"`

	// 描述信息
	Description *string `required:"false"`

	// 模板名称
	GroupName *string `required:"true"`

	// 基准模板
	SrcGroupID *int `required:"true"`
}

// CreateUPgSQLParamTemplateResponse is response schema for CreateUPgSQLParamTemplate action
type CreateUPgSQLParamTemplateResponse struct {
	response.CommonBase

	// 创建的模板ID
	GroupID int

	// 描述信息
	Message string
}

// NewCreateUPgSQLParamTemplateRequest will create request of CreateUPgSQLParamTemplate action.
func (c *UPgSQLClient) NewCreateUPgSQLParamTemplateRequest() *CreateUPgSQLParamTemplateRequest {
	req := &CreateUPgSQLParamTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPgSQLParamTemplate

创建PG参数模板
*/
func (c *UPgSQLClient) CreateUPgSQLParamTemplate(req *CreateUPgSQLParamTemplateRequest) (*CreateUPgSQLParamTemplateResponse, error) {
	var err error
	var res CreateUPgSQLParamTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPgSQLParamTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUPgSQLReadonlyRequest is request schema for CreateUPgSQLReadonly action
type CreateUPgSQLReadonlyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 磁盘空间
	DiskSpace *int `required:"true"`

	// 机器配置类型，2核4G的机器:o.pgsql2m.medium
	MachineType *string `required:"true"`

	// Db名称
	Name *string `required:"true"`

	// DB端口
	Port *int `required:"true"`

	// 同步的源库
	SrcInstanceID *string `required:"true"`

	// 子网ID
	SubnetID *string `required:"false"`

	// VPCID
	VPCID *string `required:"false"`
}

// CreateUPgSQLReadonlyResponse is response schema for CreateUPgSQLReadonly action
type CreateUPgSQLReadonlyResponse struct {
	response.CommonBase

	// 资源ID
	InstanceID string
}

// NewCreateUPgSQLReadonlyRequest will create request of CreateUPgSQLReadonly action.
func (c *UPgSQLClient) NewCreateUPgSQLReadonlyRequest() *CreateUPgSQLReadonlyRequest {
	req := &CreateUPgSQLReadonlyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUPgSQLReadonly

创建PG从库
*/
func (c *UPgSQLClient) CreateUPgSQLReadonly(req *CreateUPgSQLReadonlyRequest) (*CreateUPgSQLReadonlyResponse, error) {
	var err error
	var res CreateUPgSQLReadonlyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUPgSQLReadonly", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUPgSQLInstanceRequest is request schema for DeleteUPgSQLInstance action
type DeleteUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 实例ID
	InstanceID *string `required:"true"`
}

// DeleteUPgSQLInstanceResponse is response schema for DeleteUPgSQLInstance action
type DeleteUPgSQLInstanceResponse struct {
	response.CommonBase

	// 描述信息
	Message string
}

// NewDeleteUPgSQLInstanceRequest will create request of DeleteUPgSQLInstance action.
func (c *UPgSQLClient) NewDeleteUPgSQLInstanceRequest() *DeleteUPgSQLInstanceRequest {
	req := &DeleteUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUPgSQLInstance

删除PG实例
*/
func (c *UPgSQLClient) DeleteUPgSQLInstance(req *DeleteUPgSQLInstanceRequest) (*DeleteUPgSQLInstanceResponse, error) {
	var err error
	var res DeleteUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DeleteUPgSQLParamTemplateRequest is request schema for DeleteUPgSQLParamTemplate action
type DeleteUPgSQLParamTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 模板ID
	GroupID *int `required:"true"`
}

// DeleteUPgSQLParamTemplateResponse is response schema for DeleteUPgSQLParamTemplate action
type DeleteUPgSQLParamTemplateResponse struct {
	response.CommonBase

	// 描述信息
	Message string
}

// NewDeleteUPgSQLParamTemplateRequest will create request of DeleteUPgSQLParamTemplate action.
func (c *UPgSQLClient) NewDeleteUPgSQLParamTemplateRequest() *DeleteUPgSQLParamTemplateRequest {
	req := &DeleteUPgSQLParamTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DeleteUPgSQLParamTemplate

删除参数模板
*/
func (c *UPgSQLClient) DeleteUPgSQLParamTemplate(req *DeleteUPgSQLParamTemplateRequest) (*DeleteUPgSQLParamTemplateResponse, error) {
	var err error
	var res DeleteUPgSQLParamTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUPgSQLParamTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DownloadUPgSQLParamTemplateRequest is request schema for DownloadUPgSQLParamTemplate action
type DownloadUPgSQLParamTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 参数模板id
	GroupID *int `required:"true"`
}

// DownloadUPgSQLParamTemplateResponse is response schema for DownloadUPgSQLParamTemplate action
type DownloadUPgSQLParamTemplateResponse struct {
	response.CommonBase

	// base64编码过的
	Content string

	// 描述信息
	Message string
}

// NewDownloadUPgSQLParamTemplateRequest will create request of DownloadUPgSQLParamTemplate action.
func (c *UPgSQLClient) NewDownloadUPgSQLParamTemplateRequest() *DownloadUPgSQLParamTemplateRequest {
	req := &DownloadUPgSQLParamTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DownloadUPgSQLParamTemplate

下载参数模板信息
*/
func (c *UPgSQLClient) DownloadUPgSQLParamTemplate(req *DownloadUPgSQLParamTemplateRequest) (*DownloadUPgSQLParamTemplateResponse, error) {
	var err error
	var res DownloadUPgSQLParamTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DownloadUPgSQLParamTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLBackupStrategyRequest is request schema for GetUPgSQLBackupStrategy action
type GetUPgSQLBackupStrategyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// DB实例Id
	InstanceID *string `required:"true"`
}

// GetUPgSQLBackupStrategyResponse is response schema for GetUPgSQLBackupStrategy action
type GetUPgSQLBackupStrategyResponse struct {
	response.CommonBase

	// 默认的备份方式
	BackupMethod string

	// 自动备份预计开始时间范围
	BackupTimeRange string

	// 自动备份预期星期几(1~7)开始
	BackupWeek string

	// 返回的详细信息
	Message string
}

// NewGetUPgSQLBackupStrategyRequest will create request of GetUPgSQLBackupStrategy action.
func (c *UPgSQLClient) NewGetUPgSQLBackupStrategyRequest() *GetUPgSQLBackupStrategyRequest {
	req := &GetUPgSQLBackupStrategyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLBackupStrategy

获取备份策略
*/
func (c *UPgSQLClient) GetUPgSQLBackupStrategy(req *GetUPgSQLBackupStrategyRequest) (*GetUPgSQLBackupStrategyResponse, error) {
	var err error
	var res GetUPgSQLBackupStrategyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLBackupStrategy", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLBackupURLRequest is request schema for GetUPgSQLBackupURL action
type GetUPgSQLBackupURLRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 备份Id
	BackupID *string `required:"true"`

	// DB实例Id
	InstanceID *string `required:"true"`
}

// GetUPgSQLBackupURLResponse is response schema for GetUPgSQLBackupURL action
type GetUPgSQLBackupURLResponse struct {
	response.CommonBase

	// DB实例备份文件公网的地址
	BackupPath string

	// DB实例备份文件内网的地址
	InnerBackupPath string

	// 返回的详细信息
	Message string
}

// NewGetUPgSQLBackupURLRequest will create request of GetUPgSQLBackupURL action.
func (c *UPgSQLClient) NewGetUPgSQLBackupURLRequest() *GetUPgSQLBackupURLRequest {
	req := &GetUPgSQLBackupURLRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLBackupURL

获取备份下载地址
*/
func (c *UPgSQLClient) GetUPgSQLBackupURL(req *GetUPgSQLBackupURLRequest) (*GetUPgSQLBackupURLResponse, error) {
	var err error
	var res GetUPgSQLBackupURLResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLBackupURL", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLInstanceRequest is request schema for GetUPgSQLInstance action
type GetUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 资源ID
	InstanceID *string `required:"true"`
}

// GetUPgSQLInstanceResponse is response schema for GetUPgSQLInstance action
type GetUPgSQLInstanceResponse struct {
	response.CommonBase

	//
	DataSet UDBInstance

	// 返回信息
	Message string
}

// NewGetUPgSQLInstanceRequest will create request of GetUPgSQLInstance action.
func (c *UPgSQLClient) NewGetUPgSQLInstanceRequest() *GetUPgSQLInstanceRequest {
	req := &GetUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLInstance

获取PG云数据库实例描述
*/
func (c *UPgSQLClient) GetUPgSQLInstance(req *GetUPgSQLInstanceRequest) (*GetUPgSQLInstanceResponse, error) {
	var err error
	var res GetUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLInstancePriceRequest is request schema for GetUPgSQLInstancePrice action
type GetUPgSQLInstancePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 计费模式。枚举值为： Year，按年付费； Month，按月付费； Dynamic，按小时付费（需开启权限）。默认为月付
	ChargeType *string `required:"false"`

	// 磁盘空间(GB)
	DiskSpace *int `required:"true"`

	// UDB实例模式类型, 可选值如下: "Normal": 普通版UDB实例 "HA": 高可用版UDB实例
	InstanceMode *string `required:"true"`

	// 机器配置类型 参考2C4G机器：o.pgsql2m.medium
	MachineType *string `required:"true"`

	// 购买时长。默认: 1。按小时购买(Dynamic)时无需此参数。 月付时，此参数传0，代表了购买至月末。
	Quantity *int `required:"false"`
}

// GetUPgSQLInstancePriceResponse is response schema for GetUPgSQLInstancePrice action
type GetUPgSQLInstancePriceResponse struct {
	response.CommonBase

	// 价格列表
	PriceSet []UPgSQLInstancePriceSet
}

// NewGetUPgSQLInstancePriceRequest will create request of GetUPgSQLInstancePrice action.
func (c *UPgSQLClient) NewGetUPgSQLInstancePriceRequest() *GetUPgSQLInstancePriceRequest {
	req := &GetUPgSQLInstancePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLInstancePrice

获取创建PG云数据库价格
*/
func (c *UPgSQLClient) GetUPgSQLInstancePrice(req *GetUPgSQLInstancePriceRequest) (*GetUPgSQLInstancePriceResponse, error) {
	var err error
	var res GetUPgSQLInstancePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLInstancePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLParamTemplateRequest is request schema for GetUPgSQLParamTemplate action
type GetUPgSQLParamTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 模板ID
	GroupID *int `required:"true"`
}

// GetUPgSQLParamTemplateResponse is response schema for GetUPgSQLParamTemplate action
type GetUPgSQLParamTemplateResponse struct {
	response.CommonBase

	// 参数列表
	Data []Param

	// 描述信息
	Message string
}

// NewGetUPgSQLParamTemplateRequest will create request of GetUPgSQLParamTemplate action.
func (c *UPgSQLClient) NewGetUPgSQLParamTemplateRequest() *GetUPgSQLParamTemplateRequest {
	req := &GetUPgSQLParamTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLParamTemplate

获取模板信息
*/
func (c *UPgSQLClient) GetUPgSQLParamTemplate(req *GetUPgSQLParamTemplateRequest) (*GetUPgSQLParamTemplateResponse, error) {
	var err error
	var res GetUPgSQLParamTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLParamTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUPgSQLUpgradePriceRequest is request schema for GetUPgSQLUpgradePrice action
type GetUPgSQLUpgradePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 磁盘空间(GB)
	DiskSpace *int `required:"true"`

	// 资源ID
	InstanceID *string `required:"true"`

	// UDB实例模式类型, 可选值如下: "normal": 普通版UDB实例 "ha": 高可用版UDB实例 默认是"normal"
	InstanceMode *string `required:"false"`

	// 机器配置类型
	MachineType *string `required:"true"`
}

// GetUPgSQLUpgradePriceResponse is response schema for GetUPgSQLUpgradePrice action
type GetUPgSQLUpgradePriceResponse struct {
	response.CommonBase

	// 限时优惠的折前原价
	OriginalPrice float64

	// 规格调整差价。精确到小数点后2位。
	Price float64
}

// NewGetUPgSQLUpgradePriceRequest will create request of GetUPgSQLUpgradePrice action.
func (c *UPgSQLClient) NewGetUPgSQLUpgradePriceRequest() *GetUPgSQLUpgradePriceRequest {
	req := &GetUPgSQLUpgradePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUPgSQLUpgradePrice

 获取 PG 云数据库升降级价格
*/
func (c *UPgSQLClient) GetUPgSQLUpgradePrice(req *GetUPgSQLUpgradePriceRequest) (*GetUPgSQLUpgradePriceResponse, error) {
	var err error
	var res GetUPgSQLUpgradePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUPgSQLUpgradePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUPgSQLBackupRequest is request schema for ListUPgSQLBackup action
type ListUPgSQLBackupRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 备份类型,默认值是0(0:表示全部,1:自动备份,2:手动备份
	BackupType *int `required:"false"`

	// DB实例Id
	InstanceID *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`
}

// ListUPgSQLBackupResponse is response schema for ListUPgSQLBackup action
type ListUPgSQLBackupResponse struct {
	response.CommonBase

	// 备份信息列表.修参数
	DataSet []UPgSQLBackup

	// 返回的详细信息
	Message string

	// 总个数
	TotalCount int
}

// NewListUPgSQLBackupRequest will create request of ListUPgSQLBackup action.
func (c *UPgSQLClient) NewListUPgSQLBackupRequest() *ListUPgSQLBackupRequest {
	req := &ListUPgSQLBackupRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUPgSQLBackup

获取备份列表
*/
func (c *UPgSQLClient) ListUPgSQLBackup(req *ListUPgSQLBackupRequest) (*ListUPgSQLBackupResponse, error) {
	var err error
	var res ListUPgSQLBackupResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUPgSQLBackup", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUPgSQLInstanceRequest is request schema for ListUPgSQLInstance action
type ListUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

}

// ListUPgSQLInstanceResponse is response schema for ListUPgSQLInstance action
type ListUPgSQLInstanceResponse struct {
	response.CommonBase

	// 数据库信息列表
	DataSet []UDBInstanceSet

	// 错误信息
	Message string
}

// NewListUPgSQLInstanceRequest will create request of ListUPgSQLInstance action.
func (c *UPgSQLClient) NewListUPgSQLInstanceRequest() *ListUPgSQLInstanceRequest {
	req := &ListUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUPgSQLInstance

获取PG云数据库列表
*/
func (c *UPgSQLClient) ListUPgSQLInstance(req *ListUPgSQLInstanceRequest) (*ListUPgSQLInstanceResponse, error) {
	var err error
	var res ListUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUPgSQLMachineTypeRequest is request schema for ListUPgSQLMachineType action
type ListUPgSQLMachineTypeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

}

// ListUPgSQLMachineTypeResponse is response schema for ListUPgSQLMachineType action
type ListUPgSQLMachineTypeResponse struct {
	response.CommonBase

	//
	DataSet []PgSQLMachineType

	// 返回信息
	Message string
}

// NewListUPgSQLMachineTypeRequest will create request of ListUPgSQLMachineType action.
func (c *UPgSQLClient) NewListUPgSQLMachineTypeRequest() *ListUPgSQLMachineTypeRequest {
	req := &ListUPgSQLMachineTypeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUPgSQLMachineType

获取UPgSQL支持机器类型列表
*/
func (c *UPgSQLClient) ListUPgSQLMachineType(req *ListUPgSQLMachineTypeRequest) (*ListUPgSQLMachineTypeResponse, error) {
	var err error
	var res ListUPgSQLMachineTypeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUPgSQLMachineType", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUPgSQLVersionRequest is request schema for ListUPgSQLVersion action
type ListUPgSQLVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

}

// ListUPgSQLVersionResponse is response schema for ListUPgSQLVersion action
type ListUPgSQLVersionResponse struct {
	response.CommonBase

	// postgresql版本信息
	DataSet []PgSQLVersion

	// 返回信息
	Message string
}

// NewListUPgSQLVersionRequest will create request of ListUPgSQLVersion action.
func (c *UPgSQLClient) NewListUPgSQLVersionRequest() *ListUPgSQLVersionRequest {
	req := &ListUPgSQLVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUPgSQLVersion

获取UPgSQL支持版本列表
*/
func (c *UPgSQLClient) ListUPgSQLVersion(req *ListUPgSQLVersionRequest) (*ListUPgSQLVersionResponse, error) {
	var err error
	var res ListUPgSQLVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUPgSQLVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RestartUPgSQLInstanceRequest is request schema for RestartUPgSQLInstance action
type RestartUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 是否强制重启
	ForceToRestart *bool `required:"false"`

	// 实例ID
	InstanceID *string `required:"true"`

	// 是否一并重启主机
	RestartHost *bool `required:"false"`
}

// RestartUPgSQLInstanceResponse is response schema for RestartUPgSQLInstance action
type RestartUPgSQLInstanceResponse struct {
	response.CommonBase

	// 描述信息
	Message string
}

// NewRestartUPgSQLInstanceRequest will create request of RestartUPgSQLInstance action.
func (c *UPgSQLClient) NewRestartUPgSQLInstanceRequest() *RestartUPgSQLInstanceRequest {
	req := &RestartUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RestartUPgSQLInstance

重启PG实例
*/
func (c *UPgSQLClient) RestartUPgSQLInstance(req *RestartUPgSQLInstanceRequest) (*RestartUPgSQLInstanceResponse, error) {
	var err error
	var res RestartUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RestartUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StartUPgSQLInstanceRequest is request schema for StartUPgSQLInstance action
type StartUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 实例ID
	InstanceID *string `required:"true"`
}

// StartUPgSQLInstanceResponse is response schema for StartUPgSQLInstance action
type StartUPgSQLInstanceResponse struct {
	response.CommonBase

	// 返回信息
	Message string
}

// NewStartUPgSQLInstanceRequest will create request of StartUPgSQLInstance action.
func (c *UPgSQLClient) NewStartUPgSQLInstanceRequest() *StartUPgSQLInstanceRequest {
	req := &StartUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StartUPgSQLInstance

启动 PG实例
*/
func (c *UPgSQLClient) StartUPgSQLInstance(req *StartUPgSQLInstanceRequest) (*StartUPgSQLInstanceResponse, error) {
	var err error
	var res StartUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StartUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StopUPgSQLCreatingReadonlyRequest is request schema for StopUPgSQLCreatingReadonly action
type StopUPgSQLCreatingReadonlyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 停止创建从库
	InstanceID *string `required:"true"`
}

// StopUPgSQLCreatingReadonlyResponse is response schema for StopUPgSQLCreatingReadonly action
type StopUPgSQLCreatingReadonlyResponse struct {
	response.CommonBase
}

// NewStopUPgSQLCreatingReadonlyRequest will create request of StopUPgSQLCreatingReadonly action.
func (c *UPgSQLClient) NewStopUPgSQLCreatingReadonlyRequest() *StopUPgSQLCreatingReadonlyRequest {
	req := &StopUPgSQLCreatingReadonlyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StopUPgSQLCreatingReadonly

停止创建从库
*/
func (c *UPgSQLClient) StopUPgSQLCreatingReadonly(req *StopUPgSQLCreatingReadonlyRequest) (*StopUPgSQLCreatingReadonlyResponse, error) {
	var err error
	var res StopUPgSQLCreatingReadonlyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StopUPgSQLCreatingReadonly", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StopUPgSQLInstanceRequest is request schema for StopUPgSQLInstance action
type StopUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 是否强制关闭
	ForceToStop *bool `required:"false"`

	// 实例ID
	InstanceID *string `required:"true"`

	// 是否将主机一并关闭
	StopHost *bool `required:"false"`
}

// StopUPgSQLInstanceResponse is response schema for StopUPgSQLInstance action
type StopUPgSQLInstanceResponse struct {
	response.CommonBase

	// 描述信息
	Message string
}

// NewStopUPgSQLInstanceRequest will create request of StopUPgSQLInstance action.
func (c *UPgSQLClient) NewStopUPgSQLInstanceRequest() *StopUPgSQLInstanceRequest {
	req := &StopUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StopUPgSQLInstance

关闭PG实例
*/
func (c *UPgSQLClient) StopUPgSQLInstance(req *StopUPgSQLInstanceRequest) (*StopUPgSQLInstanceResponse, error) {
	var err error
	var res StopUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StopUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUPgSQLAttributeRequest is request schema for UpdateUPgSQLAttribute action
type UpdateUPgSQLAttributeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// DB实例Id
	InstanceID *string `required:"true"`

	// 新的db名字(不能为空字符串)
	Name *string `required:"false"`

	// 新的备注信息
	Remark *string `required:"false"`
}

// UpdateUPgSQLAttributeResponse is response schema for UpdateUPgSQLAttribute action
type UpdateUPgSQLAttributeResponse struct {
	response.CommonBase

	// 返回的详细信息
	Message string
}

// NewUpdateUPgSQLAttributeRequest will create request of UpdateUPgSQLAttribute action.
func (c *UPgSQLClient) NewUpdateUPgSQLAttributeRequest() *UpdateUPgSQLAttributeRequest {
	req := &UpdateUPgSQLAttributeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUPgSQLAttribute

更新数据库属性
*/
func (c *UPgSQLClient) UpdateUPgSQLAttribute(req *UpdateUPgSQLAttributeRequest) (*UpdateUPgSQLAttributeResponse, error) {
	var err error
	var res UpdateUPgSQLAttributeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUPgSQLAttribute", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUPgSQLBackupStrategyRequest is request schema for UpdateUPgSQLBackupStrategy action
type UpdateUPgSQLBackupStrategyRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 选择默认的备份方式
	BackupMethod *string `required:"false"`

	// 自动备份预计开始时间范围(00:00~23:59)，例如:(3:00~4:00)
	BackupTimeRange *string `required:"false"`

	// 自动备份预期星期几(1~7)开始。默认1,2,3,4,5,6,7(星期一到星期日)
	BackupWeek *string `required:"false"`

	// DB实例Id
	InstanceID *string `required:"true"`
}

// UpdateUPgSQLBackupStrategyResponse is response schema for UpdateUPgSQLBackupStrategy action
type UpdateUPgSQLBackupStrategyResponse struct {
	response.CommonBase

	// 返回的详细信息
	Message string
}

// NewUpdateUPgSQLBackupStrategyRequest will create request of UpdateUPgSQLBackupStrategy action.
func (c *UPgSQLClient) NewUpdateUPgSQLBackupStrategyRequest() *UpdateUPgSQLBackupStrategyRequest {
	req := &UpdateUPgSQLBackupStrategyRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUPgSQLBackupStrategy

修改备份策略
*/
func (c *UPgSQLClient) UpdateUPgSQLBackupStrategy(req *UpdateUPgSQLBackupStrategyRequest) (*UpdateUPgSQLBackupStrategyResponse, error) {
	var err error
	var res UpdateUPgSQLBackupStrategyResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUPgSQLBackupStrategy", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpdateUPgSQLPasswordRequest is request schema for UpdateUPgSQLPassword action
type UpdateUPgSQLPasswordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// DB实例Id
	InstanceID *string `required:"true"`

	// 新的db密码
	Password *string `required:"true"`
}

// UpdateUPgSQLPasswordResponse is response schema for UpdateUPgSQLPassword action
type UpdateUPgSQLPasswordResponse struct {
	response.CommonBase

	// 返回的详细信息
	Message string
}

// NewUpdateUPgSQLPasswordRequest will create request of UpdateUPgSQLPassword action.
func (c *UPgSQLClient) NewUpdateUPgSQLPasswordRequest() *UpdateUPgSQLPasswordRequest {
	req := &UpdateUPgSQLPasswordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpdateUPgSQLPassword

更新数据库密码
*/
func (c *UPgSQLClient) UpdateUPgSQLPassword(req *UpdateUPgSQLPasswordRequest) (*UpdateUPgSQLPasswordResponse, error) {
	var err error
	var res UpdateUPgSQLPasswordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpdateUPgSQLPassword", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UpgradeUPgSQLInstanceRequest is request schema for UpgradeUPgSQLInstance action
type UpgradeUPgSQLInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 磁盘空间(GB)
	DiskSpace *int `required:"true"`

	// 资源ID
	InstanceID *string `required:"true"`

	// 机器配置类型
	MachineType *string `required:"true"`
}

// UpgradeUPgSQLInstanceResponse is response schema for UpgradeUPgSQLInstance action
type UpgradeUPgSQLInstanceResponse struct {
	response.CommonBase

	// 错误信息
	Message string
}

// NewUpgradeUPgSQLInstanceRequest will create request of UpgradeUPgSQLInstance action.
func (c *UPgSQLClient) NewUpgradeUPgSQLInstanceRequest() *UpgradeUPgSQLInstanceRequest {
	req := &UpgradeUPgSQLInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UpgradeUPgSQLInstance

硬件规格升降级
*/
func (c *UPgSQLClient) UpgradeUPgSQLInstance(req *UpgradeUPgSQLInstanceRequest) (*UpgradeUPgSQLInstanceResponse, error) {
	var err error
	var res UpgradeUPgSQLInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UpgradeUPgSQLInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// UploadUPgSQLParamTemplateRequest is request schema for UploadUPgSQLParamTemplate action
type UploadUPgSQLParamTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// base64编码过的
	Content *string `required:"true"`

	// 应用的DB版本
	DBVersion *string `required:"true"`

	// 模板描述
	Description *string `required:"false"`

	// 模板名称
	GroupName *string `required:"true"`

	// 版本
	ParamGroupType *string `required:"false"`
}

// UploadUPgSQLParamTemplateResponse is response schema for UploadUPgSQLParamTemplate action
type UploadUPgSQLParamTemplateResponse struct {
	response.CommonBase

	// 生成的模板ID
	GroupID int

	// 描述信息
	Message string
}

// NewUploadUPgSQLParamTemplateRequest will create request of UploadUPgSQLParamTemplate action.
func (c *UPgSQLClient) NewUploadUPgSQLParamTemplateRequest() *UploadUPgSQLParamTemplateRequest {
	req := &UploadUPgSQLParamTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: UploadUPgSQLParamTemplate

上传参数模板
*/
func (c *UPgSQLClient) UploadUPgSQLParamTemplate(req *UploadUPgSQLParamTemplateRequest) (*UploadUPgSQLParamTemplateResponse, error) {
	var err error
	var res UploadUPgSQLParamTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("UploadUPgSQLParamTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
