// Code is generated by ucloud-model, DO NOT EDIT IT.

package ubill

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UBill API Schema

// DescribeOrderDetailInfoRequest is request schema for DescribeOrderDetailInfo action
type DescribeOrderDetailInfoRequest struct {
	request.CommonBase

	//
	AzGroups []string `required:"false"`

	//
	BeginTime *int `required:"true"`

	//
	ChargeTypes []string `required:"false"`

	//
	EndTime *int `required:"true"`

	//
	Invoiceds []string `required:"false"`

	//
	Limit *int `required:"false"`

	//
	Offset *int `required:"false"`

	//
	OrderStates []string `required:"false"`

	//
	OrderTypes []string `required:"false"`

	//
	QueryAll *string `required:"false"`

	//
	Regions []string `required:"false"`

	//
	ResourceIds []string `required:"false"`

	//
	ResourceTypes []string `required:"false"`

	//
	Tags []string `required:"false"`

	//
	TradeNos []string `required:"false"`
}

// DescribeOrderDetailInfoResponse is response schema for DescribeOrderDetailInfo action
type DescribeOrderDetailInfoResponse struct {
	response.CommonBase

	//
	OrderInfos []OrderInfo
}

// NewDescribeOrderDetailInfoRequest will create request of DescribeOrderDetailInfo action.
func (c *UBillClient) NewDescribeOrderDetailInfoRequest() *DescribeOrderDetailInfoRequest {
	req := &DescribeOrderDetailInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: DescribeOrderDetailInfo


*/
func (c *UBillClient) DescribeOrderDetailInfo(req *DescribeOrderDetailInfoRequest) (*DescribeOrderDetailInfoResponse, error) {
	var err error
	var res DescribeOrderDetailInfoResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeOrderDetailInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetBalanceRequest is request schema for GetBalance action
type GetBalanceRequest struct {
	request.CommonBase
}

// GetBalanceResponse is response schema for GetBalance action
type GetBalanceResponse struct {
	response.CommonBase

	// 账户余额信息
	AccountInfo AccountInfo
}

// NewGetBalanceRequest will create request of GetBalance action.
func (c *UBillClient) NewGetBalanceRequest() *GetBalanceRequest {
	req := &GetBalanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetBalance

获取账户余额
*/
func (c *UBillClient) GetBalance(req *GetBalanceRequest) (*GetBalanceResponse, error) {
	var err error
	var res GetBalanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetBalance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetBillDataFileUrlRequest is request schema for GetBillDataFileUrl action
type GetBillDataFileUrlRequest struct {
	request.CommonBase

	// 此字段不推荐使用，建议使用BillingCycle.   若BillingCycle 和 BillPeriod同时存在，BillingCycle 优先
	BillPeriod *int `required:"false"`

	// 账单类型，传 0 时获取账单总览报表，传 1 获取账单明细报表
	BillType *int `required:"true"`

	// 账期(字符串格式，YYYY-MM，例如2021-08).   若BillingCycle 和 BillPeriod同时存在，BillingCycle 优先
	BillingCycle *string `required:"true"`

	// 获取账单总览报表时，账单的支付状态，传 0 时获取待支付账单，传 1 时获取已支付账单。获取账单明细报表时该参数无效
	PaidType *int `required:"false"`

	// 如需求其他语言版本的账单则使用此参数。默认中文。如 RequireVersion = "EN"，则提供英文版本账单。
	RequireVersion *string `required:"false"`

	// 文件版本，若为"v1"表示获取带有子用户信息的账单，可以为空
	Version *string `required:"false"`
}

// GetBillDataFileUrlResponse is response schema for GetBillDataFileUrl action
type GetBillDataFileUrlResponse struct {
	response.CommonBase

	// 交易账单数据下载URL
	FileUrl string

	// 生成的 URL是否有效，即有对应数据文件
	IsValid string
}

// NewGetBillDataFileUrlRequest will create request of GetBillDataFileUrl action.
func (c *UBillClient) NewGetBillDataFileUrlRequest() *GetBillDataFileUrlRequest {
	req := &GetBillDataFileUrlRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetBillDataFileUrl

生成账单数据文件下载的 url
*/
func (c *UBillClient) GetBillDataFileUrl(req *GetBillDataFileUrlRequest) (*GetBillDataFileUrlResponse, error) {
	var err error
	var res GetBillDataFileUrlResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetBillDataFileUrl", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
