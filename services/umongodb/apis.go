// Code is generated by ucloud-model, DO NOT EDIT IT.

package umongodb

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UMongoDB API Schema

// BackupUMongoDBClusterRequest is request schema for BackupUMongoDBCluster action
type BackupUMongoDBClusterRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 备份名称
	BackupName *string `required:"true"`

	// 实例ID
	ClusterId *string `required:"true"`
}

// BackupUMongoDBClusterResponse is response schema for BackupUMongoDBCluster action
type BackupUMongoDBClusterResponse struct {
	response.CommonBase

	// 备份ID
	BackupId string

	// 实例ID
	ClusterId string

	// 错误信息
	Message string
}

// NewBackupUMongoDBClusterRequest will create request of BackupUMongoDBCluster action.
func (c *UMongoDBClient) NewBackupUMongoDBClusterRequest() *BackupUMongoDBClusterRequest {
	req := &BackupUMongoDBClusterRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: BackupUMongoDBCluster

备份集群数据库
*/
func (c *UMongoDBClient) BackupUMongoDBCluster(req *BackupUMongoDBClusterRequest) (*BackupUMongoDBClusterResponse, error) {
	var err error
	var res BackupUMongoDBClusterResponse

	reqCopier := *req

	err = c.Client.InvokeAction("BackupUMongoDBCluster", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// CreateUMongoDBConfigTemplateRequest is request schema for CreateUMongoDBConfigTemplate action
type CreateUMongoDBConfigTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 基础模板
	BaseTemplateId *string `required:"true"`

	// 集群类型
	ClusterType *string `required:"true"`

	// 模板描述
	Description *string `required:"false"`

	// mongo版本
	MongodbVersion *string `required:"true"`

	// 模板名称
	TemplateName *string `required:"true"`
}

// CreateUMongoDBConfigTemplateResponse is response schema for CreateUMongoDBConfigTemplate action
type CreateUMongoDBConfigTemplateResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	// 模板Id
	TemplateId string
}

// NewCreateUMongoDBConfigTemplateRequest will create request of CreateUMongoDBConfigTemplate action.
func (c *UMongoDBClient) NewCreateUMongoDBConfigTemplateRequest() *CreateUMongoDBConfigTemplateRequest {
	req := &CreateUMongoDBConfigTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateUMongoDBConfigTemplate

创建配置模板
*/
func (c *UMongoDBClient) CreateUMongoDBConfigTemplate(req *CreateUMongoDBConfigTemplateRequest) (*CreateUMongoDBConfigTemplateResponse, error) {
	var err error
	var res CreateUMongoDBConfigTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateUMongoDBConfigTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUMongoDBBackupURLRequest is request schema for DescribeUMongoDBBackupURL action
type DescribeUMongoDBBackupURLRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 文件备份ID
	BackupId *string `required:"false"`

	// 集群ID
	ClusterId *string `required:"true"`

	// 打包ID
	PackageId *int `required:"false"`

	// 备份链接过期时间（单位秒）
	ValidTime *int `required:"false"`
}

// DescribeUMongoDBBackupURLResponse is response schema for DescribeUMongoDBBackupURL action
type DescribeUMongoDBBackupURLResponse struct {
	response.CommonBase

	// 备份文件公网地址
	InternetAddress string

	// 备份文件内网地址
	IntranetAddress string
}

// NewDescribeUMongoDBBackupURLRequest will create request of DescribeUMongoDBBackupURL action.
func (c *UMongoDBClient) NewDescribeUMongoDBBackupURLRequest() *DescribeUMongoDBBackupURLRequest {
	req := &DescribeUMongoDBBackupURLRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUMongoDBBackupURL

获取实例备份下载链接
*/
func (c *UMongoDBClient) DescribeUMongoDBBackupURL(req *DescribeUMongoDBBackupURLRequest) (*DescribeUMongoDBBackupURLResponse, error) {
	var err error
	var res DescribeUMongoDBBackupURLResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUMongoDBBackupURL", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeUMongoDBInstanceRequest is request schema for DescribeUMongoDBInstance action
type DescribeUMongoDBInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"false"`

	// 实例资源ID
	ClusterId *string `required:"true"`

	// 集群类型，ReplicaSet：副本集，SharedCluster：分片集群
	ClusterType *string `required:"false"`
}

// DescribeUMongoDBInstanceResponse is response schema for DescribeUMongoDBInstance action
type DescribeUMongoDBInstanceResponse struct {
	response.CommonBase

	// 副本集信息
	ClusterInfo ClusterInfo
}

// NewDescribeUMongoDBInstanceRequest will create request of DescribeUMongoDBInstance action.
func (c *UMongoDBClient) NewDescribeUMongoDBInstanceRequest() *DescribeUMongoDBInstanceRequest {
	req := &DescribeUMongoDBInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeUMongoDBInstance

描述MongoDB实例
*/
func (c *UMongoDBClient) DescribeUMongoDBInstance(req *DescribeUMongoDBInstanceRequest) (*DescribeUMongoDBInstanceResponse, error) {
	var err error
	var res DescribeUMongoDBInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeUMongoDBInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMongoDBBackupParamRequest is request schema for GetUMongoDBBackupParam action
type GetUMongoDBBackupParamRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 实例ID
	ClusterId *string `required:"true"`
}

// GetUMongoDBBackupParamResponse is response schema for GetUMongoDBBackupParam action
type GetUMongoDBBackupParamResponse struct {
	response.CommonBase

	// 备份策略信息
	DataSet BackupParam

	// 错误信息
	Message string
}

// NewGetUMongoDBBackupParamRequest will create request of GetUMongoDBBackupParam action.
func (c *UMongoDBClient) NewGetUMongoDBBackupParamRequest() *GetUMongoDBBackupParamRequest {
	req := &GetUMongoDBBackupParamRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMongoDBBackupParam

获取实例备份策略
*/
func (c *UMongoDBClient) GetUMongoDBBackupParam(req *GetUMongoDBBackupParamRequest) (*GetUMongoDBBackupParamResponse, error) {
	var err error
	var res GetUMongoDBBackupParamResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMongoDBBackupParam", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMongoDBCfgTempItemRequest is request schema for GetUMongoDBCfgTempItem action
type GetUMongoDBCfgTempItemRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 配置模板Id
	TemplateId *string `required:"true"`
}

// GetUMongoDBCfgTempItemResponse is response schema for GetUMongoDBCfgTempItem action
type GetUMongoDBCfgTempItemResponse struct {
	response.CommonBase

	// 配置模板项
	DataSet []ConfigTemplateItem

	// 错误信息
	Message string
}

// NewGetUMongoDBCfgTempItemRequest will create request of GetUMongoDBCfgTempItem action.
func (c *UMongoDBClient) NewGetUMongoDBCfgTempItemRequest() *GetUMongoDBCfgTempItemRequest {
	req := &GetUMongoDBCfgTempItemRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMongoDBCfgTempItem

获取配置模板内容
*/
func (c *UMongoDBClient) GetUMongoDBCfgTempItem(req *GetUMongoDBCfgTempItemRequest) (*GetUMongoDBCfgTempItemResponse, error) {
	var err error
	var res GetUMongoDBCfgTempItemResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMongoDBCfgTempItem", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetUMongoDBRecoverTimeRangeRequest is request schema for GetUMongoDBRecoverTimeRange action
type GetUMongoDBRecoverTimeRangeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群id
	ClusterId *string `required:"true"`
}

// GetUMongoDBRecoverTimeRangeResponse is response schema for GetUMongoDBRecoverTimeRange action
type GetUMongoDBRecoverTimeRangeResponse struct {
	response.CommonBase

	// 最早可回档时间点
	EarliestTime int

	// 最晚可回档时间点
	LatestTime int
}

// NewGetUMongoDBRecoverTimeRangeRequest will create request of GetUMongoDBRecoverTimeRange action.
func (c *UMongoDBClient) NewGetUMongoDBRecoverTimeRangeRequest() *GetUMongoDBRecoverTimeRangeRequest {
	req := &GetUMongoDBRecoverTimeRangeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetUMongoDBRecoverTimeRange

获取UMongoDB可回档时间范围
*/
func (c *UMongoDBClient) GetUMongoDBRecoverTimeRange(req *GetUMongoDBRecoverTimeRangeRequest) (*GetUMongoDBRecoverTimeRangeResponse, error) {
	var err error
	var res GetUMongoDBRecoverTimeRangeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetUMongoDBRecoverTimeRange", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUMongoDBBackupRequest is request schema for ListUMongoDBBackup action
type ListUMongoDBBackupRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 实例ID
	ClusterId *string `required:"true"`
}

// ListUMongoDBBackupResponse is response schema for ListUMongoDBBackup action
type ListUMongoDBBackupResponse struct {
	response.CommonBase

	// 备份列表
	DataSet []BackupInfo

	// 错误信息
	Message string
}

// NewListUMongoDBBackupRequest will create request of ListUMongoDBBackup action.
func (c *UMongoDBClient) NewListUMongoDBBackupRequest() *ListUMongoDBBackupRequest {
	req := &ListUMongoDBBackupRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUMongoDBBackup

拉取实例备份列表
*/
func (c *UMongoDBClient) ListUMongoDBBackup(req *ListUMongoDBBackupRequest) (*ListUMongoDBBackupResponse, error) {
	var err error
	var res ListUMongoDBBackupResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUMongoDBBackup", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUMongoDBConfigTemplateRequest is request schema for ListUMongoDBConfigTemplate action
type ListUMongoDBConfigTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

}

// ListUMongoDBConfigTemplateResponse is response schema for ListUMongoDBConfigTemplate action
type ListUMongoDBConfigTemplateResponse struct {
	response.CommonBase

	// 配置模板列表
	DataSet []ConfigTemplate

	// 错误信息
	Message string
}

// NewListUMongoDBConfigTemplateRequest will create request of ListUMongoDBConfigTemplate action.
func (c *UMongoDBClient) NewListUMongoDBConfigTemplateRequest() *ListUMongoDBConfigTemplateRequest {
	req := &ListUMongoDBConfigTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUMongoDBConfigTemplate

拉取配置模板
*/
func (c *UMongoDBClient) ListUMongoDBConfigTemplate(req *ListUMongoDBConfigTemplateRequest) (*ListUMongoDBConfigTemplateResponse, error) {
	var err error
	var res ListUMongoDBConfigTemplateResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUMongoDBConfigTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUMongoDBMachineTypeRequest is request schema for ListUMongoDBMachineType action
type ListUMongoDBMachineTypeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

}

// ListUMongoDBMachineTypeResponse is response schema for ListUMongoDBMachineType action
type ListUMongoDBMachineTypeResponse struct {
	response.CommonBase

	//
	DataSet []MongodbMachineType
}

// NewListUMongoDBMachineTypeRequest will create request of ListUMongoDBMachineType action.
func (c *UMongoDBClient) NewListUMongoDBMachineTypeRequest() *ListUMongoDBMachineTypeRequest {
	req := &ListUMongoDBMachineTypeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUMongoDBMachineType

获取UmongDB支持机器类型列表
*/
func (c *UMongoDBClient) ListUMongoDBMachineType(req *ListUMongoDBMachineTypeRequest) (*ListUMongoDBMachineTypeResponse, error) {
	var err error
	var res ListUMongoDBMachineTypeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUMongoDBMachineType", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ListUMongoDBVersionRequest is request schema for ListUMongoDBVersion action
type ListUMongoDBVersionRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

}

// ListUMongoDBVersionResponse is response schema for ListUMongoDBVersion action
type ListUMongoDBVersionResponse struct {
	response.CommonBase

	//
	DataSet []MongoDBVersion
}

// NewListUMongoDBVersionRequest will create request of ListUMongoDBVersion action.
func (c *UMongoDBClient) NewListUMongoDBVersionRequest() *ListUMongoDBVersionRequest {
	req := &ListUMongoDBVersionRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ListUMongoDBVersion

获取UMongoDB支持版本列表
*/
func (c *UMongoDBClient) ListUMongoDBVersion(req *ListUMongoDBVersionRequest) (*ListUMongoDBVersionResponse, error) {
	var err error
	var res ListUMongoDBVersionResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ListUMongoDBVersion", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUMongoDBAdminPasswordRequest is request schema for ModifyUMongoDBAdminPassword action
type ModifyUMongoDBAdminPasswordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群ID
	ClusterId *string `required:"true"`

	// 集群新密码(密码格式使用BASE64编码)
	Password *string `required:"true"`
}

// ModifyUMongoDBAdminPasswordResponse is response schema for ModifyUMongoDBAdminPassword action
type ModifyUMongoDBAdminPasswordResponse struct {
	response.CommonBase

	// 错误信息
	Message string
}

// NewModifyUMongoDBAdminPasswordRequest will create request of ModifyUMongoDBAdminPassword action.
func (c *UMongoDBClient) NewModifyUMongoDBAdminPasswordRequest() *ModifyUMongoDBAdminPasswordRequest {
	req := &ModifyUMongoDBAdminPasswordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUMongoDBAdminPassword

修改MongoDB集群root密码
*/
func (c *UMongoDBClient) ModifyUMongoDBAdminPassword(req *ModifyUMongoDBAdminPasswordRequest) (*ModifyUMongoDBAdminPasswordResponse, error) {
	var err error
	var res ModifyUMongoDBAdminPasswordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUMongoDBAdminPassword", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUMongoDBAttributeRequest is request schema for ModifyUMongoDBAttribute action
type ModifyUMongoDBAttributeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群id
	ClusterId *string `required:"true"`

	// 集群新名称(输入长度为6~63位名称)
	Name *string `required:"false"`

	// 集群备注(Name和RemarkName必传其一)
	RemarkName *string `required:"false"`
}

// ModifyUMongoDBAttributeResponse is response schema for ModifyUMongoDBAttribute action
type ModifyUMongoDBAttributeResponse struct {
	response.CommonBase

	// 返回错误信息
	Message string
}

// NewModifyUMongoDBAttributeRequest will create request of ModifyUMongoDBAttribute action.
func (c *UMongoDBClient) NewModifyUMongoDBAttributeRequest() *ModifyUMongoDBAttributeRequest {
	req := &ModifyUMongoDBAttributeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUMongoDBAttribute

修改MongoDB集群名称
*/
func (c *UMongoDBClient) ModifyUMongoDBAttribute(req *ModifyUMongoDBAttributeRequest) (*ModifyUMongoDBAttributeResponse, error) {
	var err error
	var res ModifyUMongoDBAttributeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUMongoDBAttribute", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyUMongoDBBackupParamRequest is request schema for ModifyUMongoDBBackupParam action
type ModifyUMongoDBBackupParamRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 自动备份预期开始时间范围(00:00~23:59),默认 5:00~6:00
	AutoBackupToggleTime *string `required:"false"`

	// 自动备份预期星期几(1～7),默认 3,7 (周三，周日)
	AutoBackupToggleWeek *string `required:"false"`

	// 实例ID
	ClusterId *string `required:"true"`
}

// ModifyUMongoDBBackupParamResponse is response schema for ModifyUMongoDBBackupParam action
type ModifyUMongoDBBackupParamResponse struct {
	response.CommonBase

	// 错误信息
	Message string
}

// NewModifyUMongoDBBackupParamRequest will create request of ModifyUMongoDBBackupParam action.
func (c *UMongoDBClient) NewModifyUMongoDBBackupParamRequest() *ModifyUMongoDBBackupParamRequest {
	req := &ModifyUMongoDBBackupParamRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyUMongoDBBackupParam

修改实例备份策略
*/
func (c *UMongoDBClient) ModifyUMongoDBBackupParam(req *ModifyUMongoDBBackupParamRequest) (*ModifyUMongoDBBackupParamResponse, error) {
	var err error
	var res ModifyUMongoDBBackupParamResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyUMongoDBBackupParam", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RestartUMongoDBClusterRequest is request schema for RestartUMongoDBCluster action
type RestartUMongoDBClusterRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群ID
	ClusterId *string `required:"true"`
}

// RestartUMongoDBClusterResponse is response schema for RestartUMongoDBCluster action
type RestartUMongoDBClusterResponse struct {
	response.CommonBase

	// 集群ID
	ClusterId string
}

// NewRestartUMongoDBClusterRequest will create request of RestartUMongoDBCluster action.
func (c *UMongoDBClient) NewRestartUMongoDBClusterRequest() *RestartUMongoDBClusterRequest {
	req := &RestartUMongoDBClusterRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RestartUMongoDBCluster

重启集群
*/
func (c *UMongoDBClient) RestartUMongoDBCluster(req *RestartUMongoDBClusterRequest) (*RestartUMongoDBClusterResponse, error) {
	var err error
	var res RestartUMongoDBClusterResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RestartUMongoDBCluster", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StartUMongoDBClusterRequest is request schema for StartUMongoDBCluster action
type StartUMongoDBClusterRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群ID
	ClusterId *string `required:"true"`
}

// StartUMongoDBClusterResponse is response schema for StartUMongoDBCluster action
type StartUMongoDBClusterResponse struct {
	response.CommonBase

	// 集群ID
	ClusterId string

	// 错误信息
	Message string
}

// NewStartUMongoDBClusterRequest will create request of StartUMongoDBCluster action.
func (c *UMongoDBClient) NewStartUMongoDBClusterRequest() *StartUMongoDBClusterRequest {
	req := &StartUMongoDBClusterRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StartUMongoDBCluster

启动集群
*/
func (c *UMongoDBClient) StartUMongoDBCluster(req *StartUMongoDBClusterRequest) (*StartUMongoDBClusterResponse, error) {
	var err error
	var res StartUMongoDBClusterResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StartUMongoDBCluster", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StopUMongoDBClusterRequest is request schema for StopUMongoDBCluster action
type StopUMongoDBClusterRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Zone *string `required:"true"`

	// 集群ID
	ClusterId *string `required:"true"`
}

// StopUMongoDBClusterResponse is response schema for StopUMongoDBCluster action
type StopUMongoDBClusterResponse struct {
	response.CommonBase

	// 集群ID
	ClusterId string

	// 错误信息
	Message string
}

// NewStopUMongoDBClusterRequest will create request of StopUMongoDBCluster action.
func (c *UMongoDBClient) NewStopUMongoDBClusterRequest() *StopUMongoDBClusterRequest {
	req := &StopUMongoDBClusterRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StopUMongoDBCluster

停止集群
*/
func (c *UMongoDBClient) StopUMongoDBCluster(req *StopUMongoDBClusterRequest) (*StopUMongoDBClusterResponse, error) {
	var err error
	var res StopUMongoDBClusterResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StopUMongoDBCluster", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
