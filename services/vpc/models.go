// Code is generated by ucloud-model, DO NOT EDIT IT.

package vpc

/*
StatusInfo -
*/
type StatusInfo struct {

	// IP分配失败原因
	Message string

	// 枚举值：Succeeded，Failed
	StatusCode string
}

/*
IpsInfo -
*/
type IpsInfo struct {

	// 网关
	Gateway string

	// 内网IP地址
	Ip string

	// MAC地址
	Mac string

	// 掩码
	Mask string

	// IP分配结果，详见StatusInfo
	Status StatusInfo

	// 子网资源ID
	SubnetId string

	// VPC资源ID
	VPCId string
}

/*
IpInfo -
*/
type IpInfo struct {

	//
	Gateway string

	//
	Ip string

	//
	Mac string

	//
	Mask string

	//
	SubnetId string

	//
	VPCId string
}

/*
VIPSet - VIPSet
*/
type VIPSet struct {

	// 虚拟ip
	VIP string

	// 虚拟ip id
	VIPId string

	// VPC id
	VPCId string
}

/*
AssociationInfo - 绑定信息
*/
type AssociationInfo struct {

	// ACL的ID
	AclId string

	// 绑定ID
	AssociationId string

	// 创建的Unix时间戳
	CreateTime int

	// 绑定的子网ID
	SubnetworkId string

	// 所属的VPC ID
	VpcId string `deprecated:"true"`
}

/*
NetworkInterfaceInfo - 虚拟网卡信息
*/
type NetworkInterfaceInfo struct {

	// 绑定实例资源ID
	AttachInstanceId string

	// 创建时间
	CreateTime int

	// 是否是绑定实例的默认网卡 false:不是 true:是
	Default bool

	// 是否开启EIP直通模式
	EipDirectMode bool

	// EIP直通版本
	EipDirectVersion int

	// 默认网关
	Gateway string

	// 虚拟网卡资源ID
	InterfaceId string

	// 关联Mac
	MacAddress string

	// 虚拟网卡名称
	Name string

	// 内网IP掩码
	Netmask string

	// 关联内网IP。当前一个网卡仅支持绑定一个内网IP
	PrivateIpSet []string

	// 备注
	Remark string

	// 绑定状态
	Status int

	// 所属子网
	SubnetId string

	// 业务组
	Tag string

	// 所属VPC
	VPCId string
}

/*
InstanceNetworkInterface - 实例绑定的虚拟网卡信息
*/
type InstanceNetworkInterface struct {

	// 绑定实例资源ID
	AttachInstanceId string

	// 创建时间
	CreateTime int

	// 是否是绑定实例的默认网卡 false:不是 true:是
	Default bool

	// 虚拟网卡绑定的EIP ID信息
	EIPIdSet []string

	// 虚拟网卡绑定的防火墙ID信息
	FirewallIdSet []string

	// 默认网关
	Gateway string

	// 虚拟网卡资源ID
	InterfaceId string

	// 关联Mac
	MacAddress string

	// 虚拟网卡名称
	Name string

	// 内网IP掩码
	Netmask string

	// 关联内网IP。当前一个网卡仅支持绑定一个内网IP
	PrivateIpSet []string

	// 备注
	Remark string

	// 绑定状态
	Status int

	// 所属子网
	SubnetId string

	// 业务组
	Tag string

	// 所属VPC
	VPCId string
}

/*
NatGWIPResInfo - IP信息
*/
type NatGWIPResInfo struct {

	// 外网IP
	EIP string

	// IP的运营商信息
	OperatorName string
}

/*
NatGatewayIPSet - IPSet信息
*/
type NatGatewayIPSet struct {

	// 带宽
	Bandwidth int

	// EIP带宽类型
	BandwidthType string

	// 外网IP的 EIPId
	EIPId string

	// 外网IP信息
	IPResInfo []NatGWIPResInfo

	// 权重为100的为出口
	Weight int
}

/*
NatGatewaySubnetSet - natgw里面的子网信息
*/
type NatGatewaySubnetSet struct {

	// 子网网段
	Subnet string

	// 子网名字
	SubnetName string

	// 子网id
	SubnetworkId string
}

/*
NatGatewayDataSet - natgw的信息
*/
type NatGatewayDataSet struct {

	// natgw创建时间
	CreateTime int

	// 绑定的防火墙Id
	FirewallId string

	// 绑定的EIP 信息
	IPSet []NatGatewayIPSet

	// 枚举值，“enable”，默认出口规则使用了负载均衡；“disable”，默认出口规则未使用负载均衡。
	IsSnatpoolEnabled string

	// natgw id
	NATGWId string

	// natgw名称
	NATGWName string

	// 转发策略Id
	PolicyId []string

	// 备注
	Remark string

	// 子网 Id
	SubnetSet []NatGatewaySubnetSet

	// 业务组
	Tag string

	// 所属VPC Id
	VPCId string

	// 所属VPC 信息
	VPCInfo string `deprecated:"true"`

	// VPC名称
	VPCName string
}

/*
NATGWPolicyDataSet - DescribeNATGWPolicy
*/
type NATGWPolicyDataSet struct {

	// 目的地址
	DstIP string

	// 目的端口
	DstPort string

	// NAT网关Id
	NATGWId string

	// 转发策略Id
	PolicyId string

	// 转发策略名称
	PolicyName string

	// 协议类型
	Protocol string

	// 端口转发前端EIP
	SrcEIP string

	// 端口转发前端EIP Id
	SrcEIPId string

	// 源端口
	SrcPort string
}

/*
TargetResourceInfo - ACL规则应用目标资源信息。
*/
type TargetResourceInfo struct {

	// 资源内网IP
	PrivateIP string `deprecated:"true"`

	// 资源内网IP
	PrivateIp string

	// 资源ID
	ResourceId string

	// 资源名称
	ResourceName string

	// 资源类型
	ResourceType int

	// 资源绑定的虚拟网卡的ID
	SubResourceId string

	// 资源绑定的虚拟网卡的名称
	SubResourceName string

	// 资源绑定虚拟网卡的类型
	SubResourceType int

	// 子网ID
	SubnetworkId string
}

/*
AclEntryInfo - Entry的详细信息
*/
type AclEntryInfo struct {

	// IP段的CIDR信息
	CidrBlock string

	// 创建的Unix时间戳
	CreateTime int

	// 出向或者入向
	Direction string

	// 匹配规则的动作
	EntryAction string

	// Entry的ID
	EntryId string

	// 针对的IP协议
	IpProtocol string

	// Port的段信息
	PortRange string

	// 优先级
	Priority string

	// 应用目标资源数量。TargetType为0时不返回该值。
	TargetResourceCount int

	// 应用目标资源信息。TargetType为0时不返回该值。具体结构见下方TargetResourceInfo
	TargetResourceList []TargetResourceInfo

	// 应用目标类型。 0代表“子网内全部资源” ，1代表“子网内指定资源” 。
	TargetType int

	// 更改的Unix时间戳
	UpdateTime int
}

/*
AclInfo - Acl的基础信息
*/
type AclInfo struct {

	// ACL的ID
	AclId string

	// 名称
	AclName string

	// 所有的绑定关系，具体结构见下方AssociationInfo
	Associations []AssociationInfo

	// 创建的Unix时间戳
	CreateTime int

	// 描述
	Description string

	// 所有的规则
	Entries []AclEntryInfo

	// 更改的Unix时间戳
	UpdateTime int

	// ACL所属的VPC ID
	VpcId string
}

/*
NetworkInterface - 虚拟网卡信息
*/
type NetworkInterface struct {

	// 绑定实例资源ID
	AttachInstanceId string

	// 创建时间
	CreateTime int

	// 是否是绑定实例的默认网卡 false:不是 true:是
	Default bool

	// 默认网关
	Gateway string

	// 虚拟网卡资源ID
	InterfaceId string

	// 关联Mac
	MacAddress string

	// 虚拟网卡名称
	Name string

	// 内网IP掩码
	Netmask string

	// 关联内网IP。当前一个网卡仅支持绑定一个内网IP
	PrivateIpSet []string

	// 备注
	Remark string

	// 绑定状态
	Status int

	// 所属子网
	SubnetId string

	// 业务组
	Tag string

	// 所属VPC
	VPCId string
}

/*
SecGroupSimpleInfo - 安全组简略信息
*/
type SecGroupSimpleInfo struct {

	// 安全组名称
	Name string

	// 安全组资源ID
	SecGroupId string
}

/*
ResourceSecgroupInfo - 资源的安全组信息
*/
type ResourceSecgroupInfo struct {

	// 资源绑定安全组数量
	Count int

	// 资源ID
	ResourceId string

	// 详见SecGroupSimpleInfo
	SecGroupInfo []SecGroupSimpleInfo
}

/*
ResourceExInfo - 资源额外信息（for 安全组）
*/
type ResourceExInfo struct {

	// 主机外网IP
	EIP []string

	// 主机内网IP
	IP []string

	// 资源名称
	ResourceName string

	// 父级资源ID
	SuperResourceId string

	// 父级资源名称
	SuperResourceName string

	// 弹性网卡信息
	Uni []ResourceSecgroupInfo
}

/*
BindingSecGroupInfo -
*/
type BindingSecGroupInfo struct {

	// 安全组名称
	Name string

	// 该资源与该安全组绑定的优先级
	Priority int

	// 安全组 ID
	SecGroupId string

	// 安全组所属 VPC
	VPCId string
}

/*
ResourceSecgroupInfoEx - 资源绑定的安全组信息。ResourceSecgroupInfoEx 中如果资源是非网卡资源（如云主机）且绑定虚拟网卡，
则该资源不会绑定安全组，安全组只会绑定到虚拟网卡上；故 Count 为 0，Uni 非空，
Uni 为一个网卡数组，表示每个虚拟网卡绑定的安全组信息。
*/
type ResourceSecgroupInfoEx struct {

	// 该资源绑定的安全组数量
	Count int

	// 资源额外信息
	ExInfo ResourceExInfo

	// 表示是否允许绑定安全组
	PermitAssociate bool

	// 资源 ID
	ResourceId string

	// 资源名称
	ResourceName string

	// 绑定安全组信息
	SecGroupInfo []BindingSecGroupInfo
}

/*
RouteRuleInfo - 路由规则信息
*/
type RouteRuleInfo struct {

	// 项目ID信息
	AccountId int

	// 目的地址
	DstAddr string

	// 保留字段，暂未使用
	DstPort int

	// 实例类型，枚举值：UHOST，云主机；UNI，虚拟网卡；PHOST，物理云主机
	InstanceType string

	// 路由下一跳资源ID
	NexthopId string

	// 路由表下一跳类型。LOCAL，本VPC内部通信路由；PUBLIC，公共服务路由；CNAT，外网路由；UDPN，跨域高速通道路由；HYBRIDGW，混合云路由；INSTANCE，实例路由；VNET，VPC联通路由；IPSEC VPN，指向VPN网关的路由。
	NexthopType string

	// 保留字段，暂未使用
	OriginAddr string

	// 保留字段，暂未使用
	Priority int

	// 路由规则备注
	Remark string

	// 规则ID
	RouteRuleId string

	// 路由表资源ID
	RouteTableId string

	// 路由规则类型。0，系统路由规则；1，自定义路由规则
	RuleType int

	// 保留字段，暂未使用
	SrcAddr string

	// 保留字段，暂未使用
	SrcPort int

	// 所属的VPC
	VNetId string
}

/*
RouteTableInfo - 路由表信息
*/
type RouteTableInfo struct {

	// 创建时间戳
	CreateTime int

	// 路由表备注
	Remark string

	// 路由规则
	RouteRules []RouteRuleInfo

	// 路由表资源ID
	RouteTableId string

	// 路由表类型。1为默认路由表，0为自定义路由表
	RouteTableType int

	// 绑定该路由表的子网数量
	SubnetCount int

	// 绑定该路由表的子网
	SubnetIds []string

	// 路由表所属业务组
	Tag string

	// 路由表所属的VPC资源ID
	VPCId string

	// 路由表所属的VPC资源名称
	VPCName string
}

/*
SecGroupRuleInfo - 安全组规则信息
*/
type SecGroupRuleInfo struct {

	// "Ingress/Egress"，入站规则/出站规则
	Direction string

	// 目标端口
	DstPort string

	// 地址
	IPRange string

	// IP 版本，如 "IPv4"。支持 IPv6 后废弃
	IPVersion string

	// 优先级
	Priority int

	// 协议类型
	ProtocolType string

	// 安全组规则备注
	Remark string

	// 匹配策略
	RuleAction string

	// 规则ID
	RuleId string
}

/*
SecGroupInfo - 安全组信息
*/
type SecGroupInfo struct {

	// 用户 ID
	Account int

	// 创建的时间，格式为Unix Timestamp，如 1747030299
	CreateTime int

	// 安全组名称
	Name string

	// 备注
	Remark string

	// 安全组组中的规则列表，参见 SecGroupRuleInfo
	Rule []SecGroupRuleInfo

	// 安全组资源ID
	SecGroupId string

	// 业务组
	Tag string

	// 安全组类型，枚举值为： "user defined", 自定义创建安全组； "recommend web", 使用Web模板创建的安全组； "recommend non web", 使用非Web模板创建的安全组
	Type string

	// VPC资源ID
	VPCId string
}

/*
SecGroupResourceInfo - 安全组绑定资源信息
*/
type SecGroupResourceInfo struct {

	// 名称
	Name string

	// 内网IP
	PrivateIp string

	// 资源ID
	ResourceId string

	// 资源类型。"unatgw"，NAT网关； "uhost"，云主机； "upm"，物理云主机； "hadoophost"，hadoop节点； "fortresshost"，堡垒机； "udhost"，私有专区主机；"udockhost"，容器；"dbaudit"，数据库审计，“uni”，虚拟网卡。
	ResourceType string

	// 资源绑定的虚拟网卡的ID
	SubResourceId string

	// 绑定的虚拟网卡的名称
	SubResourceName string

	// 绑定的虚拟网卡的类型，“uni”，虚拟网卡
	SubResourceType string

	// 业务组
	Tag string

	// 可用区
	Zone int
}

/*
SnatDnatRuleInfo -
*/
type SnatDnatRuleInfo struct {

	// EIP的IP地址
	EIP string

	// 映射所使用的NAT网关资源ID
	NATGWId string

	// 内网IP地址
	PrivateIp string
}

/*
NATGWSnatRule - Nat网关的Snat规则
*/
type NATGWSnatRule struct {

	// snat规则名称
	Name string

	// EIP地址，如106.76.xx.xx
	SnatIp string

	// 资源的内网IP地址
	SourceIp string

	// SourceIp所属的子网id
	SubnetworkId string
}

/*
VPCSubnetInfoSet - 子网信息
*/
type VPCSubnetInfoSet struct {
	// 名称 【已废弃】
	Name string `deprecated:"true"`

	// 虚拟路由 id【已废弃】
	VRouterId string `deprecated:"true"`

	// 可用IP数量
	AvailableIPs int

	// 可用IPv6数量
	AvailableIPv6Count int

	// 创建时间
	CreateTime int

	// 子网网关
	Gateway string

	// 是否有natgw
	HasNATGW bool

	// IPv6网段
	IPv6Network string

	// 子网掩码
	Netmask string

	// 备注
	Remark string

	// 路由表Id
	RouteTableId string

	// 子网网段
	Subnet string

	// 子网Id
	SubnetId string

	// 子网名称
	SubnetName string

	// 子网类型
	SubnetType int

	// 业务组
	Tag string

	// VPCId
	VPCId string

	// VPC名称
	VPCName string

	// 可用区名称
	Zone string
}

/*
ResourceInfo - 子网下资源
*/
type ResourceInfo struct {

	// 资源ip
	IP string

	// 资源的IPv6地址
	IPv6Address string

	// 资源名称
	Name string

	// 资源Id
	ResourceId string

	// 资源类型。对应的资源类型：UHOST，云主机；PHOST，物理云主机；ULB，负载均衡；UHADOOP_HOST，hadoop节点；UFORTRESS_HOST，堡垒机；UNATGW，NAT网关；UKAFKA，Kafka消息队列；UMEM，内存存储；DOCKER，容器集群；UDB，数据库；UDW，数据仓库；VIP，内网VIP.
	ResourceType string

	// 资源绑定的虚拟网卡的实例ID
	SubResourceId string

	// 资源绑定的虚拟网卡的实例名称
	SubResourceName string

	// 资源绑定的虚拟网卡的类型
	SubResourceType string
}

/*
VIPDetailSet - VIPDetailSet
*/
type VIPDetailSet struct {

	// 创建时间
	CreateTime int

	// VIP名称
	Name string

	// 真实主机ip
	RealIp string

	// VIP备注
	Remark string

	// 子网id
	SubnetId string

	// VIP所属业务组
	Tag string

	// 虚拟ip
	VIP string

	// 虚拟ip id
	VIPId string

	// VPC id
	VPCId string

	// 地域
	Zone string
}

/*
IPv6NetworkInfo -
*/
type IPv6NetworkInfo struct {

	// IPv6网段
	IPv6Network string

	// IPv6子网数量
	IPv6SubnetCount int

	// 类型
	OperatorName string
}

/*
VPCNetworkInfo - vpc地址空间信息
*/
type VPCNetworkInfo struct {

	// vpc地址空间
	Network string

	// 地址空间中子网数量
	SubnetCount int
}

/*
VPCInfo - VPC信息
*/
type VPCInfo struct {

	// 创建时间
	CreateTime int

	// VPC关联的IPv6网段
	IPv6Network string

	// VPC关联的IPv6网段信息
	IPv6NetworkInfos []IPv6NetworkInfo

	// VPC名称
	Name string

	// VPC网段
	Network []string

	// vpc地址空间信息，详见VPCNetworkInfo
	NetworkInfo []VPCNetworkInfo

	// VPC关联的IPv6网段所属运营商
	OperatorName string

	// 子网数
	SubnetCount int

	// 业务组
	Tag string

	// 更新时间
	UpdateTime int

	// VPC资源ID
	VPCId string

	// DefaultVPC 默认VPC，DefinedVPC，自定义VPC
	VPCType string
}

/*
VPCIntercomInfo -
*/
type VPCIntercomInfo struct {

	// 项目Id（数字）
	AccountId int

	// 所属地域
	DstRegion string

	// VPC名字
	Name string

	// VPC的地址空间
	Network []string

	// 项目Id
	ProjectId string

	// 业务组（未分组显示为 Default）
	Tag string

	// VPCId
	VPCId string

	// vpc类型（1表示托管VPC，0表示公有云VPC）
	VPCType int
}

/*
DescribeWhiteListResourceObjectIPInfo - DescribeWhiteListResource
*/
type DescribeWhiteListResourceObjectIPInfo struct {

	// natgw字符串
	GwType string

	// 白名单资源的内网IP
	PrivateIP string

	// 白名单资源Id信息
	ResourceId string

	// 白名单资源名称
	ResourceName string

	// 白名单资源类型
	ResourceType string

	// 资源绑定的虚拟网卡的实例ID
	SubResourceId string

	// 资源绑定的虚拟网卡的实例名称
	SubResourceName string

	// 资源绑定的虚拟网卡的类型
	SubResourceType string

	// 白名单资源所属VPCId
	VPCId string
}

/*
NatGWWhitelistDataSet - nat网关白名单数据
*/
type NatGWWhitelistDataSet struct {

	// 白名单开关标记
	IfOpen int

	// NATGateWay Id
	NATGWId string

	// 白名单详情
	ObjectIPInfo []DescribeWhiteListResourceObjectIPInfo
}

/*
GetAvailableResourceForPolicyDataSet - GetAvailableResourceForPolicy
*/
type GetAvailableResourceForPolicyDataSet struct {

	// 资源对应的内网Ip
	PrivateIP string

	// 资源的Id
	ResourceId string

	// 资源类型。"uhost"：云主机； "upm"，物理云主机； "hadoophost"：hadoop节点； "fortresshost"：堡垒机： "udockhost"，容器
	ResourceType string
}

/*
GetAvailableResourceForSnatRuleDataSet -
*/
type GetAvailableResourceForSnatRuleDataSet struct {

	// 资源内网IP
	PrivateIP string

	// 资源ID
	ResourceId string

	// 资源名称
	ResourceName string

	// 资源类型
	ResourceType string

	// 资源所属VPC的ID
	SubnetworkId string

	// 资源所属子网的ID
	VPCId string
}

/*
GetAvailableResourceForWhiteListDataSet - GetAvailableResourceForWhiteList
*/
type GetAvailableResourceForWhiteListDataSet struct {

	// 资源的内网Ip
	PrivateIP string

	// 资源类型Id
	ResourceId string

	// 资源名称
	ResourceName string

	// 资源类型。"uhost"：云主机； "upm"，物理云主机； "hadoophost"：hadoop节点； "fortresshost"：堡垒机： "udockhost"，容器
	ResourceType string

	// 资源绑定的虚拟网卡的实例ID
	SubResouceId string `deprecated:"true"`

	// 资源绑定的虚拟网卡的实例类型
	SubResouceType string `deprecated:"true"`

	// 资源绑定的虚拟网卡的实例ID
	SubResourceId string

	// 资源绑定的虚拟网卡的实例名称
	SubResourceName string

	// 资源绑定的虚拟网卡的实例类型
	SubResourceType string

	// 资源所属子网Id
	SubnetworkId string

	// 资源所属VPCId
	VPCId string
}

/*
NatgwSubnetDataSet - natgw可以绑定的子网
*/
type NatgwSubnetDataSet struct {

	// 是否绑定NATGW
	HasNATGW bool

	// 掩码
	Netmask string

	// 子网网段
	Subnet string

	// 子网id
	SubnetId string

	// 子网名字
	SubnetName string
}
